<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>#HotkeyModifierTimeout</title>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<link href="../css/default.css" rel="stylesheet" type="text/css">
</head>
<body>

<h1>#HotkeyModifierTimeout</h1>

<p>Beeinflusst das Verhalten von <a href="../Hotkeys.htm">Hotkey</a>-Modifikatoren: CTRL, ALT, WIN und SHIFT.</p>

<pre class="Syntax">#HotkeyModifierTimeout Millisekunden</pre>
<h3>Parameter</h3>
<table class="info">
  <tr>
    <td width="15%">Millisekunden</td>
    <td width="85%">Die Länge des Intervalls in Millisekunden. Der Wert kann -1 sein, damit es nie zur Zeitüberschreitung kommt (Modifikatoren werden immer wieder nach hinten verschoben), oder 0, damit es immer zur Zeitüberschreitung kommt (Modifikatoren werden nicht hinten verschoben). </td>
  </tr>
</table>
<h3>Bemerkungen</h3>
<p>Diese Anweisung <strong>muss nicht</strong> verwendet werden, wenn:</p>
<ul>
  <li>Hotkeys ihre Tastatureingaben mit den Methoden <a href="Send.htm#SendInput">SendInput</a> oder <a href="Send.htm#SendPlay">SendPlay</a> sendet. Weil diese Methoden das physische Drücken und Loslassen der Tasten aufschieben, bis der Send-Befehl durchgeführt wurde.</li>
  <li>das Script den Tastatur-Hook installiert hat (kann mit "View-Key history" in der Menüleiste des Hauptfensters oder mit dem <a href="KeyHistory.htm">KeyHistory</a>-Befehl überprüft werden). Weil der Hook verfolgen kann, welche Modifikatoren (ALT/STRG/WIN/UMSCHALT) der Benutzer physisch gedrückt hält und nicht die Zeitüberschreibung verwenden müssen.</li>
</ul>
<p>Zur Veranschaulichung dieser Anweisung wird folgendes Beispiel in Betracht gezogen:<br> ^!a::Send, abc</p>
<p>Wenn der <a href="Send.htm">Send</a>-Befehl ausgeführt wird, dann lässt er zuerst die STRG- und ALT-Tasten los, damit die Zeichen richtig gesendet werden. Nachdem alle Tasten gesendet wurden, weiß der Befehl nicht mehr, ob er STRG und ALT sicher nach hinten verschieben kann (damit sie passen, wenn der Benutzer sie immer noch gedrückt hält). Aber wenn weniger als die angegebene Anzahl von Millisekunden vergangen sind, dann nimmt der Befehl an, dass der Benutzer nicht die Chance hatte, die Tasten loszulassen und wird sie daher nach hinter verschieben, damit sie ihrem physischen Status entsprechen. Ansonsten werden die Modifikatoren nicht hinten verschoben und der Benutzer muss die Tasten loslassen und erneut drücken, damit sie die gleiche oder eine andere Taste modifizieren können.</p>
<p>Die Zeitüberschreitung sollte auf einem Wert gesetzt werden, der kleiner als die Zeitmenge ist, die der Benutzer benötigt, Modifikatoren eines Hotkeys zudrücken, bis sie wieder losgelassen werden. Ansonsten wird der gedrückte Zustand von den Modifikatoren möglicherweise wiederhergestellt, auch wenn der Benutzer sie nicht physisch drückt. </p>
<p>Die Notwendigkeit dieser Anweisung kann wie folgt reduziert oder eliminiert werden:</p>
<ul>
  <li>Installiert den Tastatur-Hook mit der Zeile <a href="_InstallKeybdHook.htm">#InstallKeybdHook</a> irgendwo im Script (der Hook wird allerdings nicht von Win9x unterstützt).</li>
  <li>Verwendet die Methoden <a href="Send.htm#SendInput">SendInput</a> oder <a href="Send.htm#SendPlay">SendPlay</a> anstelle der traditionellen Methode <a href="Send.htm#SendEvent">SendEvent</a>.</li>
  <li>Wenn die traditionelle Methode <a href="Send.htm#SendEvent">SendEvent</a> verwendet wird, dann reduziert <a href="SetKeyDelay.htm">SetKeyDelay</a> von 0 auf -1, damit die Tastatureingaben schneller gesendet werden.</li>
</ul>
<p>Wenn diese Anweisung nicht angegeben ist, dann wird standardmäßig 50 verwendet.</p>
<h3>Verwandte Befehle</h3>
<p><a href="GetKeyState.htm">GetKeyState</a></p>
<h3>Beispiel</h3>
<pre class="NoIndent">#HotkeyModifierTimeout 100</pre>

</body>
</html>
