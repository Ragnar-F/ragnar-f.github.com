<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>#MaxThreadsBuffer</title>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<link href="../css/default.css" rel="stylesheet" type="text/css">
</head>
<body>

<h1>#MaxThreadsBuffer</h1>

<p>Bewirkt, dass einige oder alle <a href="../Hotkeys.htm">Hotkeys</a> die Tastatureingaben zwischenspeichern anstatt ignorieren, wenn der Grenzwert von <a href="_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a> erreicht wurde. </p>

<pre class="Syntax">#MaxThreadsBuffer On|Off</pre>
<h3>Parameter</h3>
<table class="info">
  <tr>
    <td width="15%">On|Off</td>
    <td width="85%"><p>On: Alle Hotkey-Subroutinen zwischen hier und der nächsten Anweisung "<em>#MaxThreadsBuffer ON</em>" werden die Tastatureingaben des Hotkeys zwischenspeichern anstatt ignorieren, wenn der Grenzwert von <a href="_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a> erreicht wurde.</p>
    <p>Off: Standardwert. Das Drücken eines Hotkeys wird ignoriert, wenn dieser Hotkey bereits die maximale Anzahl an Threads ausführt (normalerweise 1, kann aber mit <a href="_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a> geändert werden).</p></td>
  </tr>
</table>

<h3>Bemerkungen</h3>
<p>Diese Anweisung wird selten verwendet, da diese Art von Zwischenspeicherung (standardmäßig OFF) in der Regel mehr schadet als nützt. Zum Beispiel: wenn der Benutzer versehentlich ein Hotkey doppelt gedrückt hat, dann wird mit ON die Hotkey-Subroutine ein zweites Mal ausgeführt, wenn der erste <a href="../misc/Threads.htm">Thread</a> weniger als 1 Sekunde zur Ausführung braucht (diese Art von Zwischenspeicherung läuft nach einer Sekunde ab). Beachtet, dass AutoHotkey die Hotkeys unterschiedlich zwischenspeichert (z. B. "<a href="Thread.htm">Thread Interrupt</a>" und "<a href="Critical.htm">Critical</a>"). Es kann aber sein, dass dieser bestimmte Weg schädlich ist, daher ist diese Anweisung standardmäßig deaktiviert.</p>
<p>Diese Anweisung wird hauptsächlich verwendet, um die Reaktionsfähigkeit der Auto-Wiederholung der Tastatur zu erhöhen. Zum Beispiel: Wenn der Benutzer ein Hotkey mit <a href="_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a> auf 1 (Standardwert) gedrückt hält, dann werden alle eingehenden Tastatureingaben ignoriert, falls diese Hotkey-Subroutine bereits läuft. Wenn daher die Subroutine endet, dann muss sie auf die nächste eingehende Auto-Wiederholung der Tastatureingabe warten, dass mindestens 50 ms dauern kann, weil sie sich zwischen den Tastatureingaben und dem Auto-Wiederholungszyklus befindet. Die Verzögerung von 50 ms kann verhindert werden, wenn diese Anweisung für jeden Hotkey aktiviert wird,  der die bestmögliche Reaktionszeit benötigt, während eine automatische Wiederholung erfolgt.</p>
<p>Wie bei allen Anweisungen sollte diese Anweisung nicht als Befehl verwendet werden (es macht zum Beispiel keinen Sinn, wenn sich die Anweisung in einer Subroutine befindet). Positioniert diese Anweisung stattdessen direkt vor dem ersten Hotkey, der davon beeinflusst werden soll.</p>
<h3>Verwandte Befehle</h3>
<p><a href="_MaxThreads.htm">#MaxThreads</a>, <a href="_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a><a href="../misc/Threads.htm">, </a><a href="Critical.htm">Critical</a>, <a href="Thread.htm">Thread (Befehl)</a>, <a href="../misc/Threads.htm">Threads</a>, <a href="Hotkey.htm">Hotkey</a>, <a href="_MaxHotkeysPerInterval.htm">#MaxHotkeysPerInterval</a>, <a href="_HotkeyInterval.htm">#HotkeyInterval</a>, <a href="ListHotkeys.htm">ListHotkeys</a></p>
<h3>Beispiel</h3>
<pre class="NoIndent">#MaxThreadsBuffer on
#x::MsgBox, Dieser Hotkey verwendet diese Art von Zwischenspeicherung.
#y::MsgBox, Dieser Hotkey auch.
#MaxThreadsBuffer off
#z::MsgBox, Aber nicht dieser Hotkey.</pre>

</body>
</html>
