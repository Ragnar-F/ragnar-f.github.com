<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>WinClose</title>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<link href="../css/default.css" rel="stylesheet" type="text/css">
</head>
<body>

<h1>WinClose</h1>

<p>Schließt das angegebene Fenster.</p>

<pre class="Syntax">WinClose [, Fenstertitel, Fenstertext, Wartezeit, Titelausnahme, Textausnahme]</pre>
<h3>Parameter</h3>
<table class="info">
  <tr>
    <td width="15%">Fenstertitel</td>
    <td width="85%">Der Titel oder Teiltitel des Fensters (das Übereinstimmungsverhalten wird mit <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a> bestimmt). Wenn dieser und die anderen 3 Fensterparameter nicht vorhanden sind, dann wird das <a href="../LastFoundWindow.htm">zuletzt gefundene Fenster</a> verwendet. Wenn dieser den Buchstaben A enthält und die anderen 3 Fensterparameter nicht vorhanden sind, dann wird das aktive Fenster verwendet. Bei Verwendung einer Fensterklasse muss ahk_class ExakterKlassenname angegeben werden (wird von Windows Spy angezeigt). Bei Verwendung einer <a href="Process.htm">Prozess-Kennung (PID)</a> muss ahk_pid %VariableMitPID% angegeben werden. Um eine Fenstergruppe zuschließen, verwendet <a href="GroupAdd.htm">ahk_group EigenerGruppenname</a> (in diesem Fall müssen <em>Fenstertext</em>, <em>Titelausnahme</em> und <em>Textausnahme</em> leer sein). Bei Verwendung einer <a href="WinGet.htm">eindeutigen ID-Nummer</a> eines Fensters muss ahk_id %VariableMitID% angegeben werden. Die Suche kann durch Angabe <a href="../LastFoundWindow.htm#multi">mehrerer Kriterien</a> eingeschränkt werden. Zum Beispiel: <em>Eigene Datei.txt ahk_class Notepad</em></td>
  </tr>
  <tr>
    <td>Fenstertext</td>
    <td>Wenn vorhanden, dann muss dieser Parameter einen Teil der einzelnen Textelemente des Fensters enthalten (wird von Windows Spy angezeigt). Versteckte Textelemente werden erfasst, wenn <a href="DetectHiddenText.htm">DetectHiddenText</a> aktiv ist.</td>
  </tr>
  <tr>
    <td>Wartezeit</td>
    <td>Wenn leer oder nicht vorhanden, dann wartet der Befehl überhaupt nicht. Wenn 0, dann wartet er 500ms. Ansonsten wartet er die angegebene Anzahl an Sekunden (kann einen Dezimalpunkt oder einen <a href="../Variables.htm#Expressions">Ausdruck</a> enthalten), bis das Fenster geschlossen wird. Wenn das Fenster nicht innerhalb der Zeit geschlossen wird, dann wird das Script fortgesetzt. ErrorLevel wird <strong>nicht</strong> von diesem Befehl gesetzt, daher verwendet <a href="IfWinExist.htm">IfWinExist</a> oder <a href="WinWaitClose.htm">WinWaitClose</a>, wenn geschlossene Fenster ermittelt werden müssen. Während der Befehl in einem Wartezustand ist, können neue <a href="../misc/Threads.htm">Threads</a> mittels <a href="../Hotkeys.htm">Hotkey</a>, <a href="Menu.htm">benutzerdefinierte Menüeinträge</a> oder <a href="SetTimer.htm">Timer</a> gestartet werden.</td>
  </tr>
  <tr>
    <td>Titelausnahme</td>
    <td>Fenstertitel mit diesem Wert werden nicht berücksichtigt.</td>
  </tr>
  <tr>
    <td>Textausnahme</td>
    <td>Fenstertexte mit diesem Wert werden nicht berücksichtigt.</td>
  </tr>
</table>

<h3>Bemerkungen</h3>
<p>Dieser Befehl sendet eine Schließen-Meldung zum Fenster. Das Ergebnis hängt vom Fenster ab (es bittet darum, Daten zu speichern, usw.).</p>
<p>Wenn ein übereinstimmendes Fenster aktiv ist, dann wird vorrangig dieses Fenster anstelle anderer übereinstimmende Fenster darunter geschlossen. Wenn mehr als ein Fenster übereinstimmt, dann wird das oberste (aktuellste verwendete) Fenster geschlossen.</p>
<p>Dieser Befehl arbeitet immer nur mit dem ersten gefundenen Fenster, es sein denn, es befindet sich <a href="GroupAdd.htm">ahk_group Groupname</a> in <em>Fenstertitel</em>. In dem Fall sind alle Fenster der Gruppe betroffen.</p>
<p>WinClose sendet eine WM_CLOSE-Meldung zum Zielfenster, eine etwas gewaltsame Methode zum Schließen des Fensters. Alternativ kann auch die folgende Meldung verwendet werden. Verhält sich aber möglicherweise anders, weil dieser Schließvorgang mit dem Drücken von Alt+F4 oder der Schließen-Schaltfläche in der Fenstertitelleiste vergleichbar ist:</p>
<pre>PostMessage, 0x112, 0xF060,,, Fenstertitel, Fenstertext <em>; 0x112 = WM_SYSCOMMAND, 0xF060 = SC_CLOSE</em></pre>
<p>Wenn ein Fenster nicht mit WinClose geschlossen werden kann, dann versucht <a href="WinKill.htm">WinKill</a>.</p>
<p>Fenstertitel und -texte sind von der Groß- und Kleinschreibung abhängig. Solange <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> deaktiviert ist, werden versteckte Fenster nicht wahrgenommen.</p>
<h3>Verwandte Befehle</h3>
<p><a href="WinKill.htm">WinKill</a>, <a href="WinWaitClose.htm">WinWaitClose</a>, <a href="Process.htm">Process</a>, <a href="WinActivate.htm">WinActivate</a>, <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>, <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a>, <a href="../LastFoundWindow.htm">Zuletzt gefundenes Fenster</a>, <a href="IfWinExist.htm">IfWinExist</a>, <a href="IfWinActive.htm">IfWinActive</a>, <a href="WinWaitActive.htm">WinWaitActive</a>, <a href="WinWait.htm">WinWait</a>, <a href="GroupActivate.htm">GroupActivate</a></p>
<h3>Beispiel</h3>
<pre class="NoIndent">IfWinExist, Unbenannt - Editor
    WinClose <em>; zuletzt gefundenes Fenster verwenden</em>
Else
    WinClose, Rechner</pre>

</body>
</html>
