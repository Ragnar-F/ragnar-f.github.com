<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Hotkeys (Maus-, Joystick- und Tastatur-Tastenkombinationen)</title>
<meta name="description" content=
"Free utility to create hotkeys, shortcuts, and macros for keyboard, mouse, and joystick. Any combination of keys and buttons can become a hotkey.">
<meta name="keywords" content=
"hotkey,hotkeys,hot key,hot keys,shortcut,shortcuts,shortcut key,shortcut keys,keyboard shortcut,keyboard shortcuts,button,buttons,click,press">
<meta http-equiv="Content-Type" content="text/html; charset=us-ascii">
<link rel="alternate" type="application/rss+xml" title="AutoHotkey Forum RSS" href="../forum/rss.php">
<link href="css/default.css" rel="stylesheet" type="text/css">
</head>
<body>
<h1>Hotkeys (Maus-, Joystick- und Tastatur-Tastenkombinationen)</h1>
<h2>Inhaltsverzeichnis</h2>
<ul>
<li><a href="#Intro">Einf&uuml;hrung und einfache Beispiele</a></li>
<li><a href="#Symbols">Tabelle der Pr&auml;fix-Symbole (Modifikatoren)</a></li>
<li><a href="#Context">Kontextabh&auml;ngige Hotkeys</a></li>
<li><a href="#Features">Benutzerdefinierte Kombinationen und andere Funktionen</a></li>
<li><a href="#Wheel">Mausrad-Hotkeys</a></li>
<li><a href="#Remarks">Tipps und Hinweise</a></li>
</ul>
<h2 id="Intro">Einf&uuml;hrung und einfache Beispiele</h2>
<p>Hotkeys werden manchmal auch als Tastenkombinationen bezeichnet, weil sie in der Lage sind, eine Aktion einfach auszul&ouml;sen (z. B. das Ausf&uuml;hren eines Programms oder <a href="misc/Macros.htm">Tastatur-Makros</a>). Im folgenden Beispiel wird der Hotkey Win+N konfiguriert, um den Editor zu starten. Die Raute [#] entspricht der Windows-Taste, die als <em>Modifikator</em> bekannt ist:</p>
<pre>
#n::
Run Notepad
Return
</pre>
<p>Das <a href="commands/Return.htm">Return</a> in der letzten Zeile oben dient dazu, den Hotkey zu beenden. Wenn allerdings ein Hotkey nur eine einzige Zeile ausf&uuml;hren muss, dann kann diese Zeile auf der rechten Seite der zwei Doppelpunkte stehen. Mit anderen Worten ist das <a href="commands/Return.htm">Return</a> indirekt:</p>
<pre>
#n::Run Notepad
</pre>
<p>Um mehr als einen Modifikator mit einem Hotkey zu verwenden, listet diese nacheinander auf (die Reihenfolge spielt keine Rolle). Das folgende Beispiel verwendet <strong>^!</strong>, um Steuerung+Alt+S kenntlich zu machen:</p>
<pre>
^!s::
<a href="commands/Send.htm">Send</a> Mit freundlichen Gr&uuml;&szlig;en,{Enter}John Smith  <em>; Diese Zeile sendet Tastatureingaben an das aktive (vorderste) Fenster.</em>
Return
</pre>
<h3 id="Symbols">Es k&ouml;nnen folgende Modifikatorsymbole verwendet werden, um Hotkeys zu definieren:</h3>
<table class="info">
<tr>
<th>Symbol</th>
<th>Beschreibung</th>
</tr>
<tr>
<td width="30"><strong>#</strong></td>
<td>Win (Windows-Logo-Taste). Windows Vista und h&ouml;her: seit v1.0.48.01 warten Hotkeys mit einer Win-Taste (z. B. #a) auf die Win-Taste, bis sie losgelassen wird, bevor ein beliebiger Text mit einer L-Tastatureingabe gesendet wird. Dadurch wird das <em>Send</em> daran gehindert, den PC zu sperren. Dieses Verhalten gilt f&uuml;r jeden Send-Modus, au&szlig;er <a href="commands/Send.htm#SendPlayDetail">SendPlay</a> (weil es das nicht braucht) und <a href="commands/Send.htm#blind">Blind-Modus</a>.</td>
</tr>
<tr>
<td><strong>!</strong></td>
<td>Alt</td>
</tr>
<tr>
<td><strong>^</strong></td>
<td>Steuerung</td>
</tr>
<tr>
<td><strong>+</strong></td>
<td>Umschalt</td>
</tr>
<tr>
<td><strong>&amp;</strong></td>
<td>Ein kaufm&auml;nnisches Und kann zwischen zwei beliebigen Tasten oder Maustasten verwendet werden, um sie zu einem benutzerdefinierten Hotkey zu kombinieren. Siehe <a href="#combo">unten</a> f&uuml;r weitere Details. Solche Hotkeys werden in Windows 95/98/Me ignoriert (nicht aktiviert).</td>
</tr>
<tr>
<td><strong>&lt;</strong></td>
<td><a name="LeftRight"></a>Verwendet die linke Taste des Paares. Zum Beispiel ist</td>
</tr>
<tr>
<td><strong>&gt;</strong></td>
<td>Verwendet die rechte Taste des Paares. Dieses Symbol wird in Windows 95/98/ME ignoriert.</td>
</tr>
<tr>
<td><strong>&lt;^&gt;!</strong></td>
<td>
<p><a name="AltGr"></a>AltGr (alternativer Schriftsatz). Wenn die aktuelle Tastaturbelegung eine ALTGR-Taste anstelle einer rechten ALT-Taste hat, dann kann diese Reihe von Symbolen normalerweise f&uuml;r ALTGR verwendet werden (ben&ouml;tigt Windows NT/2k/XP oder h&ouml;her). Zum Beispiel:</p>
<pre>
&lt;^&gt;!m::MsgBox Es wurde AltGr+m gedr&uuml;ckt.
&lt;^&lt;!m::MsgBox Es wurde SteuerungLinks+AltLinks+m gedr&uuml;ckt.
</pre>
<p>Alternativ kann AltGr selbst wie im folgenden Beispiel zu einem Hotkey gemacht werden (jedoch ohne die oben genannten Hotkeys):</p>
<pre>
LControl &amp; RAlt::MsgBox Es wurde AltGr selbst gedr&uuml;ckt.
</pre></td>
</tr>
<tr>
<td><strong>*</strong></td>
<td>
<p><a name="wildcard"></a>Platzhalter: Hotkey ausf&uuml;hren, selbst wenn zus&auml;tzliche Modifikatoren gedr&uuml;ckt gehalten werden. Das wird oft in Verbindung mit der <a href="misc/Remap.htm">Neubelegung</a> von Tasten verwendet. Zum Beispiel:</p>
<pre>
*#c::Run Calc.exe  <em>; Win+C, Umschalt+Win+C, Strg+Win+C usw. werden alle diesen Hotkey ausl&ouml;sen.</em>
*ScrollLock::Run Notepad  <em>; Beim Dr&uuml;cken von ScrollLock wird dieser Hotkey ausgel&ouml;st, selbst wenn beliebig viele Modifikatoren gedr&uuml;ckt gehalten werden.</em>
</pre>
<p>Dieses Symbol wird in Windows 95/98/ME ignoriert.</p>
</td>
</tr>
<tr>
<td><strong>~</strong></td>
<td>
<p><a name="Tilde"></a>Wenn der Hotkey ausgef&uuml;hrt wird, dann wird seine urspr&uuml;ngliche Funktion nicht blockiert (vom System versteckt). In den beiden folgenden Beispielen wird der Mausklick des Benutzers an das aktive Fenster gesendet:</p>
<pre>
~RButton::MsgBox Es wurde die rechte Maustaste gedr&uuml;ckt.
~RButton &amp; C::MsgBox Es wurde C gedr&uuml;ckt, w&auml;hrend die rechte Maustaste gedr&uuml;ckt gehalten wurde.
</pre>
<p>Hinweise: 1) Im Gegensatz zu den anderen Pr&auml;fix-Symbolen kann das Tilde-Pr&auml;fix in einigen <a href="commands/_IfWinActive.htm#variant">Hotkey-Varianten</a> vorhanden sein und in anderen nicht; 2) Spezielle Hotkeys, die als Ersatz f&uuml;r <a href="#alttab">Alt-Tab</a> dienen, ignorieren immer das Tilde-Pr&auml;fix; 3) Das Tilde-Pr&auml;fix wird in Windows 95/98/ME ignoriert.</p>
</td>
</tr>
<tr>
<td><strong>$</strong></td>
<td>
<p><a name="prefixdollar"></a>Dieses Pr&auml;fix ist normalerweise nur notwendig, wenn das Script den <a href="commands/Send.htm">Send</a>-Befehl benutzt, um die Tasten vom Hotkey selbst zu senden, der ansonsten auch mit ausgel&ouml;st werden w&uuml;rde. Das genaue Verhalten vom $-Pr&auml;fix variiert je nach Betriebssystem:</p>
<p>In Windows NT4/2k/XP oder h&ouml;her: Das $-Pr&auml;fix erzwingt den <a href="commands/_InstallKeybdHook.htm">Tastatur-Hook</a>, diesen Hotkey zu implementieren, wodurch als Nebeneffekt der <a href="commands/Send.htm">Send</a>-Befehl daran gehindert wird, den Hotkey auszul&ouml;sen. Das $-Pr&auml;fix entspricht der Angabe von <a href="commands/_UseHook.htm">#UseHook</a> irgendwo &uuml;ber der Definition des Hotkeys.</p>
<p>In Windows 95/98/Me: Der Hotkey wird w&auml;hrend der Ausf&uuml;hrung seines <a href="misc/Threads.htm">Threads</a> deaktiviert und danach wieder aktiviert. Nebeneffekt: Wenn die Anweisung <a href="commands/_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a> h&ouml;her als 1 gesetzt ist, dann wird sie sich so verhalten, als ob eine 1 f&uuml;r solche Hotkeys gesetzt w&auml;re.</p>
</td>
</tr>
<tr>
<td>UP<br></td>
<td>
<p><a name="keyup"></a>Das Wort UP kann nach dem Namen eines Hotkeys folgen, damit der Hotkey beim Loslassen anstatt beim Dr&uuml;cken ausgef&uuml;hrt wird. Im folgenden Beispiel wird LWin <a href="misc/Remap.htm">neu belegt</a>, um LControl zu werden:</p>
<p>*LWin::Send {LControl Down}<br>
*LWin <strong>Up</strong>::Send {LControl Up}</p>
<p>"Up" kann auch wie in diesem Beispiel bei normalen Hotkeys verwendet werden: ^!r Up::MsgBox Es wurde Strg+Alt+R gedr&uuml;ckt und losgelassen. Das funktioniert auch mit <a href="#combo">kombinierten Hotkeys</a> (z. B. <em>F1 &amp; e Up::</em>)</p>
<p>Einschr&auml;nkungen: 1) "Up" funktioniert nicht mit <a href="KeyList.htm">Joystick-Tasten</a>; 2) "Up" ben&ouml;tigt Windows NT4/2000/XP oder h&ouml;her; und 3) Ein "Up"-Hotkey wird diese Taste ohne entsprechenden normalen/gedr&uuml;ckten Hotkey komplett &uuml;bernehmen, damit sie nicht in der gedr&uuml;ckten Haltung stecken bleibt. Zur Vermeidung dieses
Problems kann ein <a href="#Tilde">Tilde-Pr&auml;fix</a> hinzugef&uuml;gt werden (z. B. <em><strong>~</strong>LControl up::</em>)</p>
<p>Zus&auml;tzlich kann mit einer &auml;hnlichen Methode wie oben ein Hotkey zu einer Pr&auml;fix-Taste gemacht werden. Der Vorteil davon ist, dass der Hotkey beim Loslassen nur ausgef&uuml;hrt wird, wenn keine andere Taste gedr&uuml;ckt wurde, w&auml;hrend der Hotkey gedr&uuml;ckt gehalten wurde. Zum Beispiel:</p>
<pre>
LControl &amp; F1::Return  <em>; Macht die linke STRG-Taste zu einem Pr&auml;fix, wenn sie mindestens einmal vor "&amp;" verwendet wird.</em>
LControl::MsgBox Es wurde LControl losgelassen, ohne dabei eine andere Taste modifiziert zu haben.
</pre></td>
</tr>
</table>
<p><strong>(In der <a href="KeyList.htm">Tastenliste</a> k&ouml;nnen alle Tastennamen der Tastatur, Maus und des Joysticks gefunden werden)</strong></p>
<p><br> Mehrere Hotkeys k&ouml;nnen vertikal gestapelt werden, damit sie die gleiche Aktion ausf&uuml;hren. Zum Beispiel:</p>
<pre>
^Numpad0::
^Numpad1::
MsgBox Durch Dr&uuml;cken von Steuerung+Numpad0 oder Steuerung+Numpad1 wird diese Meldung angezeigt.
Return
</pre>
<p>Eine Taste oder Tastenkombination kann vollst&auml;ndig deaktiviert werden, wenn ihr nichts zugewiesen wird. Das folgende Beispiel deaktiviert die rechte Win-Taste:</p>
<pre>
RWin::Return
</pre>
<h2 id="Context">Kontextabh&auml;ngige Hotkeys</h2>
<p>Die Anweisungen <a href="commands/_IfWinActive.htm">#IfWinActive/Exist</a> und <a href="commands/_If.htm">#If</a> k&ouml;nnen ein Hotkey dazu bringen, eine andere (oder &uuml;berhaupt keine) Aktion in Abh&auml;ngigkeit eines bestimmten Zustandes auszuf&uuml;hren. Zum Beispiel:</p>
<pre>
#IfWinActive, ahk_class Notepad
^a::MsgBox Strg+A wurde gedr&uuml;ckt, w&auml;hrend der Editor aktiv ist. Wenn Strg+A in einem anderen Fenster gedr&uuml;ckt wird, dann wird diese Tastatureingabe an dieses Fenster gesendet.
#c::MsgBox Win+C wurde w&auml;hrend des aktiven Editors gedr&uuml;ckt.

#IfWinActive
#c::MsgBox Win+C wurde gedr&uuml;ckt, w&auml;hrend ein Fenster au&szlig;er dem Editor aktiv ist.

#If <a href="commands/_If.htm#Examples">MouseIsOver</a>("ahk_class Shell_TrayWnd")
WheelUp::Send {Volume_Up}     <em>; Mausrad &uuml;ber die Taskleiste: Lautst&auml;rke erh&ouml;hen/verringern.</em>
WheelDown::Send {Volume_Down} <em>; </em>
</pre>
<h2 id="Features">Benutzerdefinierte Kombinationen und andere Funktionen <span class="ver">[Windows NT/2000/XP oder h&ouml;her]</span></h2>
<p><a name="combo"></a>Es kann eine benutzerdefinierte Kombination von zwei Tasten mithilfe von " &amp; " angegeben werden. Im folgenden Beispiel kann Numpad0 gedr&uuml;ckt gehalten und die zweite Taste gedr&uuml;ckt werden, um den Hotkey auszul&ouml;sen:</p>
<pre>
Numpad0 <strong>&amp;</strong> Numpad1::MsgBox, Numpad1 wurde gedr&uuml;ckt, w&auml;hrend Numpad0 gedr&uuml;ckt gehalten wird.
Numpad0 <strong>&amp;</strong> Numpad2::Run Notepad
</pre>
<p><a name="prefix"></a>Im obigen Beispiel wird Numpad0 zu einer <em>Pr&auml;fix-Taste</em>; dadurch verliert Numpad0 aber seine urspr&uuml;ngliche Funktion, wenn sie selbst gedr&uuml;ckt wird. Um das zu vermeiden, kann ein Script die Numpad0-Taste konfigurieren, um eine neue Aktion durchzuf&uuml;hren:</p>
<pre>
Numpad0::WinMaximize A   <em>; Maximiert das aktive/vorderste Fenster.</em>
Numpad0::Send {Numpad0}  <em>; Numpad0 erzeugt beim <i>Loslassen</i> eine Numpad0-Tastatureingabe. Siehe unteren Kommentar.</em>
</pre>
<p>Durch einen obigen Hotkey wird Numpad0 <em>losgelassen</em>, um die angegebene Aktion auszuf&uuml;hren, solange keine andere Taste gedr&uuml;ckt wurde, w&auml;hrend Numpad0 gedr&uuml;ckt gehalten wurde.</p>
<p><strong>Numlock, Feststelltaste und Scrolllock:</strong> F&uuml;r diese Tasten wird m&ouml;glicherweise "AlwaysOn" oder "AlwaysOff" erzwungen. Zum Beispiel: <em><a href="commands/SetNumScrollCapsLockState.htm">SetNumlockState</a> AlwaysOn</em></p>
<p><strong>Hotkeys vom Explorer &uuml;berschreiben:</strong> Die internen Hotkeys von Windows wie Win+E (#e) und Win+R (#r) k&ouml;nnen individuell &uuml;berschrieben werden, indem ihnen einfach eine Aktion im Script zugewiesen wird. Siehe "<a href="misc/Override.htm">&Uuml;berschreiben oder Deaktivieren von Hotkeys</a>" f&uuml;r Details.</p>
<p><a name="alttab" id="alttab"></a><strong>Ersatz f&uuml;r Alt+Tab:</strong> Hotkeys k&ouml;nnen eine alternative Methode f&uuml;r das Alt+Tab bereitstellen. Zum Beispiel erm&ouml;glichen die folgenden zwei Hotkeys das Verwenden von Alt+Tab mit der rechten Hand:</p>
<pre>
RControl &amp; RShift::AltTab  <em>; Rechte STRG-Taste gedr&uuml;ckt halten und danach rechte UMSCHALT-Taste wiederholend dr&uuml;cken, um durchzuschalten.</em>
RControl &amp; Enter::ShiftAltTab  <em>; Ohne Loslassen der rechten STRG-Taste Enter dr&uuml;cken, um die Richtung umzukehren.</em>
</pre>
<p>F&uuml;r weitere Details, siehe <a href="#AltTabDetail">Alt+Tab</a>.</p>
<h2 id="Wheel">Mausrad-Hotkeys <span class="ver">[Windows NT/2000/XP oder h&ouml;her]</span></h2>
<p>Hotkeys, die beim Drehen des Mausrads ausgef&uuml;hrt werden, werden durch WheelDown und WheelUp unterst&uuml;tzt. WheelLeft und WheelRight werden auch seit v1.0.48 unterst&uuml;tzt, funktionieren aber nicht auf Betriebssystemen &auml;lter als Windows Vista. Hier einige Beispiele f&uuml;r Mausrad-Hotkeys:</p>
<pre>
MButton &amp; WheelDown::MsgBox Das Mausrad wurde nach unten gedreht, w&auml;hrend die mittlere Maustaste gedr&uuml;ckt gehalten wurde.
^!WheelUp::MsgBox Das Mausrad wurde nach oben gedreht, w&auml;hrend Steuerung+Alt gedr&uuml;ckt gehalten wurde.
</pre>
<p>Seit v1.0.43.03 enth&auml;lt die interne Variable <strong>A_EventInfo</strong> die Anzahl an gedrehten Rasterungen, dass in der Regel eine 1 ist. Allerdings kann A_EventInfo unter folgenden Umst&auml;nden gr&ouml;&szlig;er oder kleiner als 1 sein:</p>
<ul>
<li>Wenn die Maus-Hardware weniger als eine Rasterung meldet, dann enth&auml;lt A_EventInfo eine 0;</li>
<li>Wenn das Mausrad schnell gedreht wird (je nach Typ der Maus), dann kann A_EventInfo gr&ouml;&szlig;er als 1 sein. Ein Hotkey wie folgt kann dabei helfen, die eigene Maus zu analysieren: <em>~WheelDown::ToolTip %A_EventInfo%</em></li>
</ul>
<p>Einige der n&uuml;tzlichsten Hotkeys f&uuml;r das Mausrad beinhalten alternative Methoden f&uuml;r das Scrollen eines Fenstertextes. Zum Beispiel scrollen die folgenden Hotkeys beim Drehen des Mausrads horizontal anstatt vertikal, w&auml;hrend die linke STRG-Taste gedr&uuml;ckt gehalten wird:</p>
<pre>
~LControl &amp; WheelUp::  <em>; Nach links scrollen.</em>
ControlGetFocus, fcontrol, A
Loop 2  <em>; &lt;-- Erh&ouml;ht diesen Wert, um das Scrollen zu beschleunigen.</em>
    SendMessage, 0x114, 0, 0, %fcontrol%, A  <em>; 0x114 ist WM_HSCROLL und die 0 danach SB_LINELEFT.</em>
Return

~LControl &amp; WheelDown::  <em>; Nach rechts scrollen.</em>
ControlGetFocus, fcontrol, A
Loop 2  <em>; &lt;-- Erh&ouml;ht diesen Wert, um das Scrollen zu beschleunigen.</em>
    SendMessage, 0x114, 1, 0, %fcontrol%, A  <em>; 0x114 ist WM_HSCROLL und die 1 danach SB_LINERIGHT.</em>
Return
</pre>
<p>Da letztendlich Mausrad-Hotkeys nur Down-Ereignisse (nie Up-Ereignisse) erzeugen, k&ouml;nnen sie nicht als <a href="#keyup">Up-Tasten-Hotkeys</a> verwendet werden.</p>
<h2 id="Remarks">Tipps und Hinweise</h2>
<p>Jede Numpad-Taste kann zwei verschiedene Hotkey-Subroutinen je nach Zustand von Numlock starten. Alternativ kann eine Numpad-Taste die gleiche Subroutine starten, unabh&auml;ngig vom Zustand des Numlocks. Zum Beispiel:</p>
<pre>
NumpadEnd::
Numpad1::
MsgBox, Dieser Hotkey wurde unabh&auml;ngig von Numlock gestartet.
Return
</pre>
<p>Auch wenn der Tilde-Operator (~) mit einer <a href="#prefix">Pr&auml;fix-Taste</a> nur einmal verwendet wird, wird dieses
Pr&auml;fix immer &uuml;ber das aktive Fenster gesendet. In den beiden folgenden Hotkeys wird zum Beispiel das aktive Fenster alle Rechtsklick-Ereignisse empfangen, obwohl nur eine Definition ein Tilde-Zeichen enth&auml;lt:</p>
<pre>
~RButton &amp; LButton::MsgBox Es wurde die linke Maustaste gedr&uuml;ckt, w&auml;hrend die rechte gedr&uuml;ckt gehalten wurde.
RButton &amp; WheelUp::MsgBox Das Mausrad wurde nach oben gedreht, w&auml;hrend die rechte Maustaste gedr&uuml;ckt gehalten wurde.
</pre>
<p>Der <a href="commands/Suspend.htm">Suspend</a>-Befehl kann vor&uuml;bergehend alle Hotkeys au&szlig;er den freigestellten deaktivieren. Um Hotkeys abh&auml;ngig vom Fenstertyp zu machen, verwendet <a href="commands/_IfWinActive.htm">#IfWinActive/Exist</a>.</p>
<p>Mithilfe des <a href="commands/Hotkey.htm">Hotkey</a>-Befehls k&ouml;nnen Hotkeys dynamisch erstellt werden, w&auml;hrend das Script ausgef&uuml;hrt wird. Der Hotkey-Befehl kann auch bestehende Hotkeys im Script individuell bearbeiten, deaktivieren oder aktivieren.</p>
<p>Joystick-Hotkeys unterst&uuml;tzen zurzeit keine Modifikator-Pr&auml;fixe wie ^ (STRG) und # (WIN). Allerdings kann mit
<a href="commands/GetKeyState.htm">GetKeyState</a> dieser Effekt wie im folgenden Beispiel nachgeahmt werden:</p>
<pre>
Joy2::
If not GetKeyState("Control")  <em>; Weder die linke noch die rechte STRG-Taste wurde gedr&uuml;ckt.</em>
    Return  <em>; also nichts tun.</em>
MsgBox Es wurde die zweite Taste vom ersten Joystick gedr&uuml;ckt, w&auml;hrend die STRG-Taste gedr&uuml;ckt gehalten wurde.
Return
</pre>
<p>Manchmal sollte ein Hotkey auf das Loslassen seiner Modifkatortasten warten, bevor er fortf&auml;hrt. Betrachtet dazu das folgende Beispiel:</p>
<pre>
^!s::Send {Delete}
</pre>
<p>Beim Dr&uuml;cken von Steuerung+Alt+S denkt das System, dass Steuerung+Alt+Entf gedr&uuml;ckt wird (aufgrund der energischen Systemerkennung von Strg+Alt+Entf). Als &Uuml;bergangsl&ouml;sung kann <a href="commands/KeyWait.htm">KeyWait</a> verwendet werden, um auf das Loslassen der Tasten zu warten; zum Beispiel:</p>
<pre>
^!s::
KeyWait Control
KeyWait Alt
Send {Delete}
Return
</pre>
<p>Wenn ein Hotkey-Label wie <em>#z::</em> ein Fehler wie "Ung&uuml;ltiger Hotkey" erzeugt, dann kennt die Tastaturbelegung/Sprache des Systems m&ouml;glicherweise dieses bestimmte Zeichen nicht (in diesem Fall das "Z"). Probiert bekannte Zeichen der aktuellen Tastaturbelegung aus.</p>
<p>Ein Hotkey-Label kann als Ziel von <a href="commands/Gosub.htm">Gosub</a> oder <a href="commands/Goto.htm">Goto</a> verwendet werden. Zum Beispiel: <em>Gosub ^!s</em></p>
<p>H&auml;ufig werden Hotkeys dazu verwendet, eine wiederholende Aktion zu starten und zu stoppen, wie z. B. mehrere Tastatureingaben oder Mausklicks. Ein Beispiel daf&uuml;r kann in <a href="FAQ.htm#repeat">diesem FAQ-Thema</a> gefunden werden.</p>
<p>Letztendlich ist jedes Script <a href="misc/Threads.htm">sozusagen multi-threaded</a>, damit ein neuer Hotkey ausgef&uuml;hrt werden kann, selbst wenn eine vorherige Hotkey-Subroutine noch l&auml;uft. Zum Beispiel k&ouml;nnen neue Hotkeys auch gestartet werden, w&auml;hrend eine <a href="commands/MsgBox.htm">MsgBox</a> vom aktuellen Hotkey angezeigt wird.</p>
<h2 id="AltTabDetail">Alt+Tab-Hotkeys</h2>
<p>Jeder Alt+Tab-Hotkey muss eine Kombination von zwei Tasten sein, dass normalerweise mithilfe eines kaufm&auml;nnischen Und-Zeichens (&amp;) erreicht wird. Im folgenden Beispiel wird die rechte ALT-Taste gedr&uuml;ckt gehalten und mit J oder K durch das Alt-Tab-Men&uuml; navigiert:</p>
<pre>
RAlt &amp; j::AltTab
RAlt &amp; k::ShiftAltTab
</pre>
<p><em>AltTab</em> und <em>ShiftAltTab</em> sind zwei spezielle Befehle, die nur erkannt werden, wenn sie auf der gleichen Zeile des Hotkeys verwendet werden. Hier die komplette Liste:</p>
<p><strong>AltTab</strong>: Sobald das Alt-Tab-Men&uuml; sichtbar ist, wird es durchgeschaltet. Ansonsten wird das Men&uuml; angezeigt (nur wenn der Hotkey eine "&amp;"-Kombination von zwei Tasten ist, sonst passiert nichts).</p>
<p><strong>ShiftAltTab</strong>: Das Gleiche wie oben, nur in die entgegengesetzte Richtung.</p>
<p><strong>AltTabAndMenu</strong>: Sobald das Alt-Tab-Men&uuml; sichtbar ist, wird es durchgeschaltet. Ansonsten wird das Men&uuml; angezeigt.</p>
<p><strong>AltTabMenuDismiss</strong>: Schlie&szlig;t das Alt-Tab-Men&uuml;.</p>
<p>Zur Veranschaulichung dient das Mausrad als Ersatz f&uuml;r Alt-Tab. Mit den folgenden Hotkeys wird das Men&uuml; durch Klicken der mittlere Maustaste angezeigt und durch Drehen des Mausrads durchgeschaltet:</p>
<pre>
MButton::AltTabMenu
WheelDown::AltTab
WheelUp::ShiftAltTab
</pre>
<p>Um ein vom Hotkey aufgerufenes Alt-Tab-Men&uuml; zu schlie&szlig;en, ohne dabei das ausgew&auml;hlte Fenster zu aktivieren, verwendet so etwas wie folgt. Es sind m&ouml;glicherweise einige Anpassungen notwendig, je nachdem: 1) womit das Alt-Tab-Men&uuml; angezeigt wurde; und 2) ob das Script den <a href="commands/_InstallKeybdHook.htm">Tastatur-Hook</a> installiert hat.</p>
<pre>
LCtrl &amp; CapsLock::AltTab
<strong>!</strong>MButton::  <em>; Mittlere Maustaste. Das <strong>!</strong>-Pr&auml;fix f&uuml;hrt es aus, w&auml;hrend die ALT-Taste gedr&uuml;ckt wird (sobald das Alt-Tab-Men&uuml; sichtbar ist).</em>
IfWinExist ahk_class #32771  <em>; Zeigt an, dass das Alt-Tab-Men&uuml; auf dem Bildschirm vorhanden ist.</em>
    Send <strong>!</strong>{Escape}{Alt up}
Return
</pre>
<p>Zurzeit m&uuml;ssen alle speziellen Alt-Tab-Aktionen direkt einem Hotkey wie in den folgenden Beispielen zugewiesen werden (d. h. sie k&ouml;nnen nicht wie Befehle verwendet werden). Sie werden <span class="red">nicht von <a href="commands/_IfWinActive.htm">#IfWin</a> oder <a href="commands/_If.htm">#If</a> beeinflusst</span>.</p>
<p>Benutzerdefinierte Alt-Tab-Aktionen k&ouml;nnen auch mithilfe von Hotkeys erstellt werden. Im folgenden Beispiel wird die F1-Taste gedr&uuml;ckt, um das Men&uuml; anzuzeigen und durchzuschalten. Danach die F2-Taste, um das ausgew&auml;hlte Fenster zu aktivieren (oder Esc, um abzubrechen):</p>
<pre>
*F1::Send {Alt down}{tab} <em>; In diesem Fall ist das Sternchen notwendig.</em>
!F2::Send {Alt up}  <em>; L&auml;sst die ALT-Taste los, um das ausgew&auml;hlte Fenster zu aktivieren.</em>
~*Escape::
IfWinExist ahk_class #32771
    Send {Escape}{Alt up}  <em>; Schlie&szlig;t das Men&uuml;, ohne dabei das ausgew&auml;hlte Fenster zu aktivieren.</em>
Return
</pre>
</body>
</html>