<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Clipboard, ClipboardAll und OnClipboardChange</title>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<link href="../css/default.css" rel="stylesheet" type="text/css">
</head>

<body>
<h1>Clipboard, ClipboardAll und OnClipboardChange</h1>

<p><em>Clipboard</em> ist eine interne <a href="../Variables.htm">Variable</a>, die den aktuellen Inhalt der Zwischenablage von Windows widerspiegelt, wenn dieser Inhalt als Text bezeichnet werden kann. Im Gegensatz dazu enthält <a href="#ClipboardAll"><em>ClipboardAll</em></a> alles von der Zwischenablage, wie z. B. Bilder und Formatierung.</p>
<p><a name="CopiedFiles"></a>Jede Textzeile in <em>Clipboard</em> endet normalerweise mit einem CR- und LF-Zeichen (`r`n). Dateien (die z. B. im Explorer-Fenster mit Steuerung+C kopiert wurden) werden als Text betrachtet: Solche Dateien werden automatisch in ihren Dateinamen umgewandelt (mit vollständigem Pfad), sobald <em>Clipboard</em> im Script verwendet wird. Um die Dateien einzeln zu extrahieren, befolgt dieses Beispiel:</p>
<pre>Loop, parse, clipboard, `n, `r
{
    MsgBox, 4, , Dateinummer %A_Index% ist %A_LoopField%.`n`nWeiter?
    IfMsgBox, No, break
}</pre>
<p>Um die Dateinamen in alphabetischer Reihenfolge zu sortieren, verwendet den <a href="../commands/Sort.htm">Sort</a>-Befehl. Um die Dateinamen der Zwischenablage in eine Datei zu schreiben, verwendet <em><a href="../commands/FileAppend.htm">FileAppend</a>, %clipboard%`r`n, C:\Eigene Datei.txt</em>. Um die Versuchsdauer zu ändern, wie oft die Zwischenablage geöffnet werden soll (wenn sie z. B. von einer anderen Anwendung verwendet wird), verwendet <a href="../commands/_ClipboardTimeout.htm">#ClipboardTimeOut</a>.</p>
<strong>Einfache Beispiele:</strong>
<pre>clipboard = eigener Text   <em>; Ersetzt die Zwischenablage mit neuem Inhalt.</em>
clipboard =   <em>; Leert die Zwischenablage.</em>
clipboard = %clipboard%   <em>; Wandelt jede kopierte Datei, HTML oder anders formatierter Text in Klartext um.</em>
clipboard = %clipboard% angefügter Text.   <em>; Fügt etwas Text an die Zwischenablage.</em>
StringReplace, clipboard, clipboard, ABC, DEF, All   <em>; Ersetzt alle Vorkommen von ABC mit DEF (und wandelt die Zwischenablage in Klartext um).</em></pre>

<p><strong>ClipWait verwenden, um die Zuverlässigkeit des Scripts zu verbessern:</strong></p>
<pre>clipboard =  <em>; Beginnt leer, damit ClipWait erkennt, wenn der Text angekommen ist.</em>
Send ^c
<a href="../commands/ClipWait.htm">ClipWait</a>  <em>; Wartet, bis die Zwischenablage Text enthält.</em>
MsgBox Steuerung+C hat folgenden Inhalt in die Zwischenablage kopiert:`n`n%clipboard%</pre>
<h2 id="ClipboardAll">ClipboardAll<span class="ver"> (alles in der Zwischenablage speichern und wiederherstellen)</span></h2>
<p><em>ClipboardAll</em> enthält alles von der Zwischenablage (z. B. Bilder und Formatierung). Wird häufig verwendet, um den aktuellen Inhalt der Zwischenablage zu sichern, damit das Script die Zwischenablage vorübergehend für andere Operationen verwendet. Wenn die Operation abgeschlossen ist, dann kann das Script den originalen Inhalt der Zwischenablage wie folgt wiederherstellen:</p>
<pre>ClipSaved := ClipboardAll   <em>; Speichert die gesamte Zwischenablage in eine beliebige Variable.
; ... hier kann vorübergehend die Zwischenablage anderweitig verwendet werden, z. B. das Einfügen von Unicode-Text mit <a href="../commands/Transform.htm#Unicode">Transform Unicode</a> ...</em>
Clipboard := ClipSaved   <em>; Originale Zwischenablage wiederherstellen. Beachtet die Verwendung von <i>Clipboard</i> (nicht <i>ClipboardAll</i>).</em>
ClipSaved =   <em>; Speicher freigeben, falls die Zwischenablage sehr groß ist.</em></pre>
<p><em>ClipboardAll</em> kann auch in einer Datei gespeichert werden (im diesen Modus überschreibt FileAppend immer die vorhandene Datei):<br> <a href="../commands/FileAppend.htm">FileAppend</a>, %ClipboardAll%, C:\Firmenlogo.clip <em>; Die Dateierweiterung spielt keine Rolle.</em></p>
<p>Um die Datei später wieder in die Zwischenablage zu laden (oder in eine Variable), befolgt dieses Beispiel:<br> <a href="../commands/FileRead.htm">FileRead</a>, Clipboard, <strong>*c</strong> C:\Firmenlogo.clip <em>; Beachtet die Verwendung von *c, dass vor dem Dateinamen stehen muss. </em></p>
<p><strong><u>Hinweise</u></strong></p>
<p><em>ClipboardAll</em> ist leer, wenn es nicht wie oben beschrieben verwendet wird. Darüber hinaus wird <em>ClipboardAll</em> nicht in <a href="../Variables.htm#comma">kommagetrennte Ausdrücken</a> unterstützt; das heißt, es sollte auf einer Zeile zugewiesen werden, wie z. B. <em>ClipSaved := ClipboardAll</em>.</p>
<p>Variablen, denen <em>ClipboardAll</em> zugewiesen wurden ist, sind im Binärformat und somit Wortsalat, wenn sie z. B. in einer <a href="../commands/MsgBox.htm">MsgBox</a> angezeigt werden. Auch das Ändern einer Variable mit binärer Zwischenablage (z. B. mithilfe von <a href="../commands/StringReplace.htm">StringReplace</a>) wandelt es in eine normale Variable um und verliert folglich Daten von der Zwischenablage. Seit v1.0.46 können Variablen mit binärer Zwischenablage an einer <a href="../Functions.htm#ByRef">Funktion</a> als Wert übergeben werden (vorher hat das nur mit <a href="../Functions.htm#ByRef">ByRef</a> funktioniert).</p>
<p>Wenn <em>ClipboardAll</em> keine beliebigen Datenobjekte (Formate) von der Zwischenablage abrufen kann, dann werden sie weggelassen, die restlichen Objekte jedoch gespeichert. Die Häufigkeit der Abfrage ist von <a href="../commands/_ClipboardTimeout.htm">#ClipboardTimeOut</a> abhängig (anstatt es nur einmal zu versuchen).</p>
<p>Eine Variable mit Daten aus der Zwischenablage kann in eine andere Variable wie im folgenden Beispiel kopiert werden: ClipSaved2 := ClipSaved</p>
<p><a href="../commands/ClipWait.htm">ClipWait</a> kann verwendet werden, um festzustellen, wann die Zwischenablage Daten enthält (schließt optional Daten ohne Text ein).</p>
<p><a href="../commands/StringLen.htm">StringLen</a> kann verwendet werden, um die Gesamtgröße einer Variable zu erkennen, der <em>ClipboardAll</em> zugewiesen wurden ist.</p>
<p>Variablen, denen <em>ClipboardAll</em> zugewiesen wurden ist, können mithilfe der Operatoren "<>" und "=" miteinander verglichen werden (aber nicht direkt mit <em>ClipboardAll</em>). Im folgenden Beispiel wird zuerst die Länge jeder Variable überprüft. Wenn das nicht genügt, eine Entscheidung zu treffen, dann können die Variablen verglichen werden, um ein Unentschieden abzuwenden:</p>
<pre>If ClipSaved1 <> %ClipSaved2%   <em>; <u>Muss</u> eine IF-Anweisung im alten Stil sein, kein Ausdruck.</em>
    MsgBox Die zwei gespeicherten Zwischenablagen sind unterschiedlich.</pre>
<p>Das Speichern von <em>ClipboardAll</em> in eine Variable wird nicht durch das Speicherlimit von <a href="../commands/_MaxMem.htm">#MaxMem</a> eingeschränkt.</p>
<p>Eine gespeicherte Zwischenablagedatei besteht intern aus einem 4-Byte-Formattyp, gefolgt von einer 4-Byte-Datenblockgröße und einem Datenblock für das Format. Wenn die Zwischenablage mehrere Formate enthält (was fast immer der Fall ist), dann werden diese drei Elemente so oft wiederholt, bis alle Formate enthalten sind. Die Datei endet mit einem 4-Byte-Formattyp, der eine 0 enthält.</p>
<p>Bekannte Einschränkung: Das Abrufen von <em>ClipboardAll</em>, während Zellen von MS Excel in der Zwischenablage sind, zeigt in Excel ein Dialogfenster mit "Keine Drucker" an.</p>
<p>Zwischenablage-Tools, geschrieben in AutoHotkey:</p>
<ul>
  <li>Deluxe Clipboard: Bietet eine unbegrenzte Anzahl an privaten, benannten Zwischenablagen zum Kopieren, Ausschneiden, Einfügen, Anhängen oder Ausschneiden/Anhängen des ausgewählten Textes. <a href="http://www.autohotkey.com/forum/topic2665.html">www.autohotkey.com/forum/topic2665.html</a></li>
  <li>ClipStep: Kontrolliert mehrere Zwischenablagen, nur in Verwendung mit Strg+X+C+V. <a href="http://www.autohotkey.com/forum/topic4836.html">www.autohotkey.com/forum/topic4836.html</a></li>
</ul>
<h2 id="OnClipboardChange">OnClipboardChange</h2>
<p>Ein Label namens OnClipboardChange (falls vorhanden) wird automatisch gestartet, sobald eine beliebige Anwendung (auch das Script selbst) den Inhalt der Zwischenablage geändert hat. Das Label wird auch einmal ausgeführt, wenn das Script gestartet wird.</p>
<p>Die interne Variable A_EventInfo enthält:<br> 0, wenn die Zwischenablage nun leer ist;<br> 1, wenn sie etwas enthält, dass als Text bezeichnet werden kann (schließt auch <a href="#CopiedFiles">Dateien</a> ein, die in einem Explorer-Fenster kopiert wurden);<br> 2, wenn sie etwas enthält, dass kein Text wie z. B. ein Bild ist.</p>
<p>Das folgende Beispiel ist ein funktionierendes Script. Sobald es ausgeführt wird, wird kurz ein ToolTip für jede Änderung der Zwischenablage angezeigt. </p>
<pre>#Persistent
Return

OnClipboardChange:
ToolTip Datentyp der Zwischenablage: %A_EventInfo%
Sleep 1000
ToolTip  <em>; ToolTip deaktivieren.</em>
Return</pre>
<p>Wenn die Zwischenablage geändert wird, während das Label OnClipboardChange läuft, dann geht das Benachrichtigungsereignis verloren. Wenn das unerwünscht ist, verwendet <a href="../commands/Critical.htm">Critical</a> in der ersten Zeile des Labels. Allerdings werden dadurch auch andere <a href="../misc/Threads.htm">Threads</a> zwischengespeichert/aufgeschoben (z. B. das Drücken eines Hotkeys), während der OnClipboardChange-Thread läuft.</p>
<p>Wenn das Script selbst die Zwischenablage ändert, dann wird das Label OnClipboardChange nicht sofort ausgeführt, daher werden Befehle nach dem Befehl, der die Zwischenablage ändert, wahrscheinlich vorher ausgeführt. Damit das Label sofort ausgeführt wird, verwendet eine kurze Verzögerung wie <a href="../commands/Sleep.htm">Sleep 20</a>, nachdem die Zwischenablage geändert wurde.</p>
<p>Verwandte Befehle: <a href="../commands/OnExit.htm">OnExit</a>, <a href="../commands/OnMessage.htm">OnMessage()</a>, <a href="../commands/RegisterCallback.htm">RegisterCallback()</a></p>
</body>
</html>
