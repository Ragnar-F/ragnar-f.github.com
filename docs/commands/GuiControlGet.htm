<!DOCTYPE HTML>
<html>
<head>
<title>GuiControlGet</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/jquery.js" type="text/javascript"></script>
<script src="../static/tree.jquery.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>GuiControlGet</h1>

<p>Ermittelt unterschiedliche Informationen über ein Steuerelement in einem GUI-Fenster.</p>

<pre class="Syntax">GuiControlGet, AusgabeVar [, Unterbefehl, SteuerelementID, Param4]</pre>
<h3>Parameter</h3>
<dl>

  <dt>AusgabeVar</dt>
  <dd><p>Name der Variable, in der das Ergebnis gespeichert werden soll. Wenn der Befehl nicht ausgeführt werden kann (siehe ErrorLevel unten), dann ist diese Variable leer.</p></dd>

  <dt>Unterbefehl</dt>
  <dd><p>Siehe untere Liste.</p></dd>

  <dt>SteuerelementID</dt>
  <dd><p>Ist dieser Parameter leer oder nicht vorhanden, verhält sich der Parameter wie AusgabeVar. Beispielsweise ist <code>GuiControlGet, MeinEdit</code> das gleiche wie <code>GuiControlGet, MeinEdit,, MeinEdit</code>.</p>
      <p>Wenn das Ziel-Steuerelement eine zugeordnete Variable hat, kann der Name der Variable als <em>SteuerelementID</em> angegeben werden (diese Methode hat Vorrang vor der nächsten Methode). Daher ist es am besten, dem Steuerelement eine Variable zuzuweisen, auf das später mit GuiControl oder GuiControlGet zugegriffen wird, selbst wenn es nicht eingabefähig ist (z. B. GroupBox oder Text).</p>
    <p>Ansonsten ist <em>SteuerelementID</em> entweder das ClassNN (Klassenname und Instanznummer des Steuerelements) oder der Text des Steuerelements, das beides mit Windows Spy ermittelt werden kann. Verwendet man Text, ist das Übereinstimmungsverhalten abhängig von <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>. Hinweis: Der Dateiname eines Picture-Steuerelements kann auch als <em>SteuerelementID</em> verwendet werden.</p>
    <p><span class="ver">[v1.1.04+]:</span> <em>SteuerelementID</em> kann das <a href="Gui.htm#HwndOutputVar">HWND</a> eines Steuerelements sein. Wie bei allen anderen Werten für SteuerelementID auch, muss das Gui angegeben werden, falls sich das Steuerelement nicht auf dem Standard-Gui befindet.</p></dd>

  <dt>Param4</dt>
  <dd><p>Dieser Parameter kann weggelassen werden, solange er nicht von einem Unterbefehl aus der unteren Liste benötigt wird.</p></dd>

</dl>

<h3>ErrorLevel</h3>
<p><span class="ver">[v1.1.04+]</span> Dieser Befehl ist in der Lage, bei Misserfolg eine Ausnahme auszulösen. Für mehr Informationen, siehe <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird auf 1 gesetzt, wenn das angegebene Fenster/Steuerelement nicht existiert oder ein anderes Problem aufgetreten ist. Ansonsten wird es auf 0 gesetzt.</p>
<h3>Unterbefehle</h3>
<p><strong>(Leer)</strong>: <em>Unterbefehl</em> leer lassen, um Inhalte des Steuerelements abzurufen. Alle Steuerelementarten sind selbsterklärend, mit Ausnahme von:</p>
<p><a href="GuiControls.htm#Picture">Picture</a>: Ermittelt den Dateinamen des Bildes, wie es ursprünglich angegeben wurde, als das Steuerelement erstellt wurde. Dieser Name ändert sich nicht, selbst wenn ein neuer Bilddateiname angegeben ist.</p>
<p><a href="GuiControls.htm#Edit">Edit</a>: Ermittelt den Inhalt, wobei jeder Zeilenumbruch im Text ein LF-Zeichen (`n) anstelle eines traditionellen Zeichenpaares CR+LF (` r`n) repräsentiert, das von Nicht-GUI-Befehlen wie <a href="ControlGetText.htm">ControlGetText</a> und <a href="ControlSetText.htm">ControlSetText</a> verwendet wird.</p>
<p><a href="GuiControls.htm#Hotkey">Hotkey</a>: Ermittelt einen leeren Wert, wenn kein Hotkey im Steuerelement ist. Ansonsten werden Modifikatoren und Tastenname ermittelt. Beispiele: <code>^!C</code>, <code>^Home</code>, <code>+^NumpadHome</code>.</p>
<p><a href="GuiControls.htm#Checkbox">Checkbox</a>/<a href="GuiControls.htm#Radio">Radio</a>: 1, wenn das Steuerelement markiert ist, 0, wenn nicht markiert oder -1, wenn ein graues Häkchen. Um stattdessen den Text/die Bezeichnung des Steuerelements abzurufen, verwendet das Wort Text in <em>Param4</em>. Hinweis: Im Gegensatz zum Befehl <a href="Gui.htm#Submit">Gui Submit</a> werden Optionsfelder immer einzeln abgerufen, unabhängig davon, ob sie in einer Gruppe sind.</p>
<p><a href="GuiControls.htm#UpDown">UpDown</a>/<a href="GuiControls.htm#Slider">Slider</a>/<a href="GuiControls.htm#Progress">Progress</a>: Ermittelt die aktuelle Position des Steuerelements.</p>
<p><a href="GuiControls.htm#Tab">Tab</a>/<a href="GuiControls.htm#DropDownList">DropDownList</a>/<a href="GuiControls.htm#ComboBox">ComboBox</a>/<a href="GuiControls.htm#ListBox">ListBox</a>: Ermittelt den Text des aktuell ausgewählten Eintrags/Tabs (oder die Position, wenn das Steuerelement die <a href="Gui.htm#AltSubmit">AltSubmit</a>-Eigenschaft hat). Bei einer ComboBox wird stattdessen der Text im Edit-Feld des Steuerelements ermittelt, wenn kein Eintrag ausgewählt ist. Bei einer <a href="GuiControls.htm#ListBoxMulti">ListBox mit Mehrfachauswahl</a> wird das <a href="Gui.htm#Delimiter">aktuelle Trennzeichen</a> des Fensters ausgegeben.</p>
<p><a href="ListView.htm">ListView</a> und <a href="TreeView.htm">TreeView</a>: Diese Steuerelemente werden nicht unterstützt, wenn der <em>Unterbefehl</em> leer ist. Verwende stattdessen die integrierten <a href="ListView.htm#BuiltIn">ListView</a>- und <a href="TreeView.htm#BuiltIn">TreeView</a>-Funktionen.</p>
<p><a href="GuiControls.htm#StatusBar">StatusBar</a>: Ermittelt nur den ersten Teil des Textes.</p>
<p><a href="GuiControls.htm#ActiveX">ActiveX</a>: Ermittelt ein neues Wrapper-Objekt einer ActiveX-Komponente vom Steuerelement.</p>
<p>Hinweis: Um stattdessen den Text/die Bezeichnung des Steuerelements abzurufen, verwendet das Wort Text in <em>Param4</em>.</p>
<p>&nbsp;</p>
<p><strong>GuiControlGet, AusgabeVar, Pos</strong>: Ermittelt die Position und Größe des Steuerelements. Die Position bezieht sich auf den Client-Bereich des GUI-Fensters, ohne Titelleiste, Menüleiste und Rahmen. Die Informationen werden in vier Variablen gespeichert und beginnen alle mit <em>AusgabeVar</em>. Zum Beispiel:</p>
<pre>GuiControlGet, MeinEdit, Pos
MsgBox Die X-Koordinate ist %MeinEditX%. Die Y-Koordinate ist %MeinEditY%. Die Breite ist %MeinEditW%. Die Höhe ist %MeinEditH%.</pre>
<p>Um mehrere globale anstelle von lokalen Variablen innerhalb einer <a href="../Functions.htm">Funktion</a> zu erstellen, <a href="../Functions.htm#Global">deklariert</a> <em>AusgabeVar</em> als globale Variable, bevor dieser Befehl verwendet wird (das Gegenteil davon gilt für <a href="../Functions.htm#AssumeGlobal">global-angesehene</a> Funktionen).</p>
<p>&nbsp;</p>
<p><strong>GuiControlGet, AusgabeVar, Focus</strong>: Ermittelt die Kennung des Steuerelements (ClassNN), welches zurzeit den Tastaturfokus hat. Da das angegebene GUI-Fenster für das fokussierte Steuerelement <a href="WinActivate.htm">aktiv</a> sein muss, ist <em>AusgabeVar</em> leer, wenn es nicht aktiv ist. Anwendungsbeispiel: <code>GuiControlGet, focused_control, focus</code>.</p>
<p><strong>GuiControlGet, AusgabeVar, FocusV</strong> <span class="ver">[v1.0.43.06+]</span>: Das gleiche wie <em>Focus</em> (siehe oben), außer dass hier der <a href="Gui.htm#Events">zugeordnete Variablenname</a> des fokussierten Steuerelements abgerufen wird. Fehlt dem Steuerelement eine zugeordnete Variable, werden stattdessen die ersten 63 Zeichen des Textes/der Bezeichnung abgerufen (wenn man verhindern möchte, jedem Button einen Variablennamen zuzuweisen).</p>
<p><strong>GuiControlGet, AusgabeVar, Enabled</strong>: Ermittelt 1, wenn das Steuerelement aktiviert ist oder 0, wenn es deaktiviert ist.</p>
<p><strong>GuiControlGet, AusgabeVar, Visible</strong>: Ermittelt 1, wenn das Steuerelement sichtbar ist oder 0, wenn es versteckt ist.</p>
<p><strong><a name="Hwnd"></a>GuiControlGet, AusgabeVar, Hwnd</strong> <span class="ver">[v1.0.46.16+]</span>: Ermittelt das HWND (Window Handle) des Steuerelements. Das HWND eines Steuerelements wird oft bei <a href="PostMessage.htm">PostMessage</a>, <a href="PostMessage.htm">SendMessage</a> und <a href="DllCall.htm">DllCall</a> verwendet. Hinweis: <a href="Gui.htm#HwndOutputVar">HwndAusgabeVar</a> ist in der Regel der kürzere Weg, das HWND zu ermitteln.</p>
<p id="Name"><strong>GuiControlGet, AusgabeVar, Name</strong> <span class="ver">[v1.1.03+]</span>: Ermittelt den <a href="Gui.htm#Events">zugeordneten Variablennamen</a> des Steuerelements, falls verfügbar, ansonsten wird <em>AusgabeVar</em> leer gemacht.</p>
<h3 id="Remarks">Bemerkungen</h3>
<p>Um neben dem Standard-Fenster auch andere Fenster bearbeiten zu können, fügt dessen Name oder Nummer (oder seit v1.1.03 dessen HWND) gefolgt von einem Doppelpunkt vor dem Unterbefehl wie folgt ein:</p>
<pre>GuiControlGet, MeinEdit, MeinGui:
GuiControlGet, MeinEdit, MeinGui:Pos
GuiControlGet, AusgabeVar, MeinGui:Focus</pre>
<p>Das ist auch notwendig, wenn <em>SteuerelementID</em> die zugeordnete Variable eines Steuerelements oder ein HWND ist.</p>
<p>Ein GUI-<a href="../misc/Threads.htm">Thread</a> wird wie jeder andere Thread definiert, der aufgrund einer GUI-Aktion gestartet wurde. Zu den GUI-Aktionen gehört beispielsweise das Auswählen eines Menüpunkts oder das Ausführen eines <a href="Gui.htm#label">g-Labels</a> (z. B. beim Drücken einer Schaltfläche).</p>
<p>Der <a href="Gui.htm#DefaultWin">Standardfenstername</a> für einen GUI-Thread ist von dem Fenster, das diesen Thread gestartet hat. Nicht-GUI-Threads verwenden standardmäßig eine 1.</p>

<h3>Siehe auch</h3>
<p><a href="Gui.htm">Gui</a>, <a href="GuiControl.htm">GuiControl</a>, <a href="ControlGet.htm">ControlGet</a></p>
<h3>Beispiele</h3>
<pre class="NoIndent">GuiControlGet, MeinEdit
GuiControlGet, Inhalt,, MeinEdit  <em>;  Gleiche wie oben, nur dass eine nicht-standardmäßige Ausgabevariable verwendet wird.</em>
GuiControlGet, MeineCheckBox1 <em>; Ermittelt 1, wenn markiert, 0, wenn nicht markiert.</em>
GuiControlGet, MeineCheckBox1,,, Text  <em>; Ermittelt die Bezeichnung/den Text des Kontrollkästchens.</em>
GuiControlGet, Pic, Pos, Static4  <em>; Die Position/Größe wird in PicX, PicY, PicW, und PicH gespeichert.</em></pre>

</body>
</html>
