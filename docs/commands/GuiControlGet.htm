<!DOCTYPE HTML>
<html>
<head>
<title>GuiControlGet</title>
<meta name="keywords" content="Befehl, Grafische Benutzeroberfl&auml;che">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/ga.js" type="text/javascript"></script>
<!--[if lt IE 9]>
<script src="../static/html5.js"></script>
<![endif]-->
<script src="../navbar/NavScript.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <div id="article">
    <h1>GuiControlGet</h1>
    <p>Ermittelt unterschiedliche Informationen &uuml;ber ein Steuerelement in einem GUI-Fenster.</p>
    <pre class="Syntax">GuiControlGet, Ausgabevariable [, Unterbefehl, SteuerelementID, Param4]</pre>
    <h3>Parameter</h3>
    <table class="info">
      <tr>
        <td>Ausgabevariable</td>
        <td>Der Name der Variable, in der das Ergebnis gespeichert wird. Wenn der Befehl nicht ausgef&uuml;hrt werden kann (siehe ErrorLevel unten), dann ist diese Variable leer.</td>
      </tr>
      <tr>
        <td>Unterbefehl</td>
        <td>Siehe untere Liste.</td>
      </tr>
      <tr>
        <td style="width: 15%;">SteuerelementID</td>
        <td style="width: 85%;"><p>Ist dieser Parameter leer oder nicht vorhanden, verh&auml;lt sich der Parameter wie Ausgabevariable. Beispielsweise ist <code>GuiControlGet, EigenesEdit</code> das gleiche wie <code>GuiControlGet, EigenesEdit,, EigenesEdit</code>.</p>
          <p>Wenn das Ziel-Steuerelement eine zugewiesene Variable hat, dann kann der Name der Variable als <em>SteuerelementID</em> angegeben werden (diese Methode hat Vorrang vor der n&auml;chsten Methode). Daher ist es am besten, dem Steuerelement eine Variable zuzuweisen, auf das sp&auml;ter mit GuiControl oder GuiControlGet zugegriffen wird, selbst wenn es nicht eingabef&auml;hig ist (z. B. GroupBox oder Text).</p>
          <p>Ansonsten ist die <em>SteuerelementID</em> entweder die ClassNN (Klassenname und Instanznummer des Steuerelements) oder der Name/Text des Steuerelements, die beide mit Windows Spy ermittelt werden k&ouml;nnen. Beim Name/Text wird das &Uuml;bereinstimmungsverhalten mit <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a> bestimmt. Hinweis: Der Dateiname eines Picture-Steuerelements kann auch als <em>SteuerelementID</em> verwendet werden.</p>
          <p><span class="ver">[v1.1.04+]:</span> <em>SteuerelementID</em> kann das <a href="Gui.htm#HwndOutputVar">HWND</a> eines Steuerelements sein. Wie bei allen anderen Werten f&uuml;r SteuerelementID auch, muss das Gui angegeben werden, falls sich das Steuerelement nicht auf dem Standard-Gui befindet.</p></td>
      </tr>
      <tr>
        <td>Param4</td>
        <td>Dieser Parameter kann weggelassen werden, solange er nicht von einem Unterbefehl aus der unteren Liste ben&ouml;tigt wird.</td>
      </tr>
    </table>
    <h3>ErrorLevel</h3>
    <p><span class="ver">[v1.1.04+]</span> Dieser Befehl ist in der Lage, bei Misserfolg eine Ausnahme auszul&ouml;sen. F&uuml;r mehr Informationen, siehe <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
    <p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird auf 1 gesetzt, wenn das angegebene Fenster/Steuerelement nicht existiert oder ein anderes Problem aufgetreten ist. Ansonsten auf 0.</p>
    <h3>Unterbefehle</h3>
    <p><strong>(Leer)</strong>: <em>Unterbefehl</em> leer lassen, um Inhalte des Steuerelements abzurufen. Alle Steuerelementarten sind selbsterkl&auml;rend, mit Ausnahme von:</p>
    <p><a href="GuiControls.htm#Picture">Picture</a>: Ermittelt den Dateinamen des Bildes, wie es urspr&uuml;nglich angegeben wurde, als das Steuerelement erstellt wurde. Dieser Name &auml;ndert sich nicht, selbst wenn ein neuer Bilddateiname angegeben ist.</p>
    <p><a href="GuiControls.htm#Edit">Edit</a>: Ermittelt den Inhalt, wobei jeder Zeilenumbruch im Text ein LF-Zeichen (`n) anstelle eines traditionellen Zeichenpaares CR+LF (` r`n) repr&auml;sentiert, das von Nicht-GUI-Befehlen wie <a href="ControlGetText.htm">ControlGetText</a> und <a href="ControlSetText.htm">ControlSetText</a> verwendet wird.</p>
    <p><a href="GuiControls.htm#Hotkey">Hotkey</a>: Ermittelt einen leeren Wert, wenn kein Hotkey im Steuerelement ist. Ansonsten werden Modifikatoren und Tastenname ermittelt. Beispiele: <code>^!C</code>, <code>^Home</code>, <code>+^NumpadHome</code>.</p>
    <p><a href="GuiControls.htm#Checkbox">Checkbox</a>/<a href="GuiControls.htm#Radio">Radio</a>: 1, wenn das Steuerelement markiert ist, 0, wenn nicht markiert oder -1, wenn ein graues H&auml;kchen. Um stattdessen den Text/die Bezeichnung des Steuerelements abzurufen, verwendet das Wort Text in <em>Param4</em>. Hinweis: Im Gegensatz zum Befehl <a href="Gui.htm#Submit">Gui Submit</a> werden Optionsfelder immer einzeln abgerufen, unabh&auml;ngig davon, ob sie in einer Gruppe sind.</p>
    <p><a href="GuiControls.htm#UpDown">UpDown</a>/<a href="GuiControls.htm#Slider">Slider</a>/<a href="GuiControls.htm#Progress">Progress</a>: Ermittelt die aktuelle Position des Steuerelements.</p>
    <p><a href="GuiControls.htm#Tab">Tab</a>/<a href="GuiControls.htm#DropDownList">DropDownList</a>/<a href="GuiControls.htm#ComboBox">ComboBox</a>/<a href="GuiControls.htm#ListBox">ListBox</a>: Ermittelt den Text des aktuell ausgew&auml;hlten Eintrags/Tabs (oder die Position, wenn das Steuerelement die <a href="Gui.htm#AltSubmit">AltSubmit</a>-Eigenschaft hat). Bei einer ComboBox wird stattdessen der Text im Edit-Feld des Steuerelements ermittelt, wenn kein Eintrag ausgew&auml;hlt ist. Bei einer <a href="GuiControls.htm#ListBoxMulti">ListBox mit Mehrfachauswahl</a> wird das <a href="Gui.htm#Delimiter">aktuelle Trennzeichen</a> des Fensters ausgegeben.</p>
    <p><a href="ListView.htm">ListView</a> und <a href="TreeView.htm">TreeView</a>: Werden nicht unterst&uuml;tzt, wenn der <em>Unterbefehl</em> leer ist. Verwendet stattdessen die internen <a href="ListView.htm#BuiltIn">ListView</a>- und <a href="TreeView.htm#BuiltIn">TreeView</a>-Funktionen.</p>
    <p><a href="GuiControls.htm#StatusBar">StatusBar</a>: Ermittelt nur den ersten Teil des Textes.</p>
    <p><a href="GuiControls.htm#ActiveX">ActiveX</a>: Ermittelt ein neues Wrapper-Objekt einer ActiveX-Komponente vom Steuerelement.</p>
    <p>Hinweis: Um stattdessen den Text/die Bezeichnung des Steuerelements abzurufen, verwendet das Wort Text in <em>Param4</em>.</p>
    <br>
    <p><strong>GuiControlGet, Ausgabevariable, Pos</strong>: Ermittelt die Position und Gr&ouml;&szlig;e des Steuerelements. Die Position bezieht sich auf den Client-Bereich des GUI-Fensters, ohne Titelleiste, Men&uuml;leiste und Rahmen. Die Informationen werden in vier Variablen gespeichert und beginnen alle mit <em>Ausgabevariable</em>. Zum Beispiel:</p>
    <pre>GuiControlGet, EigenesEdit, Pos
MsgBox Die X-Koordinate ist %EigenesEditX%. Die Y-Koordinate ist %EigenesEditY%. Die Breite ist %EigenesEditW%. Die H&ouml;he ist %EigenesEditH%.</pre>
    <p>Um mehrere globale anstelle von lokalen Variablen innerhalb einer <a href="../Functions.htm">Funktion</a> zu erstellen, <a href="../Functions.htm#Global">deklariert</a> die <em>Ausgabevariable</em> als globale Variable, bevor dieser Befehl verwendet wird (das Gegenteil davon gilt f&uuml;r <a href="../Functions.htm#AssumeGlobal">global-angesehene</a> Funktionen).</p>
    <br>
    <p><strong>GuiControlGet, Ausgabevariable, Focus</strong>: Ermittelt die Kennung des Steuerelements (ClassNN), welches zurzeit den Tastaturfokus hat. Da das angegebene GUI-Fenster f&uuml;r das fokussierte Steuerelement <a href="WinActivate.htm">aktiv</a> sein muss, ist <em>Ausgabevariable</em> leer, wenn es nicht aktiv ist. Anwendungsbeispiel: <code>GuiControlGet, focused_control, focus</code>.</p>
    <p><strong>GuiControlGet, Ausgabevariable, FocusV</strong> <span class="ver">[v1.0.43.06+]</span>: Genau wie <em>Focus</em> (oben), nur dass der Name der <a href="Gui.htm#Events">zugewiesenen Variable</a> des fokussierten Steuerelements ermittelt wird. Fehlt dem Steuerelement eine zugewiesene Variable, dann werden stattdessen die ersten 63 Zeichen des Textes/der Bezeichnung abgerufen (wird h&auml;ufiger benutzt, damit nicht jeder Schaltfl&auml;che ein Variablennamen zugewiesen werden muss).</p>
    <p><strong>GuiControlGet, Ausgabevariable, Enabled</strong>: Ermittelt 1, wenn das Steuerelement aktiviert ist oder 0, wenn es deaktiviert ist.</p>
    <p><strong>GuiControlGet, Ausgabevariable, Visible</strong>: Ermittelt 1, wenn das Steuerelement sichtbar ist oder 0, wenn es versteckt ist.</p>
    <p id="Hwnd"><strong>GuiControlGet, Ausgabevariable, Hwnd</strong> <span class="ver">[v1.0.46.16+]</span>: Ermittelt das HWND (Window Handle) des angegebenen Steuerelements. Das HWND eines Steuerelements wird oft bei <a href="PostMessage.htm">PostMessage</a>, <a href="PostMessage.htm">SendMessage</a> und <a href="DllCall.htm">DllCall</a> verwendet. Hinweis: <a href="Gui.htm#HwndOutputVar">HwndAusgabevariable</a> ist in der Regel der k&uuml;rzere Weg, das HWND zu ermitteln.</p>
    <p id="Name"><strong>GuiControlGet, Ausgabevariable, Name</strong> <span class="ver">[v1.1.03+]</span>: Ermittelt den Namen der Variable, die dem GUI-Steuerelement <a href="Gui.htm#Events">zugewiesen</a> wurde, falls verf&uuml;gbar, ansonsten wird die <em>Ausgabevariable</em> leer gemacht.</p>
    <h3>Bemerkungen</h3>
    <p>Damit auch ein anderes Fenster neben dem Standardfenster bearbeitet werden kann (siehe unten), muss dessen Name oder Nummer gefolgt von einem Doppelpunkt vor dem Unterbefehl eingef&uuml;gt werden, wie zum Beispiel:</p>
    <pre>GuiControlGet, EigenesEdit, EigenesGui:
GuiControlGet, EigenesEdit, EigenesGui:Pos
GuiControlGet, Ausgabevariable, EigenesGui:Focus</pre>
    <p>Das ist auch notwendig, wenn <em>SteuerelementID</em> die zugewiesene Variable eines Steuerelements oder ein HWND ist.</p>
    <p>Ein <a href="../misc/Threads.htm">GUI-Thread</a> wird aufgrund einer GUI-Aktion wie jeder andere Thread behandelt. GUI-Aktionen sind das Ausw&auml;hlen von Eintr&auml;gen in einer Men&uuml;leiste oder das Ausf&uuml;hren eines <a href="Gui.htm#label">g-Labels</a> (z. B. beim Dr&uuml;cken einer Schaltfl&auml;che).</p>
    <p>Der <a href="Gui.htm#DefaultWin">Standardfenstername</a> f&uuml;r einen GUI-Thread ist von dem Fenster, das diesen Thread gestartet hat. Nicht-GUI-Threads verwenden standardm&auml;&szlig;ig die 1.</p>
    <h3>Verwandte Befehle</h3>
    <p><a href="Gui.htm">Gui</a>, <a href="GuiControl.htm">GuiControl</a>, <a href="ControlGet.htm">ControlGet</a></p>
    <h3>Beispiele</h3>
    <pre class="NoIndent">GuiControlGet, EigenesEdit
GuiControlGet, Inhalt,, EigenesEdit  <em>;  Gleiche wie oben, nur dass eine nicht-standardm&auml;&szlig;ige Ausgabevariable verwendet wird.</em>
GuiControlGet, EigeneCheckBox1 <em>; Ermittelt 1, wenn markiert, 0, wenn nicht markiert.</em>
GuiControlGet, EigeneCheckBox1,,, Text  <em>; Ermittelt die Bezeichnung/den Text des Kontrollk&auml;stchens.</em>
GuiControlGet, Pic, Pos, Static4  <em>; Die Position/Gr&ouml;&szlig;e wird in PicX, PicY, PicW, und PicH gespeichert.</em></pre>
  </div>
  </section>
</div>
<script type="text/javascript">WriteFooter(1);</script>
</body>
</html>