<!DOCTYPE HTML>
<html>
<head>
<title>StringReplace</title>
<meta name="keywords" content="Befehl, String">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/ga.js" type="text/javascript"></script>
<!--[if lt IE 9]>
<script src="../static/html5.js"></script>
<![endif]-->
<script src="../navbar/NavScript.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <article>
    <h1>StringReplace</h1>
    <p>Ersetzt den angegebenen Teilstring mit einem neuen String.</p>
    <pre class="Syntax">StringReplace, Ausgabevariable, Eingabevariable, Suchtext [, Ersatztext, AllesErsetzen?] </pre>
    <h3>Parameter</h3>
    <table class="info">
      <tr>
        <td>Ausgabevariable</td>
        <td>Der Name der Variable, in der das Ergebnis des Ersatzprozesses gespeichert wird. </td>
      </tr>
      <tr>
        <td>Eingabevariable</td>
        <td>Name der Variable, dessen Inhalt eingelesen wird. Umschlie&szlig;t den Namen erst mit Prozentzeichen, wenn der <em>Inhalt</em> der Variable als Name verwendet werden soll.</td>
      </tr>
      <tr>
        <td>Suchtext</td>
        <td>Text, der gesucht wird. Die &Uuml;bereinstimmung ist erst von der Gro&szlig;- bzw. Kleinschreibung abh&auml;ngig, wenn <a href="StringCaseSense.htm">StringCaseSense</a> aktiv ist. </td>
      </tr>
      <tr>
        <td style="width: 15%;">Ersatztext</td>
        <td style="width: 85%;">Der <em>Suchtext</em> wird mit diesem Text ersetzt. Sobald dieser Parameter weggelassen wird, wird der <em>Suchtext</em> mit einem leeren String ersetzt. Das hei&szlig;t, dass der Text in der <em>Ausgabevariable</em> weggelassen wird.</td>
      </tr>
      <tr>
        <td>AllesErsetzen?</td>
        <td><p>Wenn nicht vorhanden, dann wird nur das erste Vorkommen vom <em>Suchtext</em> ersetzt. Enth&auml;lt dieser Parameter aber eine 1, ein A oder das Wort All, dann werden alle Vorkommen ersetzt.</p>
          <p>Verwendet das Wort <strong>UseErrorLevel</strong>, um die Anzahl der ersetzten Vorkommen in ErrorLevel zu speichern (0 f&uuml;r keine). Mit UseErrorLevel werden auch alle Vorkommen ersetzt.</p></td>
      </tr>
    </table>
    <h3>ErrorLevel</h3>
    <p>Wenn der letzte Parameter <em>UseErrorLevel</em> ist, dann enth&auml;lt <a href="../misc/ErrorLevel.htm">ErrorLevel</a> die Anzahl der ersetzten Vorkommen (0 wenn keine). Ansonsten wird ErrorLevel auf 1 gesetzt, wenn der <em>Suchtext</em> nicht in der <em>Eingabevariable</em> gefunden wird oder 0, wenn er gefunden wird.</p>
    <h3>Bemerkungen</h3>
    <p>Wie bei allen anderen Befehlen darf die <em>Ausgabevariable</em> dieselbe Variable wie die <em>Eingabevariable</em> sein.</p>
    <p>Die internen Variablen <a href="../Variables.htm">A_Space</a> und <a href="../Variables.htm">A_Tab</a> enthalten jeweils ein einzelnes Leerzeichen und ein einzelnes Tabulator-Zeichen. Sie sind n&uuml;tzlich, um Leerzeichen und Tabulatoren einzeln oder am Anfang oder Ende des <em>Suchstrings</em> zu suchen.</p>
    <p>Seit v1.0.45 ist die AllSlow-Option aufgrund von Verbesserungen der Performance und Speichernutzung veraltet. Sie kann weiterhin angegeben werden, hat aber keine Auswirkungen.</p>
    <h3>Verwandte Befehle</h3>
    <p><a href="RegExReplace.htm">RegExReplace()</a>, <a href="IfInString.htm">IfInString</a>, <a href="StringCaseSense.htm">StringCaseSense</a>, <a href="StringLeft.htm">StringLeft</a>, <a href="StringLeft.htm">StringRight</a>, <a href="StringMid.htm">StringMid</a>, <a href="StringTrimLeft.htm">StringTrimLeft</a>, <a href="StringTrimLeft.htm">StringTrimRight</a>, <a href="StringLen.htm">StringLen</a>, <a href="StringLower.htm">StringLower</a>, <a href="StringLower.htm">StringUpper</a>, <a href="StringGetPos.htm">StringGetPos</a>, <a href="IfIs.htm">If Variable is Typ</a></p>
    <h3>Beispiele</h3>
    <pre class="NoIndent"><em>; Entfernt alle CR+LF-Paare in der Zwischenablage:</em>
StringReplace, Clipboard, Clipboard, `r`n, , All

<em>; Ersetzt alle Leerzeichen mit Pluszeichen:</em>
StringReplace, NeuerStr, AlterStr, %A_SPACE%, +, All

<em>; Entfernt alle leeren Zeilen im Text einer Variable:</em>
Loop
{
    StringReplace, EigenerStr, EigenerStr, `r`n`r`n, `r`n, UseErrorLevel
    If ErrorLevel = 0  <em>; Ersetzen nicht mehr notwendig.</em>
        break
}</pre>
  </article>
  </section>
</div>
<script type="text/javascript">WriteFooter(1);</script>
</body>
</html>