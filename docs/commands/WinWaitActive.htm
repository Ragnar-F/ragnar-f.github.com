<!DOCTYPE HTML>
<html>
<head>
<title>WinWaitActive / WinWaitNotActive</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/jquery.js" type="text/javascript"></script>
<script src="../static/tree.jquery.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>WinWaitActive / WinWaitNotActive</h1>

<p>Wartet, bis das angegebene Fenster aktiv oder nicht mehr aktiv ist.</p>

<pre class="Syntax">WinWaitActive [, Fenstertitel, Fenstertext, Sekunden, Titelausnahme, Textausnahme]
WinWaitNotActive [, Fenstertitel, Fenstertext, Sekunden, Titelausnahme, Textausnahme]</pre>
<h3>Parameter</h3>
<dl>

  <dt>Fenstertitel</dt>
  <dd><p>Ein Fenstertitel oder sonstige Kriterien, die das Zielfenster ermitteln sollen. Siehe <a href="../misc/WinTitle.htm">Fenstertitel</a>.</p></dd>

  <dt>Fenstertext</dt>
  <dd><p>In diesem Parameter kann ein Teilstring angegeben werden, der in einem Textelement des Zielfensters vorkommt (abrufbar mit Windows Spy). Versteckte Textelemente werden auch erkannt, sofern <a href="DetectHiddenText.htm">DetectHiddenText</a> aktiv ist.</p></dd>

  <dt>Sekunden</dt>
  <dd><p>Die Wartezeit in Sekunden, bis der Befehl beendet und <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 1 gesetzt wird. Ist dieser Parameter leer oder nicht vorhanden, wartet der Befehl unendlich lang. Die Angabe von 0 ist das gleiche wie, als würde man 0.5 angeben. Dieser Parameter kann ein <a href="../Variables.htm#Expressions">Ausdruck</a> sein.</p></dd>

  <dt>Titelausnahme</dt>
  <dd><p>Ignoriert Fenster, deren Titel diesen Wert enthalten.</p></dd>

  <dt>Textausnahme</dt>
  <dd><p>Ignoriert Fenster, deren Textelemente diesen Wert enthalten.</p></dd>

</dl>

<h3>ErrorLevel</h3>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird auf 1 gesetzt, wenn der Befehl die Zeit überschritten hat, ansonsten auf 0.</p>
<h3>Bemerkungen</h3>
<p>Wenn ein passendes Fenster zustande kommt, wartet der Befehl nicht, bis die angegebenen <em>Sekunden</em> abgelaufen sind. Stattdessen wird sofort <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 0 gesetzt und das Script fortgesetzt.</p>
<p>Sowohl WinWaitActive als auch WinWaitNotActive aktualisieren das <a href="../misc/WinTitle.htm#LastFoundWindow">Zuletzt Gefundene Fenster</a>, wenn ein geeignetes Fenster beim Starten des Befehls aktiv ist. Zusätzlich wird WinWaitActive das Zuletzt Gefundene Fenster aktualisieren, wenn ein geeignetes Fenster aktiv wird, bevor der Befehl die Zeit überschreitet.</p>
<p>Während der Befehl in einem Wartezustand ist, können neue <a href="../misc/Threads.htm">Threads</a> mittels <a href="../Hotkeys.htm">Hotkey</a>, <a href="Menu.htm">benutzerdefinierte Menüeinträge</a> oder <a href="SetTimer.htm">Timer</a> gestartet werden.</p>
<p>Es ändert sich nichts, wenn ein anderer <a href="../misc/Threads.htm">Thread</a> die Inhalte der Parametervariablen ändert. Der Befehl verwendet weiterhin den Titel und Text, die ihm anfangs gegeben worden sind.</p>
<p>Fenstertitel und -texte unterscheiden zwischen Groß- und Kleinschreibung. Solange <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> deaktiviert ist, werden versteckte Fenster nicht wahrgenommen.</p>
<h3>Siehe auch</h3>
<p><a href="WinWait.htm">WinWait</a>, <a href="WinWaitClose.htm">WinWaitClose</a>, <a href="WinExist.htm">IfWinExist</a>, <a href="WinActive.htm">IfWinActive</a>, <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>, <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a></p>
<h3>Beispiel</h3>
<pre class="NoIndent">Run, notepad.exe
WinWaitActive, Unbenannt - Editor, , 2
if ErrorLevel
{
    MsgBox, WinWait hat die Zeit überschritten.
    return
}
else
    WinMinimize  <em>; Minimiert das gefundene Fenster von WinWaitActive.</em></pre>

</body>
</html>
