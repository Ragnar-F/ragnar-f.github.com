<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>FileMove</title>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<link href="../css/default.css" rel="stylesheet" type="text/css">
</head>
<body>
<script src="../../NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<h1>FileMove</h1>

<p>Verschiebt oder benennt beliebig viele Dateien um.</p>

<pre class="Syntax">FileMove, Quellmuster, Zielmuster [, Flag]</pre>
<h3>Parameter</h3>
<table class="info">
  <tr>
    <td>Quellmuster</td>
    <td>Der Name einer Datei oder eine musterbasierte Suche wie C:\Temp\*.tmp. Das <em>Quellmuster</em> befindet sich im <a href="../Variables.htm#WorkingDir">A_WorkingDir</a>-Verzeichnis, solange kein absoluter Pfad angegeben ist.</td>
  </tr>
  <tr>
    <td>Zielmuster</td>
    <td>Der Name oder Muster des Ziels, das sich im <a href="../Variables.htm#WorkingDir">A_WorkingDir</a>-Verzeichnis befindet, solange kein absoluter Pfad angegeben ist.  Damit beim Verschieben von Dateien die Namen beibehalten werden, darf nur der Ordnernamen wie in den folgenden Beispielen angegeben werden:<br> FileMove, C:\*.txt, C:\Eigener Ordner<br> FileMove, C:\*.txt, C:\Eigener Ordner\*.*</td>
  </tr>
  <tr>
    <td width="15%">Flag</td>
    <td width="85%"><p>(Optional) Mit diesem Parameter wird bestimmt, ob Dateien &uuml;berschrieben werden, wenn sie bereits vorhanden sind:</p>
      <p>0 = (Standard) vorhandene Dateien nicht &uuml;berschreiben<br>1 = vorhandene Dateien &uuml;berschreiben</p>
      <p>Dieser Parameter kann ein <a href="../Variables.htm#Expressions">Ausdruck</a> oder True bzw. False sein (intern auch als 1 bzw. 0 gespeichert).</p></td>
  </tr>
</table>

<h3>ErrorLevel</h3>
<p><span class="ver">[v1.1.04+]</span> Dieser Befehl ist in der Lage, bei Misserfolg eine Ausnahme auszul&ouml;sen. F&uuml;r mehr Informationen, siehe <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
<p>Bei Problemen enth&auml;lt <a href="../misc/ErrorLevel.htm">ErrorLevel</a> die Anzahl an Dateien, die nicht verschoben werden konnten, ansonsten wird ErrorLevel auf 0 gesetzt. Allerdings wird ErrorLevel auf 0 gesetzt, wenn die Quelldatei eine einzelne Datei (ohne Platzhalter) ist und nicht existiert. Zur &Uuml;berpr&uuml;fung dieser Bedingung kann <a href="IfExist.htm">IfExist</a> oder <a href="../Functions.htm#FileExist">FileExist()</a> mit der Quelldatei verwendet werden, bevor sie verschoben wird.</p>
<p>Im Gegensatz zu <a href="FileCopy.htm">FileCopy</a> wird das Verschieben einer Datei auf sich selbst immer als Erfolg betrachtet, auch wenn der &Uuml;berschreibmodus nicht aktiv ist.</p>
<p>Wenn Dateien gefunden wurden, enth&auml;lt <a href="../Variables.htm#LastError">A_LastError</a> eine Null oder den R&uuml;ckgabewert der Systemfunktion GetLastError()-Funktion unmittelbar nach dem letzten Fehler. Ansonsten enth&auml;lt A_LastError einen Fehlercode, der darauf hinweist, warum keine Dateien gefunden wurden.</p>

<h3>Bemerkungen</h3>
<p>FileMove verschiebt nur Dateien. Um stattdessen den Inhalt eines Ordners zu verschieben (alle Dateien und Unterordner), sieht die Beispiele weiter unten. Mit <a href="FileMoveDir.htm">FileMoveDir</a> k&ouml;nnen einzelne Ordner verschoben oder umbenannt werden.</p>
<p>Die Operation wird fortgesetzt, selbst wenn Fehler auftreten.</p>
<p>Obwohl dieser Befehl in der Lage ist, Dateien auf andere Datentr&auml;ger zu verschieben, dauert der Vorgang l&auml;nger als das Verschieben auf dem gleichen Datentr&auml;ger. Denn das Verschieben auf dem gleichen Datentr&auml;ger ist das gleiche wie Umbenennen, was bedeutend schneller ist.</p>
<h3>Verwandte Befehle</h3>
<p><a href="FileCopy.htm">FileCopy</a>, <a href="FileCopyDir.htm">FileCopyDir</a>, <a href="FileMoveDir.htm">FileMoveDir</a>, <a href="FileDelete.htm">FileDelete</a></p>
<h3>Beispiele</h3>
<pre class="NoIndent">FileMove, C:\Eigene Dokumente\Liste1.txt, D:\Hauptsicherung\  <em>; Verschiebt die Datei, ohne sie umzubenennen.</em>
FileMove, C:\Datei bevor.txt, C:\Datei danach.txt  <em>; Benennt eine Datei um.</em>
FileMove, C:\Ordner1\*.txt, D:\Neuer Ordner\*.bkp  <em>; Verschiebt und benennt die Erweiterung der Dateien um.</em></pre>
<p>&nbsp;</p>
<pre class="NoIndent"><em>; Das folgende Beispiel verschiebt alle Dateien und Unterordner in einem anderen Ordner:</em>
Fehlerz&auml;hlung := MoveFilesAndFolders("C:\Eigener Ordner\*.*", "D:\Zielordner f&uuml;r Dateien & Ordner")
If Fehlerz&auml;hlung &lt;&gt; 0
    MsgBox %Fehlerz&auml;hlung% Dateien/Ordner konnten nicht verschoben werden.

MoveFilesAndFolders(Quellmuster, Zielordner, &Uuml;berschreiben = false)
<em>; Verschiebt alle Dateien und Ordner vom Quellmuster in dem Zielordner und
; gibt die Anzahl an Dateien/Ordnern zur&uuml;ck, die nicht verschoben werden konnten. Diese Funktion ben&ouml;tigt v1.0.38+, weil der 2. Modus von FileMoveDir verwendet wird.</em>
{
    If &Uuml;berschreiben = 1
        &Uuml;berschreiben = 2  <em>; Siehe <a href="FileMoveDir.htm">FileMoveDir</a> f&uuml;r die Beschreibung vom 1. und 2. Modus.</em>
    <em>; Zuerst alle Dateien verschieben (aber nicht die Ordner):</em>
    FileMove, %Quellmuster%, %Zielordner%, %&Uuml;berschreiben%
    Fehlerz&auml;hlung := ErrorLevel
    <em>; Jetzt alle Ordner verschieben:</em>
    Loop, %Quellmuster%, 2  <em>; 2 bedeutet "nur Ordner".</em>
    {
        FileMoveDir, %A_LoopFileFullPath%, %Zielordner%\%A_LoopFileName%, %&Uuml;berschreiben%
        Fehlerz&auml;hlung += ErrorLevel
        If ErrorLevel  <em>; Jeden Problemordner mit Namen anzeigen.</em>
            MsgBox %A_LoopFileFullPath% kann nicht nach  %Zielordner% verschoben werden.
    }
    Return Fehlerz&auml;hlung
}</pre>

</body>
</html>