<!DOCTYPE HTML>
<html>
<head>
<title>Loop</title>
<meta name="keywords" content="Befehl, Ablaufsteuerung, Schleife">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/ga.js" type="text/javascript"></script>
<!--[if lt IE 9]>
<script src="../static/html5.js"></script>
<![endif]-->
<script src="../navbar/NavScript.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <article>
      <h1>Loop</h1>
      <p>Kontinuierliche Wiederholung von mehreren Befehlen: entweder mittels einer definierten Anzahl an Durchl&auml;ufen oder bis ein <a href="Break.htm">Break</a>-Befehl zum Abbruch auffordert.</p>
      <pre class="Syntax">Loop [, Anzahl]</pre>
      <h3>Parameter</h3>
      <table class="info">
        <tr>
          <td style="width: 15%;">Anzahl</td>
          <td style="width: 85%;"><p>Wie oft die Schleife wiederholt werden soll (Iteration). Falls weggelassen, wird die Schleife solange wiederholt, bis ein <a href="Break.htm">Break</a> oder <a href="Return.htm">Return</a> auftritt.</p>
            <p>Wenn <em>Anzahl</em> ein Variablenverweis wie %Elementanzahl% ist, wird die Schleife komplett &uuml;bersprungen, sobald die Variable leer ist oder eine Zahl kleiner als 1 enth&auml;lt.</p>
            <p>Da <a href="LoopFile.htm">Datei-Schleifen</a> unterst&uuml;tzt werden m&uuml;ssen, kann <em>Anzahl</em> kein Ausdruck sein. Allerdings kann, wie bei allen Parametern ohne Ausdruck, ein Ausdruck erzwungen werden, indem ein Prozentzeichen mit einem Leerzeichen vorangestellt wird. Zum Beispiel: <code>Loop % Anzahl + 1</code>. In solchen F&auml;llen wird der Ausdruck nur einmal ausgewertet, bevor die Schleife beginnt.</p></td>
        </tr>
      </table>
      <h3>Bemerkungen</h3>
      <p>Nach einer Schleife erfolgt f&uuml;r gew&ouml;hnlich ein <a href="Block.htm">Block</a> - bestehend aus mehreren Anweisungen, die den <em>Schleifenk&ouml;rper</em> bilden. Schleifen mit nur einer Anweisung ben&ouml;tigen diesen Block nicht (in diesem Fall z&auml;hlt ein "If" und das dazugeh&ouml;rige "Else" als eine Anweisung).</p>
      <p>H&auml;ufig wird dieser Befehl als Endlosschleife verwendet, die einen <a href="Break.htm">Break</a>-Befehl irgendwo im <em>Schleifenk&ouml;rper</em> enth&auml;lt, um die Schleife zu stoppen.</p>
      <p>Es wird empfohlen, anstelle von <a href="Goto.htm">Goto</a> eine Schleife in Verbindung mit <a href="Break.htm">Break</a> und <a href="Continue.htm">Continue</a> zu verwenden, weil das Script dadurch verst&auml;ndlicher und besser verwaltbar ist. Um eine "Do...While"-Schleife zu simulieren, sollte die letzte Anweisung des <em>Schleifenk&ouml;rpers</em> eine IF-Anweisung sein, die den <a href="Break.htm">Break</a>-Befehl ausf&uuml;hrt, sobald die Bedingung erf&uuml;llt wird. Mit der gleichen Technik kann eine "While"-Schleife erstellt werden - daf&uuml;r ist aber der <a href="While.htm">While</a>-Befehl besser geeignet.</p>
      <p>Die interne Variable <strong>A_Index</strong> enth&auml;lt die Nummer des aktuellen Schleifendurchlaufs. Sobald der <em>Schleifenk&ouml;rper</em> das erste Mal ausgef&uuml;hrt wird, enth&auml;lt A_Index eine 1, beim zweiten Mal eine 2 und so weiter. Wenn eine innere Schleife von eine &auml;u&szlig;ere Schleife umschlossen ist, hat die innere Schleife Vorrang. A_Index funktioniert in jeder Schleifenvariante, auch in <a href="LoopFile.htm">dateilesenden Schleifen</a> und <a href="LoopReg.htm">Registrierung-Schleifen</a>. Au&szlig;erhalb einer Schleife enth&auml;lt A_Index eine 0.</p>
      <p>Der "<a href="Block.htm#otb">One True Brace Style</a>" kann gegebenenfalls mit einer normalen Schleife verwendet werden (aber nicht mit speziellen Schleifen wie <a href="LoopFile.htm">Datei-Schleife</a> und <a href="LoopParse.htm">Parsing-Schleife</a>. Zum Beispiel:</p>
      <pre>Loop <strong>{</strong>
    ...
<strong>}</strong>
Loop %Anzahl% <strong>{</strong>
    ...
<strong>}</strong></pre>
      <p>Spezielle Schleifen: Schleifen k&ouml;nnen dazu verwendet werden, Dateien, Ordner oder Registrierungseintr&auml;ge zu ermitteln (einer nach dem anderen). Siehe <a href="LoopFile.htm">Datei-Schleife</a> und <a href="LoopReg.htm">Registrierung-Schleife</a> f&uuml;r Details. Dar&uuml;ber hinaus k&ouml;nnen <a href="LoopReadFile.htm">dateilesende Schleifen</a> den kompletten Inhalt einer Datei Zeile f&uuml;r Zeile durchgehen. <a href="LoopParse.htm">Parsing-Schleifen</a> hingegen k&ouml;nnen bestimmte Felder abrufen, die sich innerhalb eines Strings befinden und durch Trennzeichen getrennt sind.</p>
      <h3>Verwandte Befehle</h3>
      <p><a href="Until.htm">Until</a>, <a href="While.htm">While-Loop</a>, <a href="For.htm">For-Loop</a>, <a href="LoopFile.htm">Loop (Dateien & Ordner)</a>, <a href="LoopReg.htm">Registrierung-Loop</a>, <a href="LoopReadFile.htm">dateilesende Schleife</a>, <a href="LoopParse.htm">Parsing-Loop</a>, <a href="Break.htm">Break</a>, <a href="Continue.htm">Continue</a>, <a href="Block.htm">Blocks</a></p>
      <h3>Beispiele</h3>
      <pre class="NoIndent">Loop, 3
{
    MsgBox, Iterationsnummer ist %A_Index%.  <em>; A_Index wird 1, 2 und 3 sein.</em>
    Sleep, 100
}

Loop
{
    If a_index &gt; 25
        break  <em>; Schleife unterbrechen.</em>
    If a_index &lt; 20
        continue <em>; Folgendes &uuml;berspringen und neue Iteration starten.</em>
    MsgBox, a_index = %a_index% <em>; Hier werden nur die Nummern von 20 bis 25 angezeigt.</em>
}</pre>
    </article>
  </section>
</div>
<script type="text/javascript">WriteFooter(1);</script>
</body>
</html>
