<!DOCTYPE HTML>
<html>
<head>
<title>Loop</title>
<meta name="keywords" content="Befehl, Ablaufsteuerung, Schleife">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/jquery.js" type="text/javascript"></script>
<script src="../static/tree.jquery.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>
<h1>Loop</h1>
<p>Kontinuierliche Wiederholung von mehreren Befehlen: entweder mittels einer definierten Anzahl an Durchläufen oder bis ein <a href="Break.htm">Break</a>-Befehl zum Abbruch auffordert.</p>
<pre class="Syntax">Loop [, Anzahl]</pre>
<h3>Parameter</h3>
<table class="info">
  <tr>
    <td style="width: 15%;">Anzahl</td>
    <td style="width: 85%;">
    <p>Wie oft die Schleife wiederholt werden soll (Iteration). Ist dieser Parameter nicht vorhanden, wird die Schleife solange wiederholt, bis ein <a href="Break.htm">Break</a> oder <a href="Return.htm">Return</a> auftritt.</p>
    <p>Wenn <em>Anzahl</em> ein Variablenverweis wie %Elementanzahl% ist, wird die Schleife komplett übersprungen, sobald die Variable leer ist oder eine Zahl kleiner als 1 enthält.</p>
    <p>Da <a href="LoopFile.htm">Datei-Schleifen</a> unterstützt werden müssen, kann <em>Anzahl</em> kein Ausdruck sein. Allerdings kann, wie bei allen Parametern ohne Ausdruck, ein Ausdruck erzwungen werden, indem ein Prozentzeichen mit einem Leerzeichen vorangestellt wird. Zum Beispiel: <code>Loop % Anzahl + 1</code>. In solchen Fällen wird der Ausdruck nur einmal ausgewertet, bevor die Schleife beginnt.</p>
    </td>
  </tr>
</table>
<h3>Bemerkungen</h3>
<p>Nach einer Schleife erfolgt für gewöhnlich ein <a href="Block.htm">Block</a> - bestehend aus mehreren Anweisungen, die den <em>Schleifenkörper</em> bilden. Schleifen mit nur einer Anweisung benötigen diesen Block nicht (in diesem Fall zählt ein "If" und das dazugehörige "Else" als eine Anweisung).</p>
<p>Häufig wird dieser Befehl als Endlosschleife verwendet, die einen <a href="Break.htm">Break</a>-Befehl irgendwo im <em>Schleifenkörper</em> enthält, um die Schleife zu stoppen.</p>
<p>Es wird empfohlen, anstelle von <a href="Goto.htm">Goto</a> eine Schleife in Verbindung mit <a href="Break.htm">Break</a> und <a href="Continue.htm">Continue</a> zu verwenden, weil das Script dadurch verständlicher und besser verwaltbar ist. Um eine "Do...While"-Schleife zu simulieren, sollte die letzte Anweisung des <em>Schleifenkörpers</em> eine IF-Anweisung sein, die den <a href="Break.htm">Break</a>-Befehl ausführt, sobald die Bedingung erfüllt wird. Mit der gleichen Technik kann eine "While"-Schleife erstellt werden - dafür ist aber der <a href="While.htm">While</a>-Befehl besser geeignet.</p>
<p>Die interne Variable <strong>A_Index</strong> enthält die Nummer des aktuellen Schleifendurchlaufs. Sobald der <em>Schleifenkörper</em> das erste Mal ausgeführt wird, enthält A_Index eine 1, beim zweiten Mal eine 2 und so weiter. Wenn eine innere Schleife von eine äußere Schleife umschlossen ist, hat die innere Schleife Vorrang. A_Index funktioniert in jeder Schleifenvariante, auch in <a href="LoopFile.htm">Loops (Dateien &amp; Ordner)</a> und <a href="LoopReg.htm">Registrierung-Schleifen</a>. Außerhalb einer Schleife enthält A_Index eine 0.</p>
<p>Der "<a href="Block.htm#otb">One True Brace Style</a>" kann gegebenenfalls mit einer normalen Schleife verwendet werden (aber nicht mit speziellen Schleifen wie <a href="LoopFile.htm">Loop (Dateien &amp; Ordner)</a> und <a href="LoopParse.htm">Parsing-Schleife</a>. Zum Beispiel:</p>
<pre>Loop <strong>{</strong>
    ...
<strong>}</strong>
Loop %Anzahl% <strong>{</strong>
    ...
<strong>}</strong></pre>
<p>Spezielle Schleifen: Schleifen können dazu verwendet werden, Dateien, Ordner oder Registrierungseinträge zu ermitteln (einer nach dem anderen). Siehe <a href="LoopFile.htm">Loop (Dateien &amp; Ordner)</a> und <a href="LoopReg.htm">Registrierung-Schleife</a> für Details. Darüber hinaus können <a href="LoopReadFile.htm">dateilesende Schleifen</a> den kompletten Inhalt einer Datei Zeile für Zeile durchgehen. <a href="LoopParse.htm">Parsing-Schleifen</a> hingegen können bestimmte Felder abrufen, die sich innerhalb eines Strings befinden und durch Trennzeichen getrennt sind.</p>
<h3>Verwandte Befehle</h3>
<p><a href="Until.htm">Until</a>, <a href="While.htm">While-Loop</a>, <a href="For.htm">For-Loop</a>, <a href="LoopFile.htm">Loop (Dateien &amp; Ordner)</a>, <a href="LoopReg.htm">Registrierung-Loop</a>, <a href="LoopReadFile.htm">dateilesende Schleife</a>, <a href="LoopParse.htm">Parsing-Loop</a>, <a href="Break.htm">Break</a>, <a href="Continue.htm">Continue</a>, <a href="Block.htm">Blocks</a></p>
<h3>Beispiele</h3>
<pre class="NoIndent">Loop, 3
{
    MsgBox, Iterationsnummer ist %A_Index%.  <em>; A_Index wird 1, 2 und 3 sein.</em>
    Sleep, 100
}

Loop
{
    If a_index &gt; 25
        break  <em>; Schleife unterbrechen.</em>
    If a_index &lt; 20
        continue <em>; Folgendes überspringen und neue Iteration starten.</em>
    MsgBox, a_index = %a_index% <em>; Hier werden nur die Nummern von 20 bis 25 angezeigt.</em>
}</pre>
</body>
</html>
