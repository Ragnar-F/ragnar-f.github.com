<!DOCTYPE HTML>
<html>
<head>
<title>NumPut</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/jquery.js" type="text/javascript"></script>
<script src="../static/tree.jquery.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>NumPut</h1>
<p>Speichert eine Nummer im Binärformat auf die angegebene Adresse + Offset.</p>
<pre class="Syntax">NumPut(Nummer, VarOderAdresse [, Offset = 0][, Typ = "UPtr"])</pre>

<h3>Parameter</h3>
<dl>

  <dt>Nummer</dt>
  <dd><p>Die zu speichernde Nummer.</p></dd>

  <dt>VarOderAdresse</dt>
  <dd><p>Eine Speicheradresse oder Variable. Wenn <em>VarOderAdresse</em> eine Variable wie <code>MeineVar</code> ist, und diese Variable weder eine reine Nummer noch ein Objekt enthält, ist es das gleiche wie, als würde man <code>&amp;MeineVar</code> übergeben. Das Weglassen von "&amp;" führt allerdings zur besseren Performance und stellt sicher, dass die Zieladresse + Offset <a href="VarSetCapacity.htm">gültig</a> ist.</p></dd>

  <dt>Offset</dt>
  <dd><p>Ein Offset (in Bytes), das mit <em>VarOderAdresse</em> addiert wird, um die Zieladresse festzulegen.</p></dd>

  <dt>Typ</dt>
  <dd>
    <p>Einer der folgenden Strings (standardmäßig UPtr, wenn weggelassen):<br>
    UInt, Int, Int64, Short, UShort, Char, UChar, Double, Float, Ptr oder UPtr.</p>
    <p>Im Gegensatz zu DllCall müssen diese in Anführungszeichen gesetzt werden, wenn sie als tatsächliche Strings verwendet werden sollen.</p>
    <p>Um mehr darüber zu erfahren, siehe <a href="DllCall.htm#types">DllCall-Typen</a>.</p>
  </dd>

</dl>

<h3>Rückgabewert</h3>
<p>Ist die Zieladresse ungültig, wird ein leerer String zurückgegeben. Allerdings ist es möglich, dass einige ungültige Adressen nicht als solche erkannt werden, was zu unvorhersehbaren Verhalten führen könnte.</p>
<p>Ansonsten wird die Adresse auf der rechten Seite des gerade geschriebenen Elements zurückgegeben. Dies wird häufig verwendet, wenn eine Folge von Nummern unterschiedlichen Typs geschrieben wird, wie in einer Struktur für DllCall.</p>

<h3>Allgemeine Bemerkungen</h3>
<p>Überschreitet ein Integer die Größe des angegebenen <em>Typs</em>, werden seine höchstwertigen Bytes ignoriert; z. B. würde <code>NumPut(257, Var, 0, "Char")</code> nur die Zahl 1 speichern.</p>
<p>Sind nur drei Parameter vorhanden, kann der dritte Parameter entweder <em>Offset</em> oder <em>Typ</em> sein. Zum Beispiel wäre <code>NumPut(x, var, "int")</code> gültig.</p>

<h3>Siehe auch</h3>
<p><a href="NumGet.htm">NumGet</a>, <a href="DllCall.htm">DllCall</a>, <a href="VarSetCapacity.htm">VarSetCapacity</a></p>


</body>
</html>
