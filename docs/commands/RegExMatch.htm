<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>RegExMatch</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<link href="../css/default.css" rel="stylesheet" type="text/css">
</head>
<body>

<h1>RegExMatch() <span class="ver">[v1.0.45+]</span></h1>

<p>Bestimmt, ob ein String ein Muster enth&auml;lt (regul&auml;rer Ausdruck).</p>

<pre class="Syntax">Fundposition := RegExMatch(Heuhaufen, NadelRegEx [, Ausgabevariable, Startposition = 1])</pre>
<h3>Parameter</h3>
<dl>
  
    <dt>Fundposition</dt>
    <dd><p>RegExMatch() gibt die Position der <em>NadelRegEx</em> zur&uuml;ck, dass ganz links im <em>Heuhaufen</em>-String vorkommt. Position 1 ist das erste Zeichen. Eine 0 wird zur&uuml;ckgegeben, wenn das Muster nicht gefunden wird. Wenn ein Fehler auftritt (z. B. ein Syntaxfehler in der <em>NadelRegEx</em>), dann wird ein leerer String zur&uuml;ckgegeben und ErrorLevel auf einen <a href="#ErrorLevel">unten genannten</a> Wert anstelle von 0 gesetzt.</p></dd>
 
    <dt>Heuhaufen</dt>
    <dd><p>Der String, dessen Inhalt durchsucht wird.</p></dd>
 
    <dt>NadelRegEx</dt>
    <dd><p>Das zu suchende Muster, welches ein Perl-kompatibler regul&auml;rer Ausdruck (PCRE) ist. Die <a href="../misc/RegEx-QuickRef.htm">Optionen</a> des Musters (falls vorhanden) m&uuml;ssen am Anfang des Strings stehen, gefolgt von einer schlie&szlig;enden Klammer. Zum Beispiel wird das Muster "<span class="red">i)</span>abc.*123" die Abh&auml;ngigkeit von der Gro&szlig;- und Kleinschreibung deaktivieren und nach "abc", null oder mehr Zeichen und "123" suchen. Wenn keine Optionen vorhanden sind, dann ist ")" optional; zum Beispiel ist ")abc" gleichbedeutend mit "abc".</p></dd>
 
    <dt><span class="CommandSyntax">Ausgabevariable</span></dt>
    <dd><p>Der Name der <em>Ausgabevariable</em> ohne Anf&uuml;hrungszeichen, in der ein <a href="#MatchObject">&Uuml;bereinstimmungsobjekt</a> gespeichert wird. Dieses Objekt kann dazu verwendet werden, von der gesamten &Uuml;bereinstimmung sowie von jedem <a href="../misc/RegEx-QuickRef.htm#subpat">Teilausdruck</a> die Position, die L&auml;nge und den Wert abzurufen, falls vorhanden.</p>
<p>Falls das Muster nicht gefunden wird (also wenn die Funktion 0 zur&uuml;ckgibt), wird diese Variable leer gemacht.</p></dd>
 
    <dt>Startposition</dt>
    <dd><p>Wenn die <em>Startposition</em> weggelassen wird, dann standardm&auml;&szlig;ig eine 1 (der Anfang vom <em>Heuhaufen</em>). Verwendet andernfalls eine 2, um beim zweiten Zeichen beginnen, eine 3, um beim Dritten zu beginnen und so weiter. Wenn die <em>Startposition</em> die L&auml;nge des <em>Heuhaufens</em> &uuml;berschreitet, dann beginnt die Suche bei einem leeren String, welcher sich am Ende des <em>Heuhaufens</em> befindet (ergibt typischerweise keine &Uuml;bereinstimmung).</p>
      <p>Wenn die <em>Startposition</em> negativ ist, dann ist es das Offset vom Ende des <em>Heuhaufens</em>. Zum Beispiel beginnt -1 beim letzten Zeichen und -2 beim vorletzten Zeichen. Wenn die <em>Startposition</em> das linke Ende des <em>Heuhaufens</em> &uuml;berschreitet, dann wird alles vom <em>Heuhaufen</em> durchsucht.</p>
      <p>Unabh&auml;ngig von der <em>Startposition</em> bezieht sich der R&uuml;ckgabewert immer auf das erste Zeichen des <em>Heuhaufens</em>. Zum Beispiel ist die Position von "abc" in "123abc789" immer 4.</p></dd>
  
</dl>
<h3 id="ErrorLevel">ErrorLevel</h3>
<p><span class="ver">[v1.1.04+]</span> Diese Funktion ist in der Lage, bei Misserfolg eine Ausnahme auszul&ouml;sen (nicht zu verwechseln mit "keine &Uuml;bereinstimmung gefunden"). F&uuml;r mehr Informationen, siehe <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> kann Folgendes enthalten:</p>
<ul>
  <li>0, was bedeutet, dass kein Fehler aufgetreten ist.</li>
  <li>Einen String in folgender Form: <em>Compile error N at offset M: Beschreibung</em>. In diesem String ist <em>N</em> die PCRE-Fehlernummer, <em>M</em> die Position des betroffenen Zeichens im regul&auml;ren Ausdruck und <em>Beschreibung</em> ein Text, der den Fehler beschreibt.</li>
  <li>Eine negative Zahl, was bedeutet, dass ein Fehler w&auml;hrend der <em>Ausf&uuml;hrung</em> des regul&auml;ren Ausdrucks aufgetreten ist. Obwohl solche Fehler selten sind, sind die h&auml;ufigsten auftretenden Fehler  "zu viele m&ouml;gliche &Uuml;bereinstimmungen mit leeren Strings" (-22), "Rekursion zu tief" (-21) und "Limit der &Uuml;bereinstimmung erreicht" (-8). In diesem Fall sollte das Muster soweit wie m&ouml;glich umgestaltet werden, damit es restriktiver ist, zum Beispiel * mit ?, + oder eine Begrenzung wie {0,3} ersetzen.</li>
</ul>
<h3>Optionen</h3>
<p>Siehe <a href="../misc/RegEx-QuickRef.htm#Options">Optionen</a> f&uuml;r Modifikatoren wie "<span class="red">i)</span>abc", um die Abh&auml;ngigkeit von Gro&szlig;- und Kleinschreibung im Muster "abc" zu deaktivieren.</p>
<h3 id="MatchObject">&Uuml;bereinstimmungsobjekt <span class="ver">v1.1.05+</span></h3>
<p>Sobald eine &Uuml;bereinstimmung gefunden wird, wird ein Objekt, das Information dar&uuml;ber enth&auml;lt, in die <em>Ausgabevariable</em> gespeichert. Dieses Objekt hat folgende Eigenschaften:</p>
<p><strong>Objekt.Pos(N)</strong>: Gibt die Position der gesamten &Uuml;bereinstimmung oder eines Teilausdrucks zur&uuml;ck.</p>
<p><strong>Objekt</strong><strong>.Len(N)</strong>: Gibt die L&auml;nge der gesamten &Uuml;bereinstimmung oder eines Teilausdrucks zur&uuml;ck.</p>
<p><strong>Objekt</strong><strong>.Value(N)</strong>: Gibt die gesamte &Uuml;bereinstimmung oder ein Teilausdruck zur&uuml;ck.</p>
<p><strong>Objekt</strong><strong>.Name(N)</strong>: Gibt den Namen eines benannten Teilausdrucks zur&uuml;ck, wenn vorhanden.</p>
<p><strong>Objekt</strong><strong>.Count()</strong>: Gibt die Gesamtanzahl an Teilausdr&uuml;cken zur&uuml;ck.</p>
<p><strong>Objekt</strong><strong>[N]</strong>: Wenn <em>N</em> eine 0, die Nummer oder der Name eines g&uuml;ltigen Teilausdrucks ist, dann ist das mit <code>&Uuml;bereinstimmung.Value(N)</code> vergleichbar. Ansonsten kann <em>N</em> der Name einer der oben genannten Eigenschaften sein. Zum Beispiel sind <code>&Uuml;bereinstimmung["Pos"]</code> und <code>&Uuml;bereinstimmung.Pos</code> mit <code>Match.Pos()</code> gleichwertig, es sei denn, ein Teilausdruck namens "Pos" ist vorhanden, in diesem Fall sind sie mit <code>&Uuml;bereinstimmung.Value("Pos")</code> vergleichbar.</p>
<p><strong>Objekt</strong><strong>.N</strong>: Das Gleiche wie oben, nur dass <em>N</em> ein Name oder eine Zahl ohne Anf&uuml;hrungszeichen ist.</p>
<p>Bei allen oben genannten Eigenschaften kann <em>N</em> folgendes sein:</p>
<ul>
  <li>0 f&uuml;r die gesamte &Uuml;bereinstimmung.</li>
  <li>Die Nummer eines Teilausdrucks, selbst wenn er ein Name hat.</li>
  <li>Der Name eines Teilausdrucks.</li>
</ul>
<p>Eckige Klammern k&ouml;nnen anstelle von runden Klammern verwendet werden, wenn <em>N</em> angegeben wurde.</p>
<p>Dieses Objekt kann nicht enumeriert werden. Das hei&szlig;t, dass hierbei die <a href="For.htm">For-Schleife</a> nicht unterst&uuml;tzt wird. Verwendet stattdessen <code><a href="Loop.htm">Loop</a> Match.Count()</code>.</p>
<h3>Performance</h3>
<p>Um einen einfachen Teilstring innerhalb eines gr&ouml;&szlig;eren Strings zu suchen, verwendet <a href="../Functions.htm#InStr">InStr()</a>, weil es schneller als RegExMatch() ist.</p>
<p>Um die Performance zu verbessern, werden die 100 aktuellsten regul&auml;ren Ausdr&uuml;cken im Speicher zwischengespeichert (in kompilierter Form).</p>
<p>Die <a href="../misc/RegEx-QuickRef.htm#Study">S-Option</a> kann manchmal die Performance eines regul&auml;ren Ausdrucks verbessern, welches oft verwendet wird (z. B. in einer Schleife).</p>
<h3>Bemerkungen</h3>
<p><a name="NamedSubPat"></a>Ein Teilausdruck kann einen Namen wie das Wort <em>Year</em> im Muster <em>(?P&lt;Year&gt;\d{4})</em> erhalten. Diese Namen k&ouml;nnen aus bis zu 32 alphanumerischen Zeichen und Unterstriche bestehen. Beachtet, dass benannte Teilausdr&uuml;cke zudem nummeriert sind. Das hei&szlig;t, dass ein <a href="../misc/RegEx-QuickRef.htm#subpat">unbenannter Teilausdruck</a> nach "Year" in <em>Ausgabevariable[2]</em> und nicht in <em>Ausgabevariable[1]</em> gespeichert wird.</p>
<p>Innerhalb eines regul&auml;ren Ausdrucks k&ouml;nnen bestimmte Sonderzeichen wie Tabulatoren und Zeilenumbr&uuml;che mit einem Akzent- (`) oder Backslash-Zeichen (\) gesch&uuml;tzt werden. Zum Beispiel ist `t das gleiche wie \t, es sei denn, die <b>x</b>-Option wird verwendet.</p>
<p>Um die Grundlagen von regul&auml;ren Ausdr&uuml;cken kennenzulernen (oder das Ged&auml;chtnis ein wenig aufzufrischen), siehe <a href="../misc/RegEx-QuickRef.htm">RegEx-Kurz&uuml;bersicht</a>.</p>
<p>Die regul&auml;ren Ausdr&uuml;cke von AutoHotkey verwenden Perl-kompatible regul&auml;re Ausdr&uuml;cke (PCRE) von <a href="http://www.pcre.org/">www.pcre.org</a>.</p>
<h3>Verwandte Befehle</h3>
<p><a href="RegExReplace.htm">RegExReplace()</a>, <a href="../misc/RegEx-QuickRef.htm">RegEx-Kurz&uuml;bersicht</a>, <a href="../misc/RegExCallout.htm">Callouts in regul&auml;ren Ausdr&uuml;cken</a>, <a href="../Functions.htm#InStr">InStr()</a>, <a href="../Functions.htm#SubStr">SubStr()</a>, <a href="SetTitleMatchMode.htm#RegEx">SetTitleMatchMode RegEx</a>, <a href="http://www.autohotkey.com/forum/topic16164.html">Global matching and Grep (Forum-Link)</a></p>
<p>H&auml;ufige Quellen von Textdaten: <a href="FileRead.htm">FileRead</a>, <a href="Download.htm">Download</a>, <a href="../misc/Clipboard.htm">Clipboard</a>, <a href="GuiControls.htm#Edit">GUI-Eingabefelder</a></p>
<h3>Beispiele</h3>
<pre class="NoIndent">Fundposition := RegExMatch("xxxabc123xyz", "abc.*xyz")  <em>; Gibt 4 zur&uuml;ck, weil es die Position ist, wo die &Uuml;bereinstimmung gefunden wurde.</em>
Fundposition := RegExMatch("abc123123", "123$")  <em>; Gibt 7 zur&uuml;ck, weil $ die &Uuml;bereinstimmung am Ende ben&ouml;tigt.</em>
Fundposition := RegExMatch("abc123", "i)^ABC")  <em>; Gibt 1 zur&uuml;ck, weil eine &Uuml;bereinstimmung durch die Unabh&auml;ngigkeit von Gro&szlig;- und Kleinschreibung gefunden wurde.</em>
Fundposition := RegExMatch("abcXYZ123", "abc(.*)123", SubPat)  <em>; Gibt 1 zur&uuml;ck und speichert "XYZ" in SubPat[1].</em>
Fundposition := RegExMatch("abc123abc456", "abc\d+", "", 2)  <em>; Gibt 7 anstelle von 1 zur&uuml;ck, wegen der 2 in der Startposition.</em>

<em>; Allgemeine RegEx-Beispiele k&ouml;nnen in der <a href="../misc/RegEx-QuickRef.htm">RegEx-Kurz&uuml;bersicht</a> gefunden werden.</em></pre>
</body></html>