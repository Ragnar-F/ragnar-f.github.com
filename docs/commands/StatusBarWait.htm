<!DOCTYPE HTML>
<html>
<head>
<title>StatusBarWait</title>
<meta name="keywords" content="Befehl, Fenster">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/jquery-1.11.0.min.js"type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../navbar/NavScript.js" type="text/javascript"></script>
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <article>
      <h1>StatusBarWait</h1>
      <p>Wartet, bis die Statusleiste eines Fensters den angegebenen String enthält.</p>
      <pre class="Syntax">StatusBarWait [, Leistentext, Sekunden, Bereichsnummer, Fenstertitel, Fenstertext, Intervall, Titelausnahme, Textausnahme] </pre>
      <h3>Parameter</h3>
      <table class="info">
        <tr>
          <td>Leistentext</td>
          <td>
          <p>Der Text oder Teiltext, auf den der Befehl warten soll. Ist dieser Parameter leer oder nicht vorhanden, wird gewartet, bis die Statusleiste leer ist. Der Text unterscheidet zwischen Groß- und Kleinschreibung. Das Übereinstimmungsverhalten wird per <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a> bestimmt, ähnlich wie bei <em>Fenstertitel</em> unten.</p>
          <p>Wenn stattdessen auf eine <em>Änderung</em> des Leistentextes gewartet werden soll, kann entweder <a href="StatusBarGetText.htm">StatusBarGetText</a> in einer Schleife oder das RegEx-Beispiel weiter unten verwendet werden.</p>
          </td>
        </tr>
        <tr>
          <td>Sekunden</td>
          <td>Die Dauer in Sekunden (kann ein Dezimalpunkt enthalten oder ein <a href="../Variables.htm#Expressions">Ausdruck</a> sein), die gewartet werden soll. Ist die Zeit abgelaufen, wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 1 gesetzt. Ist dieser Parameter leer oder nicht vorhanden, wird unendlich lang gewartet. Ist eine 0 angegeben, wird sie intern mit 0.5 ersetzt.</td>
        </tr>
        <tr>
          <td>Bereichsnummer</td>
          <td>Die Nummer des Leistenbereichs, dessen Text abgerufen werden soll (kann auch ein <a href="../Variables.htm#Expressions">Ausdruck</a> sein). Ist dieser Parameter leer oder nicht vorhanden, gilt standardmäßig 1, das üblicherweise der Bereich ist, der am interessantesten ist.</td>
        </tr>
        <tr>
          <td style="width: 15%;">Fenstertitel</td>
          <td style="width: 85%;">Ein Fenstertitel oder sonstige Kriterien, die das Zielfenster ermitteln sollen. Siehe <a href="../misc/WinTitle.htm">Fenstertitel</a>.</td>
        </tr>
        <tr>
          <td>Fenstertext</td>
          <td>In diesem Parameter kann ein Teilstring angegeben werden, der in einem Textelement des Zielfensters vorkommt (werden mit Windows Spy angezeigt). Versteckte Textelemente werden auch erkannt, sofern <a href="DetectHiddenText.htm">DetectHiddenText</a> aktiv ist.</td>
        </tr>
        <tr>
          <td>Intervall</td>
          <td>Wie oft die Statusleiste überprüft wird, während der Befehl wartet (in Millisekunden), was auch ein <a href="../Variables.htm#Expressions">Ausdruck</a> sein kann. 50 ist Standard. </td>
        </tr>
        <tr>
          <td>Titelausnahme</td>
          <td>Ignoriert Fenster, deren Titel diesen Wert enthalten.</td>
        </tr>
        <tr>
          <td>Textausnahme</td>
          <td>Ignoriert Fenster, deren Textelemente diesen Wert enthalten.</td>
        </tr>
      </table>
      <h3>ErrorLevel</h3>
      <p><span class="ver">[v1.1.04+]</span> Dieser Befehl ist in der Lage, eine Ausnahme auszulösen, falls die Statusleiste nicht zugreifbar ist. Für mehr Informationen, siehe <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
      <p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird auf 1 gesetzt, wenn der Befehl das Zeitlimit überschritten hat, bevor eine Übereinstimmung in der Statusleiste gefunden werden konnte. Es wird auf 2 gesetzt, wenn die Statusleiste nicht zugreifbar ist. Es wird auf 0 gesetzt, wenn eine Übereinstimmung gefunden wird.</p>
      <h3>Bemerkungen</h3>
      <p>Dieser Befehl versucht, die erste <em>Standard</em>-Statusleiste eines Fensters zu lesen (typisches Steuerelement von Microsoft: msctls_statusbar32). Einige Programme verwenden ihre eigenen Statusleisten oder spezielle Versionen des Microsoft-Steuerelements. Solche Leisten werden nicht unterstützt.</p>
      <p>Anstatt <a href="StatusBarGetText.htm">StatusBarGetText</a> in einer Schleife zu verwenden, ist es besser, StatusBarWait zu verwenden, weil es Optimierungen beinhaltet, die einen Overhead durch mehrfaches Aufrufen von <a href="StatusBarGetText.htm">StatusBarGetText</a> verhindern.</p>
      <p>StatusBarWait legt sein Zielfenster fest, bevor dieser Befehl auf eine Übereinstimmung wartet. Falls dieses Zielfenster geschlossen wird, hört der Befehl auf zu warten, auch dann, wenn ein anderes Fenster mit dem gleichen Fenstertitel und Fenstertext vorhanden ist.</p>
      <p>Während der Befehl im Wartezustand ist, können neue <a href="../misc/Threads.htm">Threads</a> per <a href="../Hotkeys.htm">Hotkey</a>, <a href="Menu.htm">benutzerdefinierte Menüeinträge</a> oder <a href="SetTimer.htm">Timer</a> gestartet werden.</p>
      <p>Fenstertitel und -texte unterscheiden zwischen Groß- und Kleinschreibung. Solange <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> deaktiviert ist, werden versteckte Fenster nicht wahrgenommen.</p>
      <h3>Verwandte Befehle</h3>
      <p><a href="StatusBarGetText.htm">StatusBarGetText</a>, <a href="WinGetTitle.htm">WinGetTitle</a>, <a href="WinGetText.htm">WinGetText</a>, <a href="ControlGetText.htm">ControlGetText</a></p>
      <h3>Beispiel</h3>
      <pre class="NoIndent"><em>; Das folgende Beispiel schreibt ein neues Suchmuster in ein vorhandenes Explorer-/Suchfenster.</em>
IfWinExist, Suchergebnisse <em>; Bestimmt das zuletzt gefundene Fenster, um das untere zu vereinfachen.</em>
{
    WinActivate
    Send, {tab 2}!o*.txt{enter}  <em>; Schreibt das Muster in das Suchfenster.</em>
    Sleep, 400  <em>; Gewährt der Statusleiste Zeit, auf "Suchen" umzuwechseln.</em>
    <strong>StatusBarWait, gefunden, 30</strong>
    If ErrorLevel
        MsgBox, Die Zeit ist abgelaufen oder es gab ein Problem.
    Else
        MsgBox, Die Suche wurde erfolgreich durchgeführt.
}</pre>
      <p>&nbsp;</p>
      <pre class="NoIndent"><em>; Das folgende Beispiel wartet auf eine <strong>Änderung</strong> der Statusleiste im aktiven Fenster. Dieses Beispiel benötigt v1.0.46.06+.</em>
SetTitleMatchMode <a href="SetTitleMatchMode.htm#RegEx">RegEx</a>
IfWinExist A  <em>; Setzt das zuletzt gefundene Fenster auf das aktive Fenster.</em>
{
   StatusBarGetText, <span class="red">Originaltext
</span>   StatusBarWait, ^(?!^\Q<span class="red">%Originaltext%</span>\E$)  <em>; Dieser reguläre Ausdruck wartet auf eine Änderung des Textes.</em>
}</pre>
    </article>
  </section>
</div>
<script type="text/javascript">WriteFooter(1);</script>
</body>
</html>
