<!DOCTYPE HTML>
<html>
<head>
<title>StatusBarWait</title>
<meta name="keywords" content="Befehl, Fenster">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/ga.js" type="text/javascript"></script>
<!--[if lt IE 9]>
<script src="../static/html5.js"></script>
<![endif]-->
<script src="../navbar/NavScript.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <article>
      <h1>StatusBarWait</h1>
      <p>Wartet, bis die Statusleiste eines Fensters den angegebenen String enth&auml;lt.</p>
      <pre class="Syntax">StatusBarWait [, Leistentext, Sekunden, Bereichsnummer, Fenstertitel, Fenstertext, Intervall, Titelausnahme, Textausnahme] </pre>
      <h3>Parameter</h3>
      <table class="info">
        <tr>
          <td>Leistentext</td>
          <td><p>Der Text oder Teiltext, auf den der Befehl bis zum Erscheinen warten wird. Standardm&auml;&szlig;ig ist dieser Parameter leer - das hei&szlig;t, dass darauf gewartet wird, bis die Statusleiste leer ist. Der Text unterscheidet zwischen Gro&szlig;- und Kleinschreibung, au&szlig;erdem wird das &Uuml;bereinstimmungsverhalten durch <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a> bestimmt, &auml;hnlich wie bei <em>Fenstertitel</em> unten.</p>
            <p>Um stattdessen auf eine <em>&Auml;nderung</em> des Leistentextes zu warten, kann entweder <a href="StatusBarGetText.htm">StatusBarGetText</a> in einer Schleife verwendet werden, oder das RegEx-Beispiel weiter unten.</p></td>
        </tr>
        <tr>
          <td>Sekunden</td>
          <td>Die Wartedauer in Sekunden (kann ein Dezimalpunkt enthalten oder ein <a href="../Variables.htm#Expressions">Ausdruck</a> sein). Ist die Zeit abgelaufen, wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 1 gesetzt. Standardm&auml;&szlig;ig ist dieser Parameter leer - das hei&szlig;t, dass der Befehl unendlich lang wartet. Falls eine 0 angegeben ist, wird diese intern mit 0.5 ersetzt.</td>
        </tr>
        <tr>
          <td>Bereichsnummer</td>
          <td>Die Nummer eines Leistenbereichs, dessen Text abgerufen wird (kann auch ein <a href="../Variables.htm#Expressions">Ausdruck</a> sein). Standardm&auml;&szlig;ig 1 - das ist f&uuml;r gew&ouml;hnlich der Textbereich, der am interessantesten ist.</td>
        </tr>
        <tr>
          <td style="width: 15%;">Fenstertitel</td>
          <td style="width: 85%;">Ein Fenstertitel oder sonstige Kriterien, die das Zielfenster ermitteln sollen. Siehe <a href="../misc/WinTitle.htm">Fenstertitel</a>.</td>
        </tr>
        <tr>
          <td>Fenstertext</td>
          <td>In diesem Parameter kann ein Teilstring angegeben werden, der in einem Textelement des Zielfensters vorkommt (werden mit Windows Spy angezeigt). Versteckte Textelemente werden auch erkannt, sofern <a href="DetectHiddenText.htm">DetectHiddenText</a> aktiv ist.</td>
        </tr>
        <tr>
          <td>Intervall</td>
          <td>Wie oft die Statusleiste &uuml;berpr&uuml;ft wird, w&auml;hrend der Befehl wartet (in Millisekunden), was auch ein <a href="../Variables.htm#Expressions">Ausdruck</a> sein kann. 50 ist Standard. </td>
        </tr>
        <tr>
          <td>Titelausnahme</td>
          <td>Ignoriert Fenster, deren Titel diesen Wert enthalten.</td>
        </tr>
        <tr>
          <td>Textausnahme</td>
          <td>Ignoriert Fenster, deren Textelemente diesen Wert enthalten.</td>
        </tr>
      </table>
      <h3>ErrorLevel</h3>
      <p><span class="ver">[v1.1.04+]</span> Dieser Befehl ist in der Lage, eine Ausnahme auszul&ouml;sen, falls die Statusleiste nicht zugreifbar ist. F&uuml;r mehr Informationen, siehe <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
      <p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird auf 1 gesetzt, wenn der Befehl das Zeitlimit &uuml;berschritten hat, bevor eine &Uuml;bereinstimmung in der Statusleiste gefunden werden konnte. Es wird auf 2 gesetzt, wenn die Statusleiste nicht zugreifbar ist. Es wird auf 0 gesetzt, wenn eine &Uuml;bereinstimmung gefunden wird.</p>
      <h3>Bemerkungen</h3>
      <p>Dieser Befehl versucht, die erste <em>Standard</em>-Statusleiste eines Fensters zu lesen (typisches Steuerelement von Microsoft: msctls_statusbar32).&nbsp; Einige Programme verwenden ihre eigenen Statusleisten oder spezielle Versionen des Microsoft-Steuerelements. Solche Leisten werden nicht unterst&uuml;tzt.</p>
      <p>Anstatt <a href="StatusBarGetText.htm">StatusBarGetText</a> in einer Schleife zu verwenden, ist es besser, StatusBarWait zu verwenden, weil es Optimierungen beinhaltet, die einen Overhead durch mehrfaches Aufrufen von <a href="StatusBarGetText.htm">StatusBarGetText</a> verhindern.</p>
      <p>StatusBarWait bestimmt das Zielfenster, bevor es auf eine &Uuml;bereinstimmung wartet. Sobald das Zielfenster geschlossen ist, h&ouml;rt der Befehl auf zu warten, auch dann, wenn ein anderes Fenster mit dem gleichen Fenstertitel und Fenstertext vorhanden ist.</p>
      <p>Bei der Wartephase des Befehls k&ouml;nnen neue <a href="../misc/Threads.htm">Threads</a> per <a href="../Hotkeys.htm">Hotkey</a>, <a href="Menu.htm">benutzerdefinierte Men&uuml;eintr&auml;ge</a> oder <a href="SetTimer.htm">Timer</a> gestartet werden.</p>
      <p>Fenstertitel und -texte unterscheiden zwischen Gro&szlig;- und Kleinschreibung. Solange <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> deaktiviert ist, werden versteckte Fenster nicht wahrgenommen.</p>
      <h3>Verwandte Befehle</h3>
      <p><a href="StatusBarGetText.htm">StatusBarGetText</a>, <a href="WinGetTitle.htm">WinGetTitle</a>, <a href="WinGetText.htm">WinGetText</a>, <a href="ControlGetText.htm">ControlGetText</a></p>
      <h3>Beispiel</h3>
      <pre class="NoIndent"><em>; Das folgende Beispiel schreibt ein neues Suchmuster in ein vorhandenes Explorer-/Suchfenster.</em>
IfWinExist, Suchergebnisse <em>; Bestimmt das zuletzt gefundene Fenster, um das untere zu vereinfachen.</em>
{
    WinActivate
    Send, {tab 2}!o*.txt{enter}  <em>; Schreibt das Muster in das Suchfenster.</em>
    Sleep, 400  <em>; Gew&auml;hrt der Statusleiste Zeit, auf "Suchen" umzuwechseln.</em>
    <strong>StatusBarWait, gefunden, 30</strong>
    If ErrorLevel
        MsgBox, Die Zeit ist abgelaufen oder es gab ein Problem.
    Else
        MsgBox, Die Suche wurde erfolgreich durchgef&uuml;hrt.
}</pre>
      <p>&nbsp;</p>
      <pre class="NoIndent"><em>; Das folgende Beispiel wartet auf eine <strong>&Auml;nderung</strong> der Statusleiste im aktiven Fenster. Dieses Beispiel ben&ouml;tigt v1.0.46.06+.</em>
SetTitleMatchMode <a href="SetTitleMatchMode.htm#RegEx">RegEx</a>
IfWinExist A  <em>; Setzt das zuletzt gefundene Fenster auf das aktive Fenster.</em>
{
   StatusBarGetText, <span class="red">Originaltext
</span>   StatusBarWait, ^(?!^\Q<span class="red">%Originaltext%</span>\E$)  <em>; Dieser regul&auml;re Ausdruck wartet auf eine &Auml;nderung des Textes.</em>
}</pre>
    </article>
  </section>
</div>
<script type="text/javascript">WriteFooter(1);</script>
</body>
</html>