<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>StatusBarWait</title>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<link href="../css/default.css" rel="stylesheet" type="text/css">
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-28224374-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
</head>
<body>
<script src="../../NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<h1>StatusBarWait</h1>

<p>Wartet, bis die Statusleiste eines Fensters den angegebenen String enth&auml;lt.</p>

<pre class="Syntax">StatusBarWait [, Leistentext, Sekunden, Bereichsnummer, Fenstertitel, Fenstertext, Intervall, Titelausnahme, Textausnahme] </pre>
<h3>Parameter</h3>
<table class="info">
  <tr>
    <td>Leistentext</td>
    <td><p>Der Text oder Teiltext, auf dem gewartet wird, bis er auftaucht. Standardm&auml;&szlig;ig leer, das hei&szlig;t,  es wird auf die Statusleiste gewartet, bis sie leer ist. Der Text ist von der Gro&szlig;-/Kleinschreibung abh&auml;ngig und das &Uuml;bereinstimmungsverhalten wird von <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a> bestimmt, &auml;hnlich dem <em>Fenstertitel</em> unten.</p>
    <p>Um stattdessen darauf zuwarten, bis der Leistentext <em>ge&auml;ndert</em> wird, verwendet jeweils <a href="StatusBarGetText.htm">StatusBarGetText</a> in einer Schleife oder das RegEx-Beispiel am unteren Ende der Seite.</p></td>
  </tr>
  <tr>
    <td>Sekunden</td>
    <td>Die zuwartende Anzahl an Sekunden (kann ein Dezimalpunkt enthalten oder ein <a href="../Variables.htm#Expressions">Ausdruck</a> sein), bevor das Zeitlimit &uuml;berschritten wird, wodurch <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 1 gesetzt wird. Standardm&auml;&szlig;ig leer, das hei&szlig;t, es wird unendlich lang gewartet. Der Wert 0 entspricht 0.5.</td>
  </tr>
  <tr>
    <td>Bereichsnummer</td>
    <td>Welche Bereichsnummer der Leiste abgerufen wird (kann auch ein <a href="../Variables.htm#Expressions">Ausdruck</a> sein kann). Standard ist 1, f&uuml;r gew&ouml;hnlich der Bereich mit dem interessantesten Text.</td>
  </tr>
  <tr>
    <td width="15%">Fenstertitel</td>
    <td width="85%">Der Titel oder Teiltitel des Fensters (das &Uuml;bereinstimmungsverhalten wird mit <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a> bestimmt). Wenn dieser und die anderen 3 Fensterparameter nicht vorhanden sind, dann wird das <a href="../LastFoundWindow.htm">zuletzt gefundene Fenster</a> verwendet. Wenn dieser den Buchstaben A enth&auml;lt und die anderen 3 Fensterparameter nicht vorhanden sind, dann wird das aktive Fenster verwendet. Bei Verwendung einer Fensterklasse muss ahk_class ExakterKlassenname angegeben werden (wird von Windows Spy angezeigt). Bei Verwendung einer <a href="Process.htm">Prozess-Kennung (PID)</a> muss ahk_pid %VariableMitPID% angegeben werden. Bei Verwendung einer <a href="GroupAdd.htm">Fenstergruppe</a> muss ahk_group Gruppenname angegeben werden. Bei Verwendung einer <a href="WinGet.htm">eindeutigen ID-Nummer</a> eines Fensters muss ahk_id %VariableMitID% angegeben werden. Die Suche kann durch Angabe <a href="../LastFoundWindow.htm#multi">mehrerer Kriterien</a> eingeschr&auml;nkt werden. Zum Beispiel: <em>Eigene Datei.txt ahk_class Notepad</em></td>
  </tr>
  <tr>
    <td>Fenstertext</td>
    <td>Wenn vorhanden, dann muss dieser Parameter einen Teil der einzelnen Textelemente des Fensters enthalten (wird von Windows Spy angezeigt). Versteckte Textelemente werden erfasst, wenn <a href="DetectHiddenText.htm">DetectHiddenText</a> aktiv ist.</td>
  </tr>
  <tr>
    <td>Intervall</td>
    <td>Wie oft die Statusleiste &uuml;berpr&uuml;ft wird, w&auml;hrend der Befehl wartet (in Millisekunden), was auch ein <a href="../Variables.htm#Expressions">Ausdruck</a> sein kann. 50 ist Standard. </td>
  </tr>
  <tr>
    <td>Titelausnahme</td>
    <td>Fenstertitel mit diesem Wert werden nicht ber&uuml;cksichtigt.</td>
  </tr>
  <tr>
    <td>Textausnahme</td>
    <td>Fenstertexte mit diesem Wert werden nicht ber&uuml;cksichtigt.</td>
  </tr>
</table>

<h3>ErrorLevel</h3>
<p><span class="ver">[v1.1.04+]</span> Dieser Befehl ist in der Lage, eine Ausnahme auszul&ouml;sen, falls die Statusleiste nicht zugreifbar ist. F&uuml;r mehr Informationen, siehe <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird auf 1 gesetzt, wenn der Befehl das Zeitlimit &uuml;berschritten hat, bevor eine &Uuml;bereinstimmung in der Statusleiste gefunden werden konnte. Es wird auf 2 gesetzt, wenn auf die Statusleiste nicht zugegriffen werden kann. Es wird auf 0 gesetzt, wenn eine &Uuml;bereinstimmung gefunden wird.</p>
<h3>Bemerkungen</h3>
<p>Dieser Befehl versucht, die erste <em>Standard</em>-Statusleiste eines Fensters zu lesen (allgemeines Steuerelement von Microsoft: msctls_statusbar32).&nbsp; Einige Programme verwenden ihre eigenen Statusleisten oder spezielle Versionen des allgemeinen Steuerelements von Microsoft. Solche Leisten werden nicht unterst&uuml;tzt.</p>
<p>Anstatt <a href="StatusBarGetText.htm">StatusBarGetText</a> in einer Schleife zu verwenden, ist die Verwendung von StatusBarWait meist effizienter, um einen Overhead durch wiederholende Aufrufe von <a href="StatusBarGetText.htm">StatusBarGetText</a> zu verhindern.</p>
<p>StatusBarWait legt das Zielfenster fest, bevor es auf eine &Uuml;bereinstimmung wartet. Wenn das Zielfenster geschlossen wird, dann h&ouml;rt der Befehl auf zu warten, selbst wenn ein anderes Fenster mit dem angegebenen Fenstertitel und Fenstertext &uuml;bereinstimmt.</p>
<p>W&auml;hrend der Befehl in einem Wartezustand ist, k&ouml;nnen neue <a href="../misc/Threads.htm">Threads</a> mittels <a href="../Hotkeys.htm">Hotkey</a>, <a href="Menu.htm">benutzerdefinierte Men&uuml;eintr&auml;ge</a> oder <a href="SetTimer.htm">Timer</a> gestartet werden.</p>
<p>Fenstertitel und -texte sind von der Gro&szlig;- und Kleinschreibung abh&auml;ngig. Solange <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> deaktiviert ist, werden versteckte Fenster nicht wahrgenommen.</p>

<h3>Verwandte Befehle</h3>
<p><a href="StatusBarGetText.htm">StatusBarGetText</a>, <a href="WinGetTitle.htm">WinGetTitle</a>, <a href="WinGetText.htm">WinGetText</a>, <a href="ControlGetText.htm">ControlGetText</a></p>
<h3>Beispiel</h3>
<pre class="NoIndent"><em>; Das folgende Beispiel schreibt ein neues Suchmuster in ein vorhandenes Explorer-/Suchfenster.</em>
IfWinExist, Suchergebnisse <em>; Bestimmt das zuletzt gefundene Fenster f&uuml;r die einfache Verwendung.</em>
{
    WinActivate
    Send, {tab 2}!o*.txt{enter}  <em>; Schreibt das Muster in das Suchfenster.</em>
    Sleep, 400  <em>; Damit die Statusleiste Zeit hat, auf "Suchen" umzuwechseln.</em>
    <strong>StatusBarWait, gefunden, 30</strong>
    If ErrorLevel
        MsgBox, Zeit&uuml;berschreitung oder Problem aufgetaucht.
    Else
        MsgBox, Die Suche wurde erfolgreich durchgef&uuml;hrt.
}</pre>
<p>&nbsp;</p>
<pre class="NoIndent"><em>; Das folgende Beispiel wartet auf eine <strong>&Auml;nderung</strong> der Statusleiste im aktiven Fenster. Dieses Beispiel ben&ouml;tigt v1.0.46.06+.</em>
SetTitleMatchMode <a href="SetTitleMatchMode.htm#RegEx">RegEx</a>
IfWinExist A  <em>; Setzt das zuletzt gefundene Fenster auf das aktive Fenster.</em>
{
   StatusBarGetText, <span class="red">Originaltext
</span>   StatusBarWait, ^(?!^\Q<span class="red">%Originaltext%</span>\E$)  <em>; Dieser regul&auml;re Ausdruck wartet auf eine &Auml;nderung des Textes.</em>
}</pre>

</body>
</html>