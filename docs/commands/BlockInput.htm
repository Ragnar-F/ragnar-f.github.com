<!DOCTYPE HTML>
<html>
<head>
<title>BlockInput</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/jquery.js" type="text/javascript"></script>
<script src="../static/tree.jquery.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>BlockInput</h1>

<p>Deaktiviert oder aktiviert die Fähigkeit des Benutzers, mit dem Computer mittels Tastatur und Maus zu interagieren.</p>

<pre class="Syntax">BlockInput, Modus</pre>
<h3>Parameter</h3>
<dl>

  <dt>Modus</dt>
  <dd><p><strong><u>Modus 1</u></strong>: Eins der folgenden Wörter:</p>
      <p><strong>On</strong>: Der Benutzer kann nicht länger mit dem Computer interagieren (Maus- und Tastatureingaben haben keine Wirkung).</p>
      <p><strong>Off</strong>: Eingaben sind wieder möglich.</p>
      <p><strong><u>Modus 2</u></strong>: Dieser Modus läuft unabhängig von den anderen. Zum Beispiel wird <code>BlockInput On</code> solange die Eingaben weiter blockieren, bis <code>BlockInput Off</code> verwendet wird, selbst wenn einer der nachfolgenden aktiv ist.</p>
      <p><strong>Send</strong>: Die Tastatur- und Mauseingaben des Benutzers werden ignoriert, während ein <a href="Send.htm">Send</a>- oder <a href="Send.htm">SendRaw</a>-Befehl ausgeführt wird (nur der traditionelle <a href="SendMode.htm">SendEvent-Modus</a>). Somit werden künstliche Tastatureingaben nicht von den Tastatureingaben des Benutzers beeinflusst. Sobald der Send-Befehl endet, sind Eingaben wieder möglich (sofern es nicht von ein weiteres <code>BlockInput On</code> geblockt wird).</p>
      <p><strong>Mouse</strong>: Die Tastatur- und Mauseingaben des Benutzers werden ignoriert, während ein <a href="Click.htm">Click</a>-, <a href="MouseMove.htm">MouseMove</a>-, <a href="MouseClick.htm">MouseClick</a>- oder <a href="MouseClickDrag.htm">MouseClickDrag</a>-Befehl ausgeführt wird (nur der traditionelle <a href="SendMode.htm">SendEvent-Modus</a>). Somit werden künstliche Mauseingaben nicht von den Mauseingaben des Benutzers beeinflusst. Sobald der Maus-Befehl endet, sind Eingaben wieder möglich (sofern es nicht von ein weiteres <code>BlockInput On</code> geblockt wird).</p>
      <p><strong>SendAndMouse</strong>: Eine Kombination von Send und Mouse.</p>
      <p><strong>Default</strong>: Sowohl der <em>Send</em>- als auch der <em>Mouse</em>-Modus wird deaktiviert, der aktuelle Zustand der Eingabeblockierung bleibt jedoch unverändert. Ist zum Beispiel <code>BlockInput On</code> aktiv, bleibt <code>BlockInput Default</code> unwirksam.</p>
      <p><u><strong><a name="MouseMove"></a>Modus 3</strong> (benötigt v1.0.43.11+)</u>: Dieser Modus läuft unabhängig von den anderen. Zum Beispiel werden Mausbewegungen solange weiter geblockt, bis <code>BlockInput On</code> und <code>BlockInput MouseMove</code> deaktiviert werden.</p>
      <p><strong>MouseMove</strong>: Der Mauszeiger reagiert nicht auf die physische Mausbewegung des Benutzers (DirectInput-Anwendungen sind eine mögliche Ausnahme). Sobald ein Script diesen Befehl verwendet, wird der <a href="_InstallMouseHook.htm">Maus-Hook</a> installiert (falls das nicht bereits geschehen ist). Zusätzlich wird das Script <a href="_Persistent.htm">persistent</a>, d. h. <a href="ExitApp.htm">ExitApp</a> sollte zum Beenden des Scripts verwendet werden. Wird der Maus-Hook beim nächsten <a href="Suspend.htm">Suspend</a>- oder <a href="Hotkey.htm">Hotkey</a>-Befehl nicht mehr von Hotkeys oder Hotstrings benötigt, wird er deinstalliert (siehe <a href="_Hotstring.htm">#Hotstring NoMouse</a>).</p>
      <p><strong>MouseMoveOff</strong>: Erlaubt dem Benutzer, den Mauszeiger zu bewegen.</p></dd>

</dl>

<h3>Bemerkungen</h3>
<p>Anstelle von BlockInput sollte lieber <code><a href="SendMode.htm">SendMode Input</a></code> oder <code><a href="SendMode.htm">SendMode Play</a></code> verwendet werden, damit die Tastatureingaben und Mausklicks nicht mehr unterbrochen werden können. Denn im Gegensatz zum BlockInput verwerfen diese Methoden nicht die Benutzereingabe beim Senden; solche Tastatureingaben werden stattdessen zwischengespeichert und danach gesendet. Durch das Vermeiden von BlockInput wird auch verhindert, hängende Tasten wie im nächsten Abschnitt zu umgehen.</p>
<p>Falls BlockInput aktiviert wird, während der Benutzer eine Taste drückt, könnte diese "hängen bleiben". Um das zu verhindern, sollte das folgende Beispiel in Betracht gezogen werden, das zeigt, wie die Tasten wieder losgelassen werden, bevor BlockInput aktiviert wird:</p>
<pre>^!p::
KeyWait Control  <em>; Warten, bis die Taste losgelassen wird.  Jeweils ein KeyWait für jede Modifikatortaste verwenden.</em>
KeyWait Alt
BlockInput On
<em>; ... Tastatureingaben und Mausklicks senden ...</em>
BlockInput Off
return</pre>
<p>Die Eingabeblockierung wird automatisch und sofort deaktiviert, sobald die ALT-Taste gesendet wird (wird aber danach wieder aktiviert).</p>
<p>Während BlockInput aktiv ist, wird die Benutzereingabe blockiert, aber AutoHotkey kann weiterhin Tastatureingaben und Mausklicks simulieren. Sobald man jedoch STRG+ALT+ENTF drückt, wird die Eingabe wieder aktiviert (durch ein API-Feature von Windows).</p>
<p>Verschiedene Arten von <a href="_UseHook.htm">Hook-Hotkeys</a> können weiterhin ausgelöst werden, wenn BlockInput aktiv ist. Beispielsweise <code>MButton</code> (Maus-Hook) und <code>LWin &amp; Space</code> (Tastatur-Hook mit eindeutigem Präfix anstelle von Modifikatoren <code>$#</code>).</p>
<p>Die Eingabe wird automatisch wieder aktiviert, wenn das Script beendet wird.</p>
<h3>Siehe auch</h3>
<p><a href="SendMode.htm">SendMode</a>, <a href="Send.htm">Send</a>, <a href="Click.htm">Click</a>, <a href="MouseMove.htm">MouseMove</a>, <a href="MouseClick.htm">MouseClick</a>, <a href="MouseClickDrag.htm">MouseClickDrag</a></p>
<h3>Beispiel</h3>
<pre class="NoIndent">BlockInput, on
Run, notepad
WinWaitActive, Unbenannt - Editor
Send, {F5} <em>; Zeit und Datum einfügen</em>
BlockInput, off</pre>

</body>
</html>
