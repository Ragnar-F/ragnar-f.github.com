<!DOCTYPE HTML>
<html>
<head>
<title>Variable := Ausdruck</title>
<meta name="keywords" content="Befehl">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/ga.js" type="text/javascript"></script>
<!--[if lt IE 9]>
<script src="../static/html5.js"></script>
<![endif]-->
<script src="../navbar/NavScript.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <div id="article">
    <h1>Variable := Ausdruck</h1>
    <p>Wertet einen Ausdruck aus und speichert das Ergebnis in eine <a href="../Variables.htm">Variable</a>.</p>
    <pre class="Syntax">Variable := Ausdruck</pre>
    <h3>Parameter</h3>
    <table class="info">
      <tr>
        <td style="width: 15%;">Variable</td>
        <td style="width: 85%;">Der Name der <a href="../Variables.htm">Variable</a>, die das Ergebnis vom <em>Ausdruck</em> enth&auml;lt.</td>
      </tr>
      <tr>
        <td>Ausdruck</td>
        <td>Siehe <a href="../Variables.htm#Expressions">Ausdr&uuml;cke</a> und die Beispiele unten f&uuml;r Details. </td>
      </tr>
    </table>
    <h3>Bemerkungen</h3>
    <p>Der Operator ":=" wurde optimiert, damit er genauso schnell wie der Operator "=" bei einfachen F&auml;llen wie folgt ausgef&uuml;hrt werden kann:</p>
    <pre>x := y  <em>; Gleiche Performance wie x = %y%</em>
x := 5  <em>; Gleiche Performance wie x = 5.</em>
x := "direkt vorhandener String"  <em>; Gleiche Performance wie "x = direkt vorhandener String".</em></pre>
    <p>Die W&ouml;rter <code>True</code> und <code>False</code> sind interne Konstanten, die eine 1 und eine 0 enthalten. Sie k&ouml;nnen verwendet werden, um ein Script besser lesbar zumachen, z. B.:</p>
    <pre>Zeichengenauigkeit := false
Suchfortsetzung := true</pre>
    <p>Es ist m&ouml;glich, einen <a href="../misc/Arrays.htm">Array</a> mit diesem Befehl zu erstellen, sowie mit anderen Befehlen, die eine <em>Ausgabevariable</em> akzeptieren. Dazu enth&auml;lt die <em>Ausgabevariable</em> eine Referenz auf eine andere Variable (z. B. <code>Array%i% := Variable/100 + 5</code>). Siehe <a href="../misc/Arrays.htm">Arrays</a> f&uuml;r mehr Details.</p>
    <h3>Verwandte Befehle</h3>
    <p><a href="../Variables.htm#Expressions">Ausdr&uuml;cke</a>, <a href="IfExpression.htm">If (Ausdruck)</a>, <a href="../Functions.htm">Funktionen</a>, <a href="SetEnv.htm">SetEnv</a>, <a href="EnvSet.htm">EnvSet</a>, <a href="EnvAdd.htm">EnvAdd</a>, <a href="EnvSub.htm">EnvSub</a>, <a href="EnvMult.htm">EnvMult</a>, <a href="EnvDiv.htm">EnvDiv</a>, <a href="IfEqual.htm">If</a>, <a href="../misc/Arrays.htm">Arrays</a></p>
    <h3>Beispiele</h3>
    <pre class="NoIndent">Variable := 3
Variable := "direkt vorhandener String"
Variable := Preis * (1 - Rabatt/100)

Abgeschlossen := not Fertig or A_Index &gt; 100
If not Abgeschlossen
{
    FileAppend, %NeuerText%`n, %Zieldatei%
    Return
}
Else
    ExitApp</pre>
  </div>
  </section>
</div>
<script type="text/javascript">WriteFooter(1);</script>
</body>
</html>
