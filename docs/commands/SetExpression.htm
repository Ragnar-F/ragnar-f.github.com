<!DOCTYPE HTML>
<html>
<head>
<title>Variable := Ausdruck</title>
<meta name="keywords" content="Befehl">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/jquery.js" type="text/javascript"></script>
<script src="../static/tree.jquery.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>
<h1>Variable := Ausdruck</h1>
<p>Wertet einen Ausdruck aus und speichert das Ergebnis in eine <a href="../Variables.htm">Variable</a>.</p>
<pre class="Syntax">Variable := Ausdruck</pre>
<h3>Parameter</h3>
<table class="info">
  <tr>
    <td style="width: 15%;">Variable</td>
    <td style="width: 85%;">Name der <a href="../Variables.htm">Variable</a>, in der das Ergebnis von <em>Ausdruck</em> gespeichert werden soll.</td>
  </tr>
  <tr>
    <td>Ausdruck</td>
    <td>Siehe <a href="../Variables.htm#Expressions">Ausdrücke</a> und die Beispiele unten für Details. </td>
  </tr>
</table>
<h3>Bemerkungen</h3>
<p>Der Operator ":=" wurde optimiert, damit er genauso schnell wie der Operator "=" bei einfachen Fällen wie folgt ausgeführt werden kann:</p>
<pre>x := y  <em>; Gleiche Performance wie x = %y%</em>
x := 5  <em>; Gleiche Performance wie x = 5.</em>
x := "direkt vorhandener String"  <em>; Gleiche Performance wie "x = direkt vorhandener String".</em></pre>
<p>Die Wörter <code>True</code> und <code>False</code> sind interne Konstanten, die eine 1 und eine 0 enthalten. Sie können verwendet werden, um ein Script besser lesbar zumachen, z. B.:</p>
<pre>Zeichengenauigkeit := false
Suchfortsetzung := true</pre>
<p>Es ist möglich, einen <a href="../misc/Arrays.htm">Array</a> mit diesem Befehl zu erstellen, sowie mit anderen Befehlen, die <em>AusgabeVar</em> akzeptieren. Dazu enthält <em>AusgabeVar</em> einen Verweis auf eine andere Variable (z. B. <code>Array%i% := Var/100 + 5</code>). Siehe <a href="../misc/Arrays.htm">Arrays</a> für mehr Details.</p>
<h3>Verwandte Befehle</h3>
<p><a href="../Variables.htm#Expressions">Ausdrücke</a>, <a href="IfExpression.htm">If (Ausdruck)</a>, <a href="../Functions.htm">Funktionen</a>, <a href="SetEnv.htm">SetEnv</a>, <a href="EnvSet.htm">EnvSet</a>, <a href="EnvAdd.htm">EnvAdd</a>, <a href="EnvSub.htm">EnvSub</a>, <a href="EnvMult.htm">EnvMult</a>, <a href="EnvDiv.htm">EnvDiv</a>, <a href="IfEqual.htm">If</a>, <a href="../misc/Arrays.htm">Arrays</a></p>
<h3>Beispiele</h3>
<pre class="NoIndent">Variable := 3
Variable := "direkt vorhandener String"
Variable := Preis * (1 - Rabatt/100)

Abgeschlossen := not Fertig or A_Index &gt; 100
If not Abgeschlossen
{
    FileAppend, %NeuerText%`n, %Zieldatei%
    Return
}
Else
    ExitApp</pre>
</body>
</html>
