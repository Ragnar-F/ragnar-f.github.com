<!DOCTYPE HTML>
<html>
<head>
<title>FileReadLine</title>
<meta name="keywords" content="Befehl, Datei">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/ga.js" type="text/javascript"></script>
<!--[if lt IE 9]>
<script src="../static/html5.js"></script>
<![endif]-->
<script src="../navbar/NavScript.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <div id="article">
    <h1>FileReadLine</h1>
    <p>Liest eine bestimme Zeile aus einer Datei und speichert den Text in eine <a href="../Variables.htm">Variable</a>.</p>
    <pre class="Syntax">FileReadLine, AusgabeVar, Dateiname, Zeilennummer</pre>
    <h3>Parameter</h3>
    <table class="info">
      <tr>
        <td>AusgabeVar</td>
        <td>Name der Variable, in der der ermittelte Text gespeichert werden soll. </td>
      </tr>
      <tr>
        <td style="width: 15%;">Dateiname</td>
        <td style="width: 85%;">Der Name der Datei, die sich im <a href="../Variables.htm#WorkingDir">A_WorkingDir</a>-Verzeichnis befindet, solange kein absoluter Pfad angegeben ist. Windows- und Unix-Formate werden unterst&uuml;tzt. Das hei&szlig;t, dass die Zeilen einer Datei sowohl mit CR-LF-Paaren (`r`n) als auch mit LF-Zeichen (`n) enden k&ouml;nnen.</td>
      </tr>
      <tr>
        <td>Zeilennummer</td>
        <td><p>Welche Zeile gelesen werden soll (1 f&uuml;r die erste, 2 f&uuml;r die zweite und so weiter). Das kann auch ein <a href="../Variables.htm#Expressions">Ausdruck</a> sein.</p>
          <p>&Uuml;berschreitet die angegebene Zeilennummer die Gesamtanzahl der Dateizeilen, wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 1 gesetzt und <em>AusgabeVar</em> leer gemacht. Das geschieht auch, wenn die angegebene Zeilennummer die letzte Zeile in der Datei ist und diese Zeile leer ist und nicht mit einem Zeilenumbruch/CRLF endet.</p></td>
      </tr>
    </table>
    <h3>ErrorLevel</h3>
    <p><span class="ver">[v1.1.04+]</span> Dieser Befehl ist in der Lage, bei Misserfolg eine Ausnahme auszul&ouml;sen. F&uuml;r mehr Informationen, siehe <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
    <p>Bei Erfolg wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 0 gesetzt. Ansonsten wird es auf 1 gesetzt und der urspr&uuml;ngliche Inhalt von <em>AusgabeVar</em> beibehalten.</p>
    <p>Die interne Variable <a href="../Variables.htm#LastError">A_LastError</a> enth&auml;lt den R&uuml;ckgabewert der Systemfunktion GetLastError().</p>
    <h3>Bemerkungen</h3>
    <p>Es wird dringend empfohlen, diesen Befehl nur f&uuml;r kleine Dateien zu verwenden, oder falls nur eine einzige Textzeile ben&ouml;tigt wird. Zur &Uuml;berpr&uuml;fung oder Bearbeitung von vielen Zeilen (nacheinander) ist aus Performancegr&uuml;nden eine <a href="LoopReadFile.htm">dateilesende Schleife</a> besser geeignet. Um eine komplette Datei in eine Variable einzulesen, verwende <a href="FileRead.htm">FileRead</a>.</p>
    <p>Tabulator- und Leerzeichen, die am Anfang und Ende der Zeile vorkommen, werden in <em>AusgabeVar</em> geschrieben. Befindet sich am Zeilenende ein LF-Zeichen (`n), wird es ignoriert. Es ist m&ouml;glich, Tabulator- und Leerzeichen an beiden Enden jeder Variable zu entfernen, indem sie sich selbst zuweist, w&auml;hrend <a href="AutoTrim.htm">AutoTrim</a> aktiv ist (Standardeinstellung). Zum Beispiel: <code>EigeneZeile = %EigeneZeile%</code>.</p>
    <p>Es k&ouml;nnen Zeilen gelesen werden, die bis zu 65.534 Zeichen lang sind. Alle ermittelten Zeichen, die danach erfolgen, gehen verloren (verwende stattdessen <a href="FileRead.htm">FileRead</a> oder <a href="LoopReadFile.htm">dateilesende Schleife</a>).</p>
    <h3>Verwandte Befehle</h3>
    <p><a href="FileOpen.htm">FileOpen</a>/<a href="../objects/File.htm#ReadLine">File.ReadLine()</a>, <a href="FileRead.htm">FileRead</a>, <a href="FileAppend.htm">FileAppend</a>, <a href="LoopReadFile.htm">dateilesende Schleife</a>, <a href="IniRead.htm">IniRead</a></p>
    <h3>Beispiel</h3>
    <pre class="NoIndent">Loop
{
    FileReadLine, Zeile, C:\Eigene Dokumente\Kontaktliste.txt, %A_Index%
    If ErrorLevel
        break
    MsgBox, 4, , Zeile #%A_Index% ist "%Zeile%". Weiter?
    IfMsgBox, No
        Return
}
MsgBox, Das Ende der Datei wurde erreicht oder es ist ein Problem aufgetreten.
Return</pre>
  </div>
  </section>
</div>
<script type="text/javascript">WriteFooter(1);</script>
</body>
</html>