<!DOCTYPE HTML>
<html>
<head>
<title>#Include</title>
<meta name="keywords" content="Befehl, Direktive, Ablaufsteuerung">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/ga.js" type="text/javascript"></script>
<!--[if lt IE 9]>
<script src="../static/html5.js"></script>
<![endif]-->
<script src="../navbar/NavScript.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <div id="article">
      <h1>#Include / #IncludeAgain</h1>
      <p>Bewirkt, dass der Inhalt der angegebenen Datei exakt an dieser Position ausgef&uuml;hrt wird.</p>
      <pre class="Syntax">#Include DateiOderVerzeichnis
#Include &lt;Bibliotheksname&gt;
#IncludeAgain DateiOderVerzeichnis </pre>
      <h3>Parameter</h3>
      <table class="info">
        <tr>
          <td style="width: 15%;">DateiOderVerzeichnis</td>
          <td style="width: 85%;"><p><strong>Datei:</strong> Name der Datei, die eingef&uuml;gt werden soll und sich voraussichtlich im Start- oder Arbeitsverzeichnis befinden wird, solange kein absoluter Pfad angegeben ist (au&szlig;er bei <a href="../Scripts.htm#ahk2exe">ahk2exe</a>, das die Datei im eigenen Verzeichnis des Scripts vermutet). Der Dateiname <strong>darf keine</strong> Variablenverweise (au&szlig;er <a href="../Variables.htm#ScriptDir">%A_ScriptDir%</a>, <a href="../Variables.htm#AppData">%A_AppData%</a> und <a href="../Variables.htm#AppDataCommon">%A_AppDataCommon%</a>), Anf&uuml;hrungszeichen oder Platzhalter enthalten. <a href="_EscapeChar.htm">Schutzsequenzen</a> au&szlig;er Semikolon (<strong>`;</strong>) d&uuml;rfen weder verwendet werden, noch sind sie notwendig, da solche Zeichen (z. B. Prozentzeichen) direkt behandelt werden. Hinweis: <a href="SetWorkingDir.htm">SetWorkingDir</a> hat keine Auswirkung auf #Include, da die Direktive verarbeitet wird, bevor das Script ausgef&uuml;hrt wird.</p>
            <p><strong>Verzeichnis:</strong> Es ist m&ouml;glich, ein Verzeichnis anstelle einer Datei anzugeben, um das Arbeitsverzeichnis zu &auml;ndern, welches f&uuml;r alle nachfolgende Vorkommnisse von #Include und <a href="FileInstall.htm">FileInstall</a> gilt. Der Verzeichnisname darf keine Variablen beinhalten, au&szlig;er <a href="../Variables.htm#ScriptDir">%A_ScriptDir%</a>, <a href="../Variables.htm#AppData">%A_AppData%</a> und <a href="../Variables.htm#AppDataCommon">%A_AppDataCommon%</a>. Hinweis: Das &Auml;ndern des Arbeitsverzeichnisses auf diese Weise hat keinen Einfluss auf das Arbeitsverzeichnis des Scripts, das am Anfang gesetzt wird (<a href="../Variables.htm#WorkingDir">A_WorkingDir</a>). Verwende daf&uuml;r <a href="SetWorkingDir.htm">SetWorkingDir</a> im oberen Bereich des Scripts.</p></td>
        </tr>
        <tr>
          <td>Bibliotheksname</td>
          <td><span class="ver">[AHK_L 57+]:</span> Bibliotheksdatei oder Funktionsname. Zum Beispiel w&uuml;rden sowohl <code>#include &lt;Bibliothek&gt;</code> als auch <code>#include &lt;Bibliothek_Funktion&gt;</code> die Datei Bibliothek.ahk aus einem der <a href="../Functions.htm#lib">Ordner mit Funktionsbibliotheken</a> einf&uuml;gen.</td>
        </tr>
      </table>
      <h3>Bemerkungen</h3>
      <p>Ein Script verh&auml;lt sich so, als bef&auml;nde sich der Inhalt der eingef&uuml;gten Datei exakt auf der Position von #Include (als ob der Inhalt der Datei kopiert und eingef&uuml;gt wurde). Folglich k&ouml;nnen zwei isolierte Scripts in der Regel nicht zu einem funktionierenden Script zusammengef&uuml;gt werden (um das zu erreichen, siehe <a href="http://www.autohotkey.com/forum/topic18545.html">www.autohotkey.com/forum/topic18545.html</a>).</p>
      <p>#Include stellt sicher, dass <em>Dateiname</em> nur einmal eingef&uuml;gt wird, selbst wenn es mehrere Einf&uuml;gungen findet. Im Gegensatz dazu erm&ouml;glicht #IncludeAgain mehrere Einf&uuml;gungen von der gleichen Datei, ansonsten ist sie vergleichbar mit #Include.</p>
      <p>Der <em>Dateiname</em>-Parameter kann optional mit *i und einem einzelnen Leerzeichen vorangestellt werden, wodurch das Programm jeden Fehler beim Laden der eingef&uuml;gten Datei ignoriert. Zum Beispiel: <code>#Include *i Spezialoptionen.ahk</code>. Diese Option sollte nur verwendet werden, wenn die Inhalte der eingef&uuml;gten Datei nicht ausschlaggebend f&uuml;r die Operation des Hauptscripts sind.</p>
      <p>Zeilen, die im Hauptfenster per <a href="ListLines.htm">ListLines</a> oder dem Men&uuml; "View-Lines" angezeigt werden, sind immer nach ihrer physischen Reihenfolge innerhalb des eigenen Scripts nummeriert. Das hei&szlig;t, dass das Einf&uuml;gen einer neuen Datei die Zeilennummerierung des Hauptscripts um 1 erh&ouml;ht, n&auml;mlich von der #Include-Zeile selbst (au&szlig;er bei <a href="../Scripts.htm#ahk2exe">kompilierten Scripts</a>, da eingef&uuml;gte Dateien zu einem gro&szlig;en Script w&auml;hrend der Kompilierung zusammenf&uuml;gt werden).</p>
      <p>#Include wird oft verwendet, um <a href="../Functions.htm">Funktionen</a> aus einer externen Datei zu laden. Im Gegensatz zu Subroutinen k&ouml;nnen <a href="../Functions.htm">Funktionen</a> ganz am Anfang des Scripts eingef&uuml;gt werden, ohne dabei den <a href="../Scripts.htm#auto">automatischen Ausf&uuml;hrungsbereich</a> zu beeinflussen.</p>
      <p>Wie bei anderen Direktiven kann #Include nicht bedingt ausgef&uuml;hrt werden. Das hei&szlig;t, dass das folgende Beispiel nicht funktionieren wird:</p>
      <pre>If x = 1
    #Include BeliebigeDatei.ahk  <em>; Die Zeile ist wirksam, unabh&auml;ngig vom X-Wert.</em>
    y = 2  <em>; Und diese Zeile bezieht sich auf das obere IF, da Direktiven sich nicht auf IFs beziehen k&ouml;nnen.</em></pre>
      <p>Dateien k&ouml;nnen automatisch eingef&uuml;gt werden (ohne dabei #Include zu verwenden), wenn eine <a href="../Functions.htm#lib">Bibliotheksfunktion</a> mit dem Namen aufgerufen wird.</p>
      <h3>Verwandte Befehle</h3>
      <p><a href="../Functions.htm#lib">Funktionsbibliotheken</a>, <a href="../Functions.htm">Funktionen</a>, <a href="FileInstall.htm">FileInstall</a></p>
      <h3>Beispiel</h3>
      <pre class="NoIndent">#Include C:\Eigene Dokumente\Scripts\Tool-Subroutinen.ahk
#Include %A_ScriptDir%  <em>; &Auml;ndert das Arbeitsverzeichnis aller nachfolgenden #Includes und FileInstalls.</em>
#Include C:\Eigene Scripts  <em>; Wie oben, aber ein direkt angegebenes Verzeichnis.</em></pre>
    </div>
  </section>
</div>
<script type="text/javascript">WriteFooter(1);</script>
</body>
</html>