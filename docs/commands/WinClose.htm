<!DOCTYPE HTML>
<html>
<head>
<title>WinClose</title>
<meta name="keywords" content="Befehl, Fenster">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/ga.js" type="text/javascript"></script>
<!--[if lt IE 9]>
<script src="../static/html5.js"></script>
<![endif]-->
<script src="../navbar/NavScript.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <article>
      <h1>WinClose</h1>
      <p>Schlie&szlig;t das angegebene Fenster.</p>
      <pre class="Syntax">WinClose [, Fenstertitel, Fenstertext, Wartezeit, Titelausnahme, Textausnahme]</pre>
      <h3>Parameter</h3>
      <table class="info">
        <tr>
          <td style="width: 15%;">Fenstertitel</td>
          <td style="width: 85%;">Ein Fenstertitel oder sonstige Kriterien, die das Zielfenster ermitteln sollen. Siehe <a href="../misc/WinTitle.htm">Fenstertitel</a>.</td>
        </tr>
        <tr>
          <td>Fenstertext</td>
          <td>In diesem Parameter kann ein Teilstring angegeben werden, der in einem Textelement des Zielfensters vorkommt (werden mit Windows Spy angezeigt). Versteckte Textelemente werden auch erkannt, sofern <a href="DetectHiddenText.htm">DetectHiddenText</a> aktiv ist.</td>
        </tr>
        <tr>
          <td>Wartezeit</td>
          <td>Ist dieser Parameter leer oder nicht vorhanden, wartet der Befehl &uuml;berhaupt nicht. Ist eine 0 angegeben, wartet der Befehl 500 ms. Ansonsten wartet der Befehl die angegebene Anzahl an Sekunden (kann einen Dezimalpunkt oder einen <a href="../Variables.htm#Expressions">Ausdruck</a> enthalten), bis das Fenster geschlossen wird. Falls das Fenster innerhalb der Wartezeit nicht geschlossen wird, setzt das Script seine Ausf&uuml;hrung fort. ErrorLevel wird von diesem Befehl <strong>nicht</strong> gesetzt - verwende daher <a href="IfWinExist.htm">IfWinExist</a> oder <a href="WinWaitClose.htm">WinWaitClose</a>, um eindeutig festzustellen, ob ein Fenster geschlossen ist. W&auml;hrend der Befehl in einem Wartezustand ist, k&ouml;nnen neue <a href="../misc/Threads.htm">Threads</a> mittels <a href="../Hotkeys.htm">Hotkey</a>, <a href="Menu.htm">benutzerdefinierte Men&uuml;eintr&auml;ge</a> oder <a href="SetTimer.htm">Timer</a> gestartet werden.</td>
        </tr>
        <tr>
          <td>Titelausnahme</td>
          <td>Ignoriert Fenster, deren Titel diesen Wert enthalten.</td>
        </tr>
        <tr>
          <td>Textausnahme</td>
          <td>Ignoriert Fenster, deren Textelemente diesen Wert enthalten.</td>
        </tr>
      </table>
      <h3>Bemerkungen</h3>
      <p>Dieser Befehl sendet eine Close-Meldung ans Fenster. Das Ergebnis ist abh&auml;ngig vom Fenster (es k&ouml;nnte dazu auffordern, Daten zu speichern, und so weiter).</p>
      <p>Ist ein &uuml;bereinstimmendes Fenster aktiv, wird vorrangig dieses Fenster geschlossen, anstatt ein anderes &uuml;bereinstimmende Fenster darunter. Im Falle mehrerer &uuml;bereinstimmender Fenster wird generell das oberste (aktuell verwendete) Fenster geschlossen.</p>
      <p>Dieser Befehl bezieht sich immer nur auf das oberste &uuml;bereinstimmende Fenster, es sein denn, <em>Fenstertitel</em> ist <a href="GroupAdd.htm">ahk_group Gruppenname</a>, in dem Fall sind alle Fenster in der Gruppe betroffen.</p>
      <p>WinClose sendet eine WM_CLOSE-Meldung ans Zielfenster, das eine etwas gewaltsame Methode zum Schlie&szlig;en des Fensters ist. Alternativ kann das Fenster mit folgender Meldung geschlossen werden, die allerdings ein anderes Verhalten erzeugen kann, da das vergleichbar mit Dr&uuml;cken von Alt+F4 oder Anklicken der Schlie&szlig;en-Schaltfl&auml;che in der Fenstertitelleiste ist:</p>
      <pre>PostMessage, 0x112, 0xF060,,, Fenstertitel, Fenstertext <em>; 0x112 = WM_SYSCOMMAND, 0xF060 = SC_CLOSE</em></pre>
      <p>Wenn ein Fenster per WinClose nicht geschlossen werden kann, kannst du das mit <a href="WinKill.htm">WinKill</a> erzwingen.</p>
      <p>Fenstertitel und -texte unterscheiden zwischen Gro&szlig;- und Kleinschreibung. Solange <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> deaktiviert ist, werden versteckte Fenster nicht wahrgenommen.</p>
      <h3>Verwandte Befehle</h3>
      <p><a href="WinKill.htm">WinKill</a>, <a href="WinWaitClose.htm">WinWaitClose</a>, <a href="Process.htm">Process</a>, <a href="WinActivate.htm">WinActivate</a>, <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>, <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a>, <a href="../misc/WinTitle.htm#LastFoundWindow">Zuletzt gefundenes Fenster</a>, <a href="IfWinExist.htm">IfWinExist</a>, <a href="IfWinActive.htm">IfWinActive</a>, <a href="WinWaitActive.htm">WinWaitActive</a>, <a href="WinWait.htm">WinWait</a>, <a href="GroupActivate.htm">GroupActivate</a></p>
      <h3>Beispiel</h3>
      <pre class="NoIndent">IfWinExist, Unbenannt - Editor
    WinClose <em>; zuletzt gefundenes Fenster verwenden</em>
Else
    WinClose, Rechner</pre>
    </article>
  </section>
</div>
<script type="text/javascript">WriteFooter(1);</script>
</body>
</html>
