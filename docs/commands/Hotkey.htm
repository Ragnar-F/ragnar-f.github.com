<!DOCTYPE HTML>
<html>
<head>
<title>Hotkey</title>
<meta name="keywords" content="Befehl, Hotkey">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/jquery-1.11.0.min.js"type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../navbar/NavScript.js" type="text/javascript"></script>
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <article>
      <h1>Hotkey</h1>
      <p>Erstellt, bearbeitet, aktiviert oder deaktiviert ein Hotkey, während das Script läuft.</p>
      <pre class="Syntax">Hotkey, Tastenname [, Label, Optionen]
Hotkey, IfWinActive/Exist [, Fenstertitel, Fenstertext]
Hotkey, If, Ausdruck</pre>
      <h3>Parameter</h3>
      <table class="info">
        <tr>
          <td style="width: 15%;">Tastenname</td>
          <td style="width: 85%;">
          <p>Name des Hotkeys, einschließlich <a href="../Hotkeys.htm#Symbols">Modifikatorzeichen</a>. Zum Beispiel kann mit <code>#c</code> der Hotkey WIN+C angegeben werden.</p>
          <p>Falls der <em>Tastenname</em> als Hotkey bereits existiert oder ein vorhandenes Hotkey-Label ist (also ein Label mit zwei Doppelpunkten), wird dieser mit den restlichen Parameterwerten des Befehls aktualisiert.</p>
          <p>Bei Angabe eines <em>vorhandenen</em> Hotkeys ist der <em>Tastenname</em> nicht von der Groß- oder Kleinschreibung abhängig. Allerdings müssen die Namen der Tasten mit den Tastennamen im vorhandenen Hotkey übereinstimmen (zum Beispiel ist hierbei das Esc nicht das gleiche wie Escape). Zudem ist es egal, wie die <a href="../Hotkeys.htm#Symbols">Modifikatorzeichen</a> (z. B. ^!+#) angeordnet werden.</p>
          <p>Die <a href="#IfWin">aktuelle Einstellung von IfWin</a> bestimmt die <a href="#variant">Variante</a> eines Hotkeys, auf die sich der Hotkey-Befehl beziehen wird. Sollte die Variante nicht vorhanden sein, wird sie erst erstellt.</p>
          <p>Sobald der Hotkey erstmalig mit diesem Befehl erstellt wird oder im Script als <a href="../Hotkeys.htm">Label mit zwei Doppelpunkten</a> angegeben ist, bildet sich aus dem Tastennamen und der Reihenfolge der Modifikatorzeichen sein permanenter Name, der in der internen Variable <a href="../Variables.htm#ThisHotkey">A_ThisHotkey</a> angezeigt wird. Das heißt, dass sich dieser Name auch dann nicht ändern wird, wenn der Hotkey-Befehl später auf diesen Hotkey mit einer unterschiedlichen Zeichenreihenfolge zugreift.</p>
          </td>
        </tr>
        <tr>
          <td>Label</td>
          <td>
          <p>Name des <a href="../misc/Labels.htm">Labels</a>, dessen Inhalt beim Drücken des Hotkeys ausgeführt werden soll (als neuer <a href="../misc/Threads.htm">Thread</a>). Es können sowohl normale als auch <a href="../Hotkeys.htm">Hotkey</a>/<a href="../Hotstrings.htm">Hotstring</a>-Label verwendet werden, jedoch ohne den nachfolgenden Doppelpunkt(en). Falls das <em>Label</em> dynamisch ist (z. B. %VarMitLabelnamen%), sollte <a href="../Functions.htm#IsLabel">IsLabel(VarMitLabelnamen)</a> vorher aufgerufen werden, um dessen Verfügbarkeit zu überprüfen.</p>
          <p>Dieser Parameter kann leer gelassen werden, wenn der <em>Tastenname</em> bereits als Hotkey existiert. In diesem Fall bleibt sein Label unverändert. Das ist nützlich, um nur die <em>Optionen</em> des Hotkeys zu ändern.</p>
          <p><strong>Wird der Label eines Hotkeys verwendet, der zuvor mit diesem Befehl deaktiviert wurde, bleibt dieser Hotkey deaktiviert. Verwendet ON in den <em>Optionen</em>, um das zu verhindern.</strong></p>
          <p>Dieser Parameter kann außerdem einen der folgenden Sonderwerte enthalten:</p>
          <p><strong>On</strong>: Der Hotkey wird aktiviert. Wirkungslos, wenn der Hotkey bereits aktiv ist.</p>
          <p><strong>Off</strong>: Der Hotkey wird deaktiviert. Wirkungslos, wenn der Hotkey bereits inaktiv ist.</p>
          <p><strong>Toggle</strong>: Der Status des Hotkeys wird umgekehrt (aktiviert oder deaktiviert).</p>
          <p><strong>AltTab</strong> (und andere): Spezielle Alt-Tab-Aktionen, die <a href="../Hotkeys.htm#alttab">hier</a> beschrieben werden.</p>
          <p>Hinweis: Diese Werte haben nur eine besondere Bedeutung, <u>wenn kein entsprechendes Label vorhanden ist</u>. Wenn zum Beispiel ein Label <code>On:</code> existiert und dieser Parameter das Wort ON enthält, dann wird dieses Wort als Labelname behandelt. Damit Hotkeys in solchen Fällen aktiviert oder deaktiviert werden können, verwendet den <i>Optionen</i>-Parameter. <i>Label</i> kann weggelassen werden, z. B. <code>Hotkey Esc,, Off</code>.</p>
          <p>Hinweis: Die <a href="Hotkey.htm#IfWin">aktuelle Einstellung von IfWin</a> bestimmt die <a href="Hotkey.htm#variant">Variante</a> eines Hotkeys, auf die sich On/Off/Toggle beziehen wird.</p>
          </td>
        </tr>
        <tr>
          <td>Optionen</td>
          <td>
          <p>Ein String, der entweder leer ist oder mehrere folgende Optionen enthalten kann, optional durch Leerzeichen getrennt. Zum Beispiel: <code>UseErrorLevel B0</code>.</p>
          <p id="UseErrorLevel"><strong>UseErrorLevel</strong>: Sobald der Befehl auf ein Problem stößt, wird jede Warnung übersprungen, <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf einen Code aus der <a href="#ErrorLevel">unteren</a> Tabelle gesetzt und der <a href="../misc/Threads.htm">aktuelle Thread</a> fortgesetzt.</p>
          <p><strong>On</strong>: Aktiviert den Hotkey, falls er zuvor deaktiviert wurde.</p>
          <p><strong>Off</strong>: Deaktiviert den Hotkey, falls er zuvor aktiviert wurde. Diese Option wird normalerweise dazu verwendet, einen Hotkey zunächst im deaktivierten Zustand zu erstellen.</p>
          <p><strong>B</strong> oder <strong>B0</strong>: Mit dem Buchstaben B wird ein Hotkey zwischengespeichert, wie in <a href="_MaxThreadsBuffer.htm">#MaxThreadBuffer</a> beschrieben. Mit B0 (B mit einer 0) wird diese Art der Zwischenspeicherung wieder deaktiviert.</p>
          <p><strong>Pn</strong>: Nach dem Buchstaben P kann die <a href="../misc/Threads.htm">Thread-Priorität</a> des Hotkeys angegeben werden. Ist die P-Option beim Erstellen eines Hotkeys nicht vorhanden, wird stattdessen eine 0 verwendet.</p>
          <p><strong>Tn</strong>: Nach dem Buchstaben T kann die maximale Anzahl an Threads angegeben werden, wie in <a href="_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a> beschrieben. Zum Beispiel: <code>T5</code>.</p>
          <p>Wenn die Optionen <strong>B</strong> und/oder <strong>T</strong> weggelassen werden und der Hotkey bereits vorhanden ist, bleiben diese Optionen unverändert. Sollte der Hotkey aber noch nicht vorhanden sein (das heißt, wenn er kurz davor ist, von diesem Befehl erstellt zu werden), werden standardmäßig die Optionen verwendet, welche zurzeit aktiv sind. Zum Beispiel wird die Instanz von <a href="_MaxThreadsBuffer.htm">#MaxThreadBuffer</a> verwendet, die im Script ganz unten vorkommt. Wird die Direktive <a href="_MaxThreadsBuffer.htm">#MaxThreadBuffer</a> nie im Script verwendet, gilt deren Standardeinstellung (in diesem Fall OFF). Dieses Verhalten trifft auch auf <a href="_IfWinActive.htm">#IfWin</a> zu: Nur das unterste Vorkommen gilt für neu erstellte Hotkeys, es sei denn, "<a href="#IfWin">Hotkey IfWin</a>" wurde seit dem Start des Scripts ausgeführt.</p>
          <p>Hinweis: Die <a href="Hotkey.htm#IfWin">aktuelle Einstellung von IfWin</a> bestimmt die <a href="Hotkey.htm#variant">Variante</a> eines Hotkeys, auf die sich der Hotkey-Befehl beziehen wird. Sollte die Variante nicht vorhanden sein, wird sie erst erstellt.</p>
          </td>
        </tr>
        <tr>
          <td>IfWinActive<br>IfWinExist</td>
          <td>(IfWin<strong>Not</strong>Active und IfWin<strong>Not</strong>Exist werden auch unterstützt). Diese Unterbefehle machen alle danach erstellten Hotkeys kontextabhängig. Siehe <a href="#IfWin">unten</a> für weitere Details.</td>
        </tr>
        <tr>
          <td>Fenstertitel<br>Fenstertext</td>
          <td>
          <p>Innerhalb dieser Parameter wird jeder Variablenverweis wie %var% beständig, sobald der Befehl zum Abschluss kommt. Das heißt, dass nachfolgende Änderungen am Variableninhalt nicht von vorhandenen IfWin-Hotkeys erkannt werden.</p>
          <p>Beim <em>Fenstertitel</em> und <em>Fenstertext</em> gelten, wie bei <a href="_IfWinActive.htm">#IfWinActive/Exist</a> auch, die Standardeinstellungen von <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a> und <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a>, die im <a href="../Scripts.htm#auto">automatischen Ausführungsbereich</a> bestimmt wurden. Siehe <a href="_IfWinActive.htm">#IfWinActive/Exist</a> für weitere Details.</p>
          </td>
        </tr>
        <tr id="If">
          <td>If, Ausdruck</td>
          <td>
          <p><span class="ver">[AHK_L]:</span> Gegenstück von <a href="_If.htm">#If <i>Ausdruck</i></a>. Der <i>Ausdruck</i> muss exakt mit dem Text eines <b>bestehenden</b> <code>#If <i>Ausdruck</i></code> übereinstimmen, außer bei <code>#If</code> oder <code>#If,</code>. Wird das mit dem Hotkey-Befehl verwendet, muss das Komma nach "If" angegeben werden. Obwohl dieser Befehl nicht in der Lage ist, neue Ausdrücke zu erstellen, können dennoch neue Hotkeys erstellt werden, die einen bereits vorhandenen Ausdruck verwenden. Siehe <a href="_If.htm#ex4">4. Beispiel von #If</a>.</p>
          <p><strong>Bekannte Einschränkung:</strong> Enthält <em>Ausdruck</em> einen <code>AND</code>/<code>OR</code>-Operator, wird dieser nicht als bereits vorhandener Ausdruck erkannt. Als Übergangslösung kann der gleichwertige <code>&amp;&amp;</code>/<code>||</code>-Operator verwendet werden, sowohl im originalen #If-Ausdruck als auch in dem, der an den Hotkey-Befehl übergeben wird.</p>
          </td>
        </tr>
      </table>
      <h3 id="ErrorLevel">ErrorLevel</h3>
      <p><span class="ver">[v1.1.04+]</span> Dieser Befehl ist in der Lage, bei Misserfolg eine Ausnahme auszulösen. Für mehr Informationen, siehe <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
      <p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> ändert sich nur, wenn:</p>
      <ul>
        <li>der erste Parameter IfWin[Not]Active/Exist ist. In diesem Fall wird ErrorLevel bei Misserfolg auf 1 und bei Erfolg auf 0 gesetzt. </li>
        <li>das Wort UseErrorLevel in den <em>Optionen</em> vorhanden ist.</li>
      </ul>
      <table class="info">
        <tr>
          <th>Fehler</th>
          <th>Beschreibung</th>
        </tr>
        <tr>
          <td>1</td>
          <td>Der <em>Label</em>-Parameter verweist auf einen nicht vorhandenen Labelnamen. </td>
        </tr>
        <tr>
          <td>2</td>
          <td>Der <em>Tastenname</em>-Parameter enthält eine oder mehrere Tasten, die weder erkannt noch von der aktuellen Tastaturbelegung/Sprache unterstützt werden.</td>
        </tr>
        <tr>
          <td>3</td>
          <td>Nicht unterstützte Präfixtaste. Zum Beispiel ist es nicht möglich, das Mausrad als Präfix in einem Hotkey wie <code>WheelDown &amp; Enter</code> zu verwenden.</td>
        </tr>
        <tr>
          <td>4</td>
          <td>Der <em>Tastenname</em> ist nicht für Aktionen mit <a href="../Hotkeys.htm#alttab">AltTab oder ShiftAltTab</a> geeignet. Es müssen immer zwei Tasten kombiniert werden. Zum Beispiel: <code>RControl &amp; RShift::AltTab</code>.</td>
        </tr>
        <tr>
          <td>5</td>
          <td>Der Befehl versucht, einen nicht vorhandenen Hotkey zu ändern.</td>
        </tr>
        <tr>
          <td>6</td>
          <td>Der Befehl versucht, eine nicht vorhandene <a href="#variant">Variante</a> eines vorhandenen Hotkeys zu ändern. Um dieses Problem zu beheben, verwendet <a href="#IfWin">Hotkey IfWin</a>, um Übereinstimmungskriterien für Hotkeys zu bestimmen, die geändert werden sollen.</td>
        </tr>
        <tr>
          <td>50</td>
          <td>Windows 95/98/Me: Der Befehl wurde erfolgreich ausgeführt, aber das Betriebssystem weigert sich, den Hotkey zu aktivieren. Dieser Fehler wird eigentlich nur verursacht, wenn der Hotkey gerade von einem anderen Script oder einer anderen Anwendung verwendet wird (oder vom Betriebssystem selbst). Das passiert nur in Windows 95/98/Me. Bei anderen Betriebssystemen greift das Programm auf den <a href="_InstallKeybdHook.htm">Tastatur-Hook</a> zurück, um dieses Problem zu <a href="../misc/Override.htm">überschreiben</a>.</td>
        </tr>
        <tr>
          <td>51</td>
          <td>Windows 95/98/Me: Der Befehl wurde erfolgreich ausgeführt, aber der Hotkey wird vom Betriebssystem nicht unterstützt. Solche Betriebssysteme unterstützen zum Beispiel keine Maus- und Präfix-Hotkeys wie <code>a &amp; b</code>.</td>
        </tr>
        <tr>
          <td>98</td>
          <td>Dieser Hotkey würde die Begrenzung von 1000 Hotkeys pro Script überschreiten (allerdings darf jeder Hotkey unendlich viele <a href="#variant">Varianten</a> haben; <a href="../Hotstrings.htm">Hotstrings</a> hingegen sind nicht begrenzt).</td>
        </tr>
        <tr>
          <td>99</td>
          <td>Nicht genug Arbeitsspeicher. Das ist sehr selten und passiert für gewöhnlich nur, wenn das Betriebssystem instabil ist.</td>
        </tr>
      </table>
      <br>
      <p>Tipp: Mit UseErrorLevel kann überprüft werden, ob eine Hotkey-Variante vorhanden ist. Zum Beispiel:</p>
      <pre>Hotkey, ^!p,, UseErrorLevel
If ErrorLevel in 5,6
   MsgBox Der Hotkey ist weder vorhanden noch hat er eine Variante mit den aktuellen IfWin-Kriterien.</pre>
      <h3>Bemerkungen</h3>
      <p>Wenn das Ziel darin besteht, basierend auf den Typ des aktiven Fensters bestimmte Hotkeys oder Hotstrings automatisch zu deaktivieren, dann ist <code>Hotkey, ^!c, Off</code> in der Regel weniger gut geeignet als <a href="_IfWinActive.htm">#IfWinActive/Exist</a> (oder das dynamische Gegenstück <a href="#IfWin">Hotkey, IfWinActive/Exist</a>).</p>
      <p>Aus Performance-Gründen sind Hotkeys, die mit <a href="../Hotkeys.htm">zwei Doppelpunkten</a> erstellt wurden, besser als Hotkeys, die mit dem Hotkey-Befehl erstellt wurden. Der Grund ist, dass diese Hotkeys beim Starten des Scripts gleichzeitig aktiviert werden (statt einzeln). Daher sollte dieser Befehl nur bei Hotkeys verwendet werden, deren Tastennamen erst nach dem Scriptstart bekannt sind. Zum Beispiel, um die Hotkeys im Script für verschiedene Aktion mittels einer <a href="IniRead.htm">INI-Datei</a> konfigurierbar zu machen.</p>
      <p>Ein Label kann das Ziel von mehreren Hotkeys sein. Mit der internen Variable <a href="../Variables.htm#ThisHotkey">A_ThisHotkey</a> kann ermittelt werden, mit welchem Hotkey ein Label aufgerufen wurde. </p>
      <p>Sobald das Script mit <a href="Suspend.htm">Suspend</a> unterbrochen wird, werden neu hinzugefügte/aktivierte Hotkeys auch unterbrochen. Sie werden wieder aktiviert, wenn diese Art der Unterbrechung aufgehoben wird (sofern sie nicht davon ausgenommen werden, wie im <a href="Suspend.htm">Suspend</a>-Abschnitt beschrieben).</p>
      <p>Die <a href="_InstallKeybdHook.htm">Tastatur</a>- und/oder <a href="_InstallMouseHook.htm">Maus</a>-Hooks werden bei diesem Befehl je nach Bedarf automatisch installiert oder entfernt.</p>
      <p>Obwohl der Hotkey-Befehl nicht in der Lage ist, Hotkeys in anderen Scripts direkt zu aktivieren oder zu deaktivieren, kann er sie dennoch meistens durch Erstellen oder Aktivieren derselben Hotkeys <a href="../misc/Override.htm">überschreiben</a>. Das hängt von mehreren Faktoren ab:</p>
      <ul>
        <li>Ob der Hotkey, der überschrieben werden soll, ein <a href="ListHotkeys.htm">Hook-Hotkey</a> im anderen Script ist (Hotkeys ohne Hook können immer überschrieben werden, außer in Win9x).</li>
        <li>Die Tatsache, dass die zuletzt gestarteten Hotkeys im Script generell Vorrang vor den Hotkeys aus den anderen Scripts haben. </li>
        <li>Ob der <a href="_InstallKeybdHook.htm">Tastatur</a>- oder <a href="_InstallMouseHook.htm">Maus</a>-Hook beim Aktivieren oder Erstellen des Hotkeys erneut aktiviert wird (in diesem Fall ist das Überschreiben immer erfolgreich).</li>
      </ul>
      <p>Sobald ein Script mindestens einen Hotkey enthält, wird es persistent. Das heißt, dass <a href="ExitApp.htm">ExitApp</a> anstelle von Exit verwendet werden muss, um dieses Script zu beenden. Zudem dürfen Hotkey-Scripts standardmäßig nur einmal vorkommen, es sei denn, <code><a href="_SingleInstance.htm">#SingleInstance</a>, Off</code> wird verwendet.</p>
      <h3 id="IfWin">Bemerkungen zu <em>Hotkey, IfWinXX [, Fenstertitel, Fenstertext]</em></h3>
      <p>Mit "Hotkey IfWin" können kontextabhängige <a href="../Hotkeys.htm">Hotkeys</a> erstellt und geändert werden, während das Script läuft (Direktiven wie <a href="_IfWinActive.htm">#IfWinActive/Exist</a> sind hingegen von der Position abhängig und werden bereits vor dem Scriptstart wirksam). Zum Beispiel:</p>
      <pre>Hotkey, IfWinActive, ahk_class Notepad
Hotkey, ^!e, EigenesLabel  <em>; Erstellt einen Hotkey, der nur im Editor funktioniert.</em></pre>
      <p>Alle <a href="../Hotkeys.htm">Hotkeys</a> sind kontextabhängig, die nach "Hotkey IfWin" erstellt oder geändert werden. Darüber hinaus schließen sich die IfWin-Unterbefehle gegenseitig aus. Das heißt, dass nur der aktuellste Unterbefehl wirksam ist.</p>
      <p>Um die Kontextabhängigkeit zu deaktivieren (das heißt, um danach erstellte Hotkeys für alle Fenster wirksam zu machen), verwendet einen beliebigen IfWin-Unterbefehl ohne den Parametern <em>Fenstertitel</em> und <em>Fenstertext</em>. Zum Beispiel: <code>Hotkey, IfWinActive</code>.</p>
      <p>Sollte "Hotkey IfWin" nie im Script verwendet werden, wird die zuletzt verwendete <a href="_IfWinActive.htm">#IfWin</a>-Direktive (falls vorhanden) für den Hotkey-Befehl wirksam.</p>
      <p>Falls ein Maus- oder Tastatur-Hotkey mit IfWin deaktiviert ist, führt es seine ursprüngliche Funktion durch. Das heißt, dass er an das aktive Fenster übergeben wird, als gäbe es nicht diesen Hotkey. Folgende Ausnahmen gelten dabei:</p>
      <ul>
        <li>In Windows 95/98/Me hat das Drücken eines Hotkeys, der mit IfWin deaktiviert wurde, keinen Effekt (selbst seine ursprüngliche Funktion nicht).</li>
        <li>Auch wenn IfWin bei Joystick-Hotkeys funktioniert, werden andere Programme nicht daran gehindert, das Drücken einer Joysticktaste zu erkennen.</li>
      </ul>
      <h3 id="variant">Hotkey-Varianten (-Duplikate)</h3>
      <p>Ein bestimmter Hotkey kann mehrmals erstellt werden, wenn für jede Definition ein anderes IfWin-Kriterium angegeben wird. Auch bekannt als <em>Hotkey-Varianten</em>. Zum Beispiel:</p>
      <pre>Hotkey, IfWinActive, ahk_class Notepad
Hotkey, ^!c, EigenesLabelFürEditor
Hotkey, IfWinActive, ahk_class WordPadClass
Hotkey, ^!c, EigenesLabelFürWordPad
Hotkey, IfWinActive
Hotkey, ^!c, EigenesLabelFürRestlicheFenster</pre>
      <p>Falls mehrere Hotkey-Varianten zur Ausführung berechtigt sind, hat die zuletzt erstellte Variante oberste Priorität. Die Ausnahme davon ist die globale Variante (ohne IfWin-Kriterium): Sie hat immer die niedrigste Priorität und wird daher nur ausgeführt, wenn keine andere Variante berechtigt ist.</p>
      <p>Beim Erstellen von Hotkey-Duplikaten können die <a href="../Hotkeys.htm#Symbols">Modifikatorzeichen</a> (z. B. ^!+#) nach Belieben angeordnet werden. Zum Beispiel ist <code>^!c</code> das gleiche wie <code>!^c</code>. Allerdings müssen die Tasten übereinstimmend aufgeschrieben werden. Zum Beispiel ist hierbei das <em>Esc</em> nicht das gleiche wie <em>Escape</em>. Hotkeys mit <a href="../Hotkeys.htm#wildcard">Platzhalter-Präfix (*)</a> und Hotkeys ohne Platzhalter sind voneinander getrennt. Zum Beispiel würden <code>F1</code> und <code>*F1</code> jeweils ihre eigenen Varianten haben.</p>
      <p>Siehe <a href="_IfWinActive.htm#gen">Bemerkungen zu #IfWin</a>, um mehr darüber zu erfahren.</p>
      <h3>Verwandte Befehle</h3>
      <p><a href="../Hotkeys.htm#Symbols">Hotkey-Symbole</a>, <a href="_IfWinActive.htm">#IfWinActive/Exist</a>, <a href="_MaxThreadsBuffer.htm">#MaxThreadsBuffer</a>, <a href="_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a>, <a href="Suspend.htm">Suspend</a>, <a href="../Functions.htm#IsLabel">IsLabel()</a>, <a href="../misc/Threads.htm">Threads</a>, <a href="Thread.htm">Thread</a>, <a href="Critical.htm">Critical</a>, <a href="Gosub.htm">Gosub</a>, <a href="Return.htm">Return</a>, <a href="Menu.htm">Menu</a>, <a href="SetTimer.htm">SetTimer</a></p>
      <h3>Beispiele</h3>
      <pre class="NoIndent">Hotkey, ^!z, EigenesLabel
Return

EigenesLabel:
MsgBox %A_ThisHotkey% wurde gedrückt.
Return

<em>; Andere Beispiele:</em>
Hotkey, RCtrl &amp; RShift, AltTab <em>; Ermöglicht, dass RCtrl &amp; RShift wie Alt-Tab funktioniert.</em>
Hotkey, #c, On  <em>; Reaktiviert den Hotkey WIN+C.</em>
Hotkey, $+#c, Off  <em>; Deaktiviert den Hotkey UMSCHALT+WIN+C.</em>
Hotkey, ^!a, , T5  <em>; Erlaubt 5 Threads für diesen Hotkey.</em>

Hotkey, IfWinActive, ahk_class Notepad
Hotkey, ^!c, EigenesLabelFürNotepad  <em>; Erstellt STRG+ALT+C als Hotkey, der nur im Editor funktioniert.</em></pre>
    </article>
  </section>
</div>
<script type="text/javascript">WriteFooter(1);</script>
</body>
</html>
