<!DOCTYPE HTML>
<html>
<head>
<title>Continue</title>
<meta name="keywords" content="Befehl, Ablaufsteuerung, Schleife">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/ga.js" type="text/javascript"></script>
<!--[if lt IE 9]>
<script src="../static/html5.js"></script>
<![endif]-->
<script src="../navbar/NavScript.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <div id="article">
      <h1>Continue</h1>
      <p>&Uuml;berspringt den Rest der aktuellen <a href="Loop.htm">Schleife</a> und beginnt einen neuen Durchlauf. Nur in einer <a href="Loop.htm">Schleife</a> g&uuml;ltig.</p>
      <pre class="Syntax">Continue [, LoopLabel]</pre>
      <p><span class="ver">[AHK_L 59+]:</span> Mit LoopLabel wird bestimmt, f&uuml;r welche Schleife diese Anweisung gilt. Entweder mit dem <a href="../misc/Labels.htm">Labelnamen</a> oder der numerischen Verschachtelungsebene. Sobald es weggelassen wird oder eine 1 ist, gilt diese Anweisung f&uuml;r die innerste Schleife, in dem sie eingeschlossen ist. LoopLabel muss ein konstanter Wert sein, d. h. Variablen und Ausdr&uuml;cke werden nicht unterst&uuml;tzt. Wenn ein <a href="../misc/Labels.htm">Label</a> angegeben wurde, muss dieser direkt auf ein Loop-Befehl verweisen.</p>
      <p>Continue verh&auml;lt sich wie beim Erreichen einer schlie&szlig;enden Klammer in der Schleife:</p>
      <ol>
        <li><a href="../Variables.htm#Index">A_Index</a> wird um 1 erh&ouml;ht.</li>
        <li>Der Rest der Schleife wird &uuml;bersprungen.</li>
        <li>Die Bedingung einer Schleife (falls vorhanden) wird &uuml;berpr&uuml;ft, ob sie erf&uuml;llt wird. In diesem Fall beginnt ein neuer Durchlauf; ansonsten endet die Schleife.</li>
      </ol>
      <p><a href="Break.htm">Break</a> und Continue sollten gegen&uuml;ber <a href="Goto.htm">Goto</a> immer vorgezogen werden, da sich Scripts damit einfacher lesen und pflegen lassen.</p>
      <h3>Verwandte Befehle</h3>
      <p><a href="Break.htm">Break</a>, <a href="Loop.htm">Loop</a>, <a href="Until.htm">Until</a>, <a href="While.htm">While-Loop</a>, <a href="For.htm">For-Loop</a>, <a href="Block.htm">Block</a>, <a href="../misc/Labels.htm">Label</a></p>
      <h3>Beispiel</h3>
      <pre class="NoIndent"><em>; Dieses Beispiel zeigt 5 MsgBoxes an, jeweils f&uuml;r eine Zahl zwischen 6 und 10.
; In den ersten 5 Durchl&auml;ufen veranlasst der Befehl "continue"
; immer einen Neustart des Durchlaufs, bevor die MsgBox-Zeile erreicht wird.</em>
Loop, 10
{
    If A_Index &lt;= 5
        continue
    MsgBox %A_Index%
}</pre>
      <pre class="NoIndent"><em>; Setzt die &auml;u&szlig;ere Schleife fort.</em>
outer:
Loop 3
{
    x := A_Index
    Loop 3
    {
        If (x*A_Index = 4)
            <b>continue outer</b>  <em>; Gleichwertig mit <b>continue 2</b> oder <b>goto continue_outer</b>.</em>
        MsgBox %x%,%A_Index%
    }
    continue_outer: <em>; F&uuml;r goto.</em>
    ErrorLevel:=ErrorLevel <em>; Vor Revision 57 konnten Labels nicht auf das Ende eines Blocks verweisen.</em>
}

</pre>
    </div>
  </section>
</div>
<script type="text/javascript">WriteFooter(1);</script>
</body>
</html>