<!DOCTYPE HTML>
<html>
<head>
<title>PixelSearch</title>
<meta name="keywords" content="Befehl, Bildschirm">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/ga.js" type="text/javascript"></script>
<!--[if lt IE 9]>
<script src="../static/html5.js"></script>
<![endif]-->
<script src="../navbar/NavScript.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <div id="article">
      <h1>PixelSearch</h1>
      <p>Sucht auf einen Bereich des Bildschirms ein Pixel mit der angegebenen Farbe.</p>
      <pre class="Syntax">PixelSearch, AusgabevariableX, AusgabevariableY, X1, Y1, X2, Y2, FarbID [, Variation, Fast|RGB]</pre>
      <h3>Parameter</h3>
      <table class="info">
        <tr>
          <td style="width: 15%;">AusgabevariableX/Y</td>
          <td style="width: 85%;"><p>Die Namen der Variablen, in denen die Koordinaten X und Y des ersten Pixels gespeichert werden, das mit der <em>FarbID</em> &uuml;bereinstimmt (wenn keine &Uuml;bereinstimmung gefunden wird, werden diese Variablen leer gemacht). Die Koordinaten beziehen sich auf das aktive Fenster, sofern das nicht mit <a href="CoordMode.htm">CoordMode</a> ge&auml;ndert wurde.</p>
            <p>Beide Parameter k&ouml;nnen je nach Bedarf leer gelassen werden. In diesem Fall kann mit ErrorLevel (siehe unten) festgestellt werden, ob eine &Uuml;bereinstimmung gefunden wurde.</p></td>
        </tr>
        <tr>
          <td>X1, Y1</td>
          <td>Die neuen Koordinaten X und Y der oberen linken Ecke des rechteckigen Suchbereichs, die <a href="../Variables.htm#Expressions">Ausdr&uuml;cke</a> sein k&ouml;nnen. <strong>Die Koordinaten beziehen sich auf das aktive Fenster, sofern das nicht mit <a href="CoordMode.htm">CoordMode</a> ge&auml;ndert wurde.</strong></td>
        </tr>
        <tr>
          <td>X2, Y2</td>
          <td>Die neuen Koordinaten X und Y der unteren rechten Ecke des rechteckigen Suchbereichs, die <a href="../Variables.htm#Expressions">Ausdr&uuml;cke</a> sein k&ouml;nnen. Die Koordinaten beziehen sich auf das aktive Fenster, sofern das nicht mit <a href="CoordMode.htm">CoordMode</a> ge&auml;ndert wurde.</td>
        </tr>
        <tr>
          <td>FarbID</td>
          <td>Die dezimale oder hexadezimale Farbkennung im BGR-Format, die gesucht wird (kann ein <a href="../Variables.htm#Expressions">Ausdruck</a> sein). Farbkennungen k&ouml;nnen mit Window Spy (erreichbar &uuml;ber das Tray-Men&uuml;) oder <a href="PixelGetColor.htm">PixelGetColor</a> ermittelt werden. Zum Beispiel: 0x9d6346</td>
        </tr>
        <tr>
          <td>Variation</td>
          <td>Eine Nummer zwischen 0 und 255, die den Farbtontoleranzbereich von Rot-, Gr&uuml;n- und Blaukomponenten kennzeichnet (kann ein <a href="../Variables.htm#Expressions">Ausdruck</a> sein). Dieser Parameter ist hilfreich, wenn die Farbe nicht immer exakt den gleichen Farbton hat. Ist der Wert 255 enthalten, stimmen alle Farben &uuml;berein. Der Standardwert ist 0.</td>
        </tr>
        <tr>
          <td>Fast|RGB</td>
          <td><p>Dieser Parameter kann das Wort Fast, RGB oder beide enthalten (wenn beide vorhanden sind, m&uuml;ssen diese mit einem Leerzeichen getrennt werden, z. B. <em>Fast RGB</em>).</p>
            <p id="fast"><strong>Fast</strong>: Eine schnelle Suchmethode, bei der die Suche in den meisten F&auml;llen deutlich weniger CPU-Zeit ben&ouml;tigt. Obwohl diese Methode auch niedrige Farbtiefen wie 8-Bit (256 Farben) unterst&uuml;tzt, ist sie bei 24-Bit- oder 32-Bit-Farben leistungsst&auml;rker. Wenn die Farbtiefe des Bildschirms 16-Bit oder niedriger ist, verh&auml;lt sich der <em>Variation</em>-Parameter bei der schnellen Methode etwas anders, als bei der langsamen Methode. Die schnelle Methode sucht den Bildschirm Reihe f&uuml;r Reihe ab (von oben nach unten), anstatt Spalte f&uuml;r Spalte. Daher ist es m&ouml;glich, dass ein anderes Pixel als das vom langsamen Modus gefunden wird, falls das Pixel im Suchbereich mehrmals vorkommt.</p>
            <p><strong>RGB</strong>: Bewirkt, dass <em>FarbID</em> als RGB-Wert interpretiert wird, anstatt als BGR-Wert. Das hei&szlig;t, dass die roten und blauen Komponenten vertauscht sind.</p></td>
        </tr>
      </table>
      <h3>ErrorLevel</h3>
      <p><span class="ver">[v1.1.04+]</span> Dieser Befehl ist in der Lage, bei Misserfolg eine Ausnahme auszul&ouml;sen. F&uuml;r mehr Informationen, siehe <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
      <p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird auf 0 gesetzt, wenn die Farbe im angegeben Bereich gefunden wurde, auf 1, wenn sie nicht gefunden wurde, oder auf 2, falls der Befehl daran gehindert wurde, die Suche durchzuf&uuml;hren.</p>
      <h3>Bemerkungen</h3>
      <p>Der Suchbereich muss sichtbar sein. Das hei&szlig;t, dass es ist nicht m&ouml;glich, einen Bereich in einem Fenster zu suchen, das sich hinter einem anderen Fenster befindet. Pixel, die sich unter dem Mauszeiger befinden, werden in der Regel erkannt. Die Ausnahme machen Mauszeiger bei Spielen, weil diese die Sicht auf darunterliegende Pixel behindern.</p>
      <p>Gilt nur f&uuml;r den langsamen Modus: Die Suche beginnt standardm&auml;&szlig;ig beim oberen linken Pixel des Suchbereichs und &uuml;berpr&uuml;ft alle Pixel vertikal darunter, ob eine &Uuml;berstimmung vorliegt. Wenn keine &Uuml;bereinstimmung gefunden wird, wird die Suche nach rechts fortgesetzt, Spalte f&uuml;r Spalte, bis ein passendes Pixel gefunden wird. Die Links-nach-Rechts-Suche kann umgekehrt werden, indem <em>X1</em> und <em>X2</em> in der Parameterliste vertauscht werden. Das hei&szlig;t: Wenn <em>X1</em> gr&ouml;&szlig;er als <em>X2</em> ist, erfolgt die Suche von rechts nach links, beginnend bei Spalte <em>X1</em>. &Auml;hnlich verh&auml;lt es sich, wenn <em>Y1</em> gr&ouml;&szlig;er als <em>Y2</em> ist: in jeder Pixelspalte beginnt die Suche unten, anstatt oben. Erfolgt die Suche in einem gro&szlig;en Bereich und mit hoher Frequenz, wird sehr viel CPU-Zeit beansprucht. Um die Sache zu entsch&auml;rfen, sollte die Bereichsgr&ouml;&szlig;e auf ein Minimum gehalten werden.</p>
      <h3>Verwandte Befehle</h3>
      <p><a href="PixelGetColor.htm">PixelGetColor</a>, <a href="ImageSearch.htm">ImageSearch</a>, <a href="CoordMode.htm">CoordMode</a>, <a href="MouseGetPos.htm">MouseGetPos</a></p>
      <h3>Beispiel</h3>
      <pre class="NoIndent">PixelSearch, Px, Py, 200, 200, 300, 300, 0x9d6346, 3, Fast
If ErrorLevel
    MsgBox, Die Farbe wurde im angegebenen Bereich nicht gefunden.
Else
    MsgBox, Eine Farbe, mit einem Variationswert von 3, wurde bei den Koordinaten X%Px% Y%Py% gefunden.</pre>
    </div>
  </section>
</div>
<script type="text/javascript">WriteFooter(1);</script>
</body>
</html>