<!DOCTYPE HTML>
<html>
<head>
<title>Send/SendRaw/SendInput/SendPlay/SendEvent: Tasten &amp; Klicks senden</title>
<meta name="keywords" content="Befehl, Tastatur, Maus">
<meta name="description" content="Sendet mit dieser freien Scriptsprache Tastatureingaben und Mausklicks an beliebige Fenster. Im Allgemeinen ist SendInput die schnellste und zuverl&auml;ssigste Methode.">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/ga.js" type="text/javascript"></script>
<!--[if lt IE 9]>
<script src="../static/html5.js"></script>
<![endif]-->
<script src="../navbar/NavScript.js" type="text/javascript"></script>
<style type="text/css">
<!--
.red {
	color: #FF0000;
	font-weight: bold;
}
-->
</style>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <div id="article">
      <h1>Send / SendRaw / SendInput / SendPlay / SendEvent: Tasten &amp; Klicks senden</h1>
      <p>Sendet k&uuml;nstliche Tastatureingaben und Mausklicks an das <a href="WinActivate.htm">aktive</a> Fenster.</p>
      <pre class="Syntax">Send Tasten
SendRaw Tasten
SendInput Tasten
SendPlay Tasten
SendEvent Tasten</pre>
      <h3>Parameter</h3>
      <table class="info">
        <tr>
          <td style="width: 15%;">Tasten</td>
          <td style="width: 85%;">Die zu sendende Tastenreihenfolge. Das Komma vor dem ersten Parameter ist wie bei anderen Befehlen optional.</td>
        </tr>
      </table>
      <p id="SendRaw"><strong>Raw-Modus</strong>: Der <em>SendRaw</em>-Befehl interpretiert alle Zeichen direkt, anstatt zum Beispiel {Enter} als ENTER-Taste, ^c als STRG+C und so weiter zu interpretieren. Allerdings gelten weiterhin die normalen Regeln f&uuml;r Schutzsequenzen, Variablenverweise und Ausdr&uuml;cke, da diese verarbeitet werden, bevor der Befehl ausgef&uuml;hrt wird. Um den Raw-Modus mit SendInput, SendPlay oder SendEvent zu verwenden, sollte <a href="#Raw">{Raw}</a> als erstes Element im String geschrieben werden, zum Beispiel: <code>SendInput {Raw}abc</code>.</p>
      <p><strong>Normal-Modus</strong>: Ist der Raw-Modus nicht aktiv, werden folgende Zeichen als Modifikatoren behandelt (diese Modifikatoren beeinflussen nur die nachfolgende Taste):</p>
      <p><span class="red">!</span>: Sendet eine ALT-Taste. Zum Beispiel w&uuml;rde <code>Send Das ist ein Text!a</code> die Tasten "Das ist ein Text" senden und danach ALT+A dr&uuml;cken. <strong>Hinweis</strong>: !A erzeugt in einigen Programmen einen anderen Effekt als !a. Das liegt daran, dass mit !A die Tastenkombination ALT+UMSCHALT+A und mit !a die Tastenkombination ALT+A gedr&uuml;ckt wird. Im Zweifelsfall sollten immer Kleinbuchstaben verwenden werden.</p>
      <p><span class="red">+</span>: Sendet eine UMSCHALT-Taste. Zum Beispiel: <code>Send +abC</code> sendet den Text "AbC" und <code>Send !+a</code> dr&uuml;ckt die Tastenkombination ALT+UMSCHALT+A.</p>
      <p><span class="red">^</span>: Sendet eine STRG-Taste. Zum Beispiel: <code>Send ^!a</code> dr&uuml;ckt STRG+ALT+A und <code>Send ^{Home}</code> sendet STRG+POS1. <strong>Hinweis</strong>: ^A erzeugt in einigen Programmen einen anderen Effekt als ^a. Das liegt daran, dass mit ^A die Tastenkombination STRG+UMSCHALT+A und mit ^a die Tastenkombination STRG+A gedr&uuml;ckt wird. Im Zweifelsfall sollten immer Kleinbuchstaben verwenden werden.</p>
      <p><span class="red">#</span>: Sendet eine WIN-Taste. Zum Beispiel w&uuml;rde <code>Send #e</code> die WIN-Taste gedr&uuml;ckt halten und den Buchstaben "e" dr&uuml;cken.</p>
      <br>
      <p><span id="SendInput"></span><span id="SendPlay"></span><strong>SendInput</strong> und <strong>SendPlay</strong> <span class="ver">[v1.0.43+]:</span> SendInput und SendPlay verwenden die gleiche Syntax wie Send, sind aber in der Regel schneller und zuverl&auml;ssiger. Dar&uuml;ber hinaus wird jede physische Tastatur- oder Mausaktivit&auml;t beim Senden zwischengespeichert, um zu verhindern, dass die Benutzereingaben sich mit denen vermischen, die gesendet wurden. <a href="SendMode.htm">SendMode</a> kann verwendet werden, um Send gleichbedeutend mit SendInput oder SendPlay zu machen. Weitere Details k&ouml;nnen in <a href="#SendInputDetail">SendInput</a> und <a href="#SendPlayDetail">SendPlay</a> weiter unten gefunden werden.</p>
      <p id="SendEvent"><strong>SendEvent</strong> <span class="ver">[v1.0.43+]:</span> SendEvent sendet Tastatureingaben mit der gleichen Methode wie der <em>Send</em>-Befehl vor Version 1.0.43. Die Sendegeschwindigkeit von Tastatureingaben wird mit <a href="SetKeyDelay.htm">SetKeyDelay</a> bestimmt. Standardm&auml;&szlig;ig ist <em>Send</em> gleichbedeutend mit <em>SendEvent</em>. Mithilfe von <a href="SendMode.htm">SendMode</a> kann Send auch zu einem Synonym f&uuml;r <a href="#SendInputDetail">SendInput</a> oder <a href="#SendPlayDetail">SendPlay</a> gemacht werden.</p>
      <p><strong>Tastennamen</strong>: Die folgende Tabelle listet alle speziellen Tasten auf, die gesendet werden k&ouml;nnen (jeder Tastenname muss von geschweiften Klammern umschlossen werden):</p>
      <table class="info">
        <tr>
          <th style="width: 200px;">Tastenname</th>
          <th>Resultierende Tastatureingabe</th>
        </tr>
        <tr>
          <td style="text-align: center;">{F1} - {F24}</td>
          <td>Funktionstasten. Zum Beispiel ist {F12} die F12-Taste.</td>
        </tr>
        <tr>
          <td style="text-align: center;">{!}</td>
          <td>!</td>
        </tr>
        <tr>
          <td style="text-align: center;">{#}</td>
          <td>#</td>
        </tr>
        <tr>
          <td style="text-align: center;">{+}</td>
          <td>+</td>
        </tr>
        <tr>
          <td style="text-align: center;">{^}</td>
          <td>^</td>
        </tr>
        <tr>
          <td style="text-align: center;">{{}</td>
          <td>{</td>
        </tr>
        <tr>
          <td style="text-align: center;">{}}</td>
          <td>}</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Enter}</td>
          <td>ENTER-Taste</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Escape} oder {Esc}</td>
          <td>ESC-Taste</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Space}</td>
          <td>LEERTASTE (nur f&uuml;r Leerzeichen notwendig, die sich am Anfang oder am Ende des Strings befinden - die in der Mitte k&ouml;nnen echte Leerzeichen sein)</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Tab}</td>
          <td>TAB-Taste</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Backspace} oder {BS}</td>
          <td>R&Uuml;CKTASTE</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Delete} oder {Del}</td>
          <td>ENTF-Taste</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Insert} oder {Ins}</td>
          <td>EINFG-Taste</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Up}</td>
          <td>NACH-OBEN-Taste</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Down}</td>
          <td>NACH-UNTEN-Taste</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Left}</td>
          <td>NACH-LINKS-Taste</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Right}</td>
          <td>NACH-RECHTS-Taste</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Home}</td>
          <td>POS1-Taste</td>
        </tr>
        <tr>
          <td style="text-align: center;">{End}</td>
          <td>ENDE-Taste</td>
        </tr>
        <tr>
          <td style="text-align: center;">{PgUp}</td>
          <td>BILD-NACH-OBEN-Taste</td>
        </tr>
        <tr>
          <td style="text-align: center;">{PgDn}</td>
          <td>BILD-NACH-UNTEN-Taste</td>
        </tr>
        <tr>
          <th><br></th>
          <th><br></th>
        </tr>
        <tr>
          <td style="text-align: center;">{CapsLock}</td>
          <td>FESTSTELL-Taste (in NT/2k/XP ist <a href="SetNumScrollCapsLockState.htm">SetCapsLockState</a> zuverl&auml;ssiger). Das Senden von {CapsLock} ben&ouml;tigt m&ouml;glicherweise vorher <a href="SetStoreCapslockMode.htm">SetStoreCapslockMode Off</a>.</td>
        </tr>
        <tr>
          <td style="text-align: center;">{ScrollLock}</td>
          <td>ROLLEN-Taste (siehe auch: <a href="SetNumScrollCapsLockState.htm">SetScrollLockState</a>)</td>
        </tr>
        <tr>
          <td style="text-align: center;">{NumLock}</td>
          <td>NUM-Taste (siehe auch: <a href="SetNumScrollCapsLockState.htm">SetNumLockState</a>)</td>
        </tr>
        <tr>
          <th><br></th>
          <th><br></th>
        </tr>
        <tr>
          <td style="text-align: center;">{Control} oder {Ctrl} </td>
          <td>STRG-Taste (technische Info: sendet die neutrale virtuelle Taste, aber den linken Scancode)</td>
        </tr>
        <tr>
          <td style="text-align: center;">{LControl} oder {LCtrl}</td>
          <td>Linke STRG-Taste (technische Info: In Win9x das gleiche wie oben, aber in NT/2k/XP wird die linke virtuelle Taste gesendet, anstatt die neutrale)</td>
        </tr>
        <tr>
          <td style="text-align: center;">{RControl} oder {RCtrl}</td>
          <td>Rechte STRG-Taste</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Control Down} oder {Ctrl Down}</td>
          <td>H&auml;lt die STRG-Taste gedr&uuml;ckt, bis {Ctrl Up} gesendet wird. XP/2000/NT: Mit {RCtrl Down} und {RCtrl Up} kann stattdessen die linke oder rechte Taste gedr&uuml;ckt gehalten werden.</td>
        </tr>
        <tr>
          <th><br></th>
          <th><br></th>
        </tr>
        <tr>
          <td style="text-align: center;">{Alt}</td>
          <td>ALT-Taste (technische Info: sendet die neutrale virtuelle Taste, aber den linken Scancode)</td>
        </tr>
        <tr>
          <td style="text-align: center;">{LAlt}</td>
          <td>Linke ALT-Taste (technische Info: In Win9x das gleiche wie oben, aber in NT/2k/XP wird die linke virtuelle Taste gesendet) </td>
        </tr>
        <tr>
          <td style="text-align: center;">{RAlt}</td>
          <td>ALTGR- oder rechte ALT-Taste, abh&auml;ngig von der Tastaturbelegung.</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Alt Down}</td>
          <td>H&auml;lt die ALT-Taste gedr&uuml;ckt, bis {Alt Up} gesendet wird. XP/2000/NT: Mit {RAlt Down} und {RAlt Up} kann stattdessen die linke oder rechte Taste gedr&uuml;ckt gehalten werden.</td>
        </tr>
        <tr>
          <th><br></th>
          <th><br></th>
        </tr>
        <tr>
          <td style="text-align: center;">{Shift}</td>
          <td>UMSCHALT-Taste (technische Info: sendet die neutrale virtuelle Taste, aber den linken Scancode)</td>
        </tr>
        <tr>
          <td style="text-align: center;">{LShift}</td>
          <td>Linke UMSCHALT-Taste (technische Info: In Win9x das gleiche wie oben, aber in NT/2k/XP wird die linke virtuelle Taste gesendet) </td>
        </tr>
        <tr>
          <td style="text-align: center;">{RShift}</td>
          <td>Rechte UMSCHALT-Taste</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Shift Down}</td>
          <td>H&auml;lt die UMSCHALT-Taste gedr&uuml;ckt, bis {Shift Up} gesendet wird. XP/2000/NT: Mit {RShift Down} und {RShift Up} kann stattdessen die linke oder rechte Taste gedr&uuml;ckt gehalten werden.</td>
        </tr>
        <tr>
          <th><br></th>
          <th><br></th>
        </tr>
        <tr>
          <td style="text-align: center;">{LWin}</td>
          <td>Linke WIN-Taste</td>
        </tr>
        <tr>
          <td style="text-align: center;">{RWin}</td>
          <td>Rechte WIN-Taste</td>
        </tr>
        <tr>
          <td style="text-align: center;">{LWin Down}</td>
          <td>H&auml;lt die linke WIN-Taste gedr&uuml;ckt, bis {LWin Up} gesendet wird.</td>
        </tr>
        <tr>
          <td style="text-align: center;">{RWin Down}</td>
          <td>H&auml;lt die rechte WIN-Taste gedr&uuml;ckt, bis {RWin Up} gesendet wird.</td>
        </tr>
        <tr>
          <th><br></th>
          <th><br></th>
        </tr>
        <tr>
          <td style="text-align: center;">{AppsKey}</td>
          <td>MEN&Uuml;-Taste (&ouml;ffnet das Rechtsklick- oder Kontextmen&uuml;) </td>
        </tr>
        <tr>
          <td style="text-align: center;">{Sleep}</td>
          <td>SLEEP-Taste (auf den meisten Tastaturen nicht vorhanden).</td>
        </tr>
        <tr>
          <td style="text-align: center;">{ASC <b>nnnnn</b>}</td>
          <td><p id="asc">Sendet eine ALT+<b>nnnnn</b>-Tastenkombination per Ziffernblock, um Sonderzeichen zu erzeugen, die auf der Tastatur normalerweise nicht vorhanden sind. ASCII-Zeichen k&ouml;nnen erzeugt werden, wenn eine Zahl zwischen 1 und 255 angegeben wird. Um ANSI-Zeichen zu generieren (Standard in den meisten Sprachen), muss zuerst eine 0 und danach eine Zahl zwischen 128 und 255 angegeben werden, zum Beispiel {Asc 0133}.</p>
            <p>Es k&ouml;nnen auch Unicode-Zeichen generiert werden, wenn eine Zahl zwischen 256 und 65535 angegeben wird (ohne 0 davor). Allerdings wird das nicht von jeder Anwendung unterst&uuml;tzt. Alternativen dazu befinden sich im n&auml;chsten Abschnitt.</p></td>
        </tr>
        <tr id="Unicode">
          <td style="text-align: center;">{U+<b>nnnn</b>}</td>
          <td><p id="sendu"><span class="ver">[AHK_L 24+]:</span> Sendet ein Unicode-Zeichen, wenn <b>nnnn</b> der hexadezimale Wert des Zeichens ohne 0x-Pr&auml;fix ist. Das ist in den Unicode-Versionen von AutoHotkey normalerweise nicht notwendig, weil deren Send und ControlSend von sich aus Unicode-Text unterst&uuml;tzen.</p>
            <p>Wenn das Zeichen keinem virtuellen Tastencode zugeordnet werden kann, wird <a href="http://msdn.microsoft.com/en-us/library/ms646310.aspx">SendInput()</a> oder <a href="http://msdn.microsoft.com/en-us/library/ms646276.aspx">WM_CHAR</a> zum Senden des Zeichens verwendet. Au&szlig;erdem ist der aktuelle Send-Modus unwirksam.</p></td>
        </tr>
        <tr>
          <td style="text-align: center;">{vk<b>XX</b>}<br>
            {sc<b>YYY</b>}<br>
            {vk<b>XX</b>sc<b>YYY</b>}</td>
          <td><p id="vk">Sendet eine Tastatureingabe &uuml;ber die virtuelle Taste <b>XX</b> und den Scancode <b>YYY</b>. Zum Beispiel: <code>Send {vkFFsc159}</code>. Sobald das sc- oder vk-Element fehlt, wird stattdessen ein Wert gesendet, der am besten geeignet ist.</p>
            <p>Die Werte f&uuml;r XX und YYY sind hexadezimal und k&ouml;nnen &uuml;blicherweise &uuml;ber den Men&uuml;punkt <a href="KeyHistory.htm">View-&gt; Key history</a> im Hauptfenster abgerufen werden. Siehe auch: <a href="../KeyList.htm#SpecialKeys">Sondertasten</a></p></td>
        </tr>
        <tr>
          <th><br></th>
          <th><br></th>
        </tr>
        <tr>
          <td style="text-align: center;">{Numpad0} - {Numpad9}</td>
          <td>Ziffernblocktasten (wenn Numlock eingeschaltet ist). Zum Beispiel: {Numpad5} ist die Zahl 5.</td>
        </tr>
        <tr>
          <td style="text-align: center;">{NumpadDot}</td>
          <td>, (wenn Numlock eingeschaltet ist)</td>
        </tr>
        <tr>
          <td style="text-align: center;">{NumpadEnter}</td>
          <td>ENTER-Taste</td>
        </tr>
        <tr>
          <td style="text-align: center;">{NumpadMult}</td>
          <td>*</td>
        </tr>
        <tr>
          <td style="text-align: center;">{NumpadDiv}</td>
          <td>/</td>
        </tr>
        <tr>
          <td style="text-align: center;">{NumpadAdd}</td>
          <td>+</td>
        </tr>
        <tr>
          <td style="text-align: center;">{NumpadSub}</td>
          <td>-</td>
        </tr>
        <tr>
          <th><br></th>
          <th><br></th>
        </tr>
        <tr>
          <td style="text-align: center;">{NumpadDel}</td>
          <td>ENTF-Taste (diese und die nachfolgenden Ziffernblocktasten sind nur verwendbar, wenn Numlock ausgeschaltet ist)</td>
        </tr>
        <tr>
          <td style="text-align: center;">{NumpadIns}</td>
          <td>EINFG-Taste</td>
        </tr>
        <tr>
          <td style="text-align: center;">{NumpadClear}</td>
          <td>Funktionslose Taste</td>
        </tr>
        <tr>
          <td style="text-align: center;">{NumpadUp}</td>
          <td>NACH-OBEN-Taste</td>
        </tr>
        <tr>
          <td style="text-align: center;">{NumpadDown}</td>
          <td>NACH-UNTEN-Taste</td>
        </tr>
        <tr>
          <td style="text-align: center;">{NumpadLeft}</td>
          <td>NACH-LINKS-Taste</td>
        </tr>
        <tr>
          <td style="text-align: center;">{NumpadRight}</td>
          <td>NACH-RECHTS-Taste</td>
        </tr>
        <tr>
          <td style="text-align: center;">{NumpadHome}</td>
          <td>POS1-Taste</td>
        </tr>
        <tr>
          <td style="text-align: center;">{NumpadEnd}</td>
          <td>ENDE-Taste</td>
        </tr>
        <tr>
          <td style="text-align: center;">{NumpadPgUp}</td>
          <td>BILD-NACH-OBEN-Taste</td>
        </tr>
        <tr>
          <td style="text-align: center;">{NumpadPgDn}</td>
          <td>BILD-NACH-UNTEN-Taste</td>
        </tr>
        <tr>
          <th><br></th>
          <th><br></th>
        </tr>
        <tr>
          <td style="text-align: center;">{Browser_Back}</td>
          <td>2000/XP/Vista+: Browser "Zur&uuml;ck"</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Browser_Forward}</td>
          <td>2000/XP/Vista+: Browser "Vorw&auml;rts"</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Browser_Refresh}</td>
          <td>2000/XP/Vista+: Browser "Aktualisieren"</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Browser_Stop}</td>
          <td>2000/XP/Vista+: Browser "Stopp"</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Browser_Search}</td>
          <td>2000/XP/Vista+: Browser "Suchen"</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Browser_Favorites}</td>
          <td>2000/XP/Vista+: Browser "Favoriten"</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Browser_Home}</td>
          <td>2000/XP/Vista+: Startet den Browser und &ouml;ffnet die Startseite</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Volume_Mute}</td>
          <td>2000/XP/Vista+: Gesamtlautst&auml;rke stummschalten bzw. Stummschaltung aufheben. Normalerweise das gleiche wie <code><a href="SoundSet.htm">SoundSet</a>, +1, , mute</code>.</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Volume_Down}</td>
          <td>2000/XP/Vista+: Gesamtlautst&auml;rke leiser machen. Normalerweise das gleiche wie <code><a href="SoundSet.htm">SoundSet</a>, -5</code>.</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Volume_Up}</td>
          <td>2000/XP/Vista+: Gesamtlautst&auml;rke lauter machen. Normalerweise das gleiche wie <code><a href="SoundSet.htm">SoundSet</a>, +5</code>.</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Media_Next}</td>
          <td>2000/XP/Vista+: Media Player "N&auml;chster Track"</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Media_Prev}</td>
          <td>2000/XP/Vista+: Media Player "Vorheriger Track"</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Media_Stop}</td>
          <td>2000/XP/Vista+: Media Player "Stopp"</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Media_Play_Pause}</td>
          <td>2000/XP/Vista+: Media Player "Wiedergabe/Anhalten"</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Launch_Mail}</td>
          <td>2000/XP/Vista+: E-Mail-Programm &ouml;ffnen</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Launch_Media}</td>
          <td>2000/XP/Vista+: Media Player &ouml;ffnen</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Launch_App1}</td>
          <td>2000/XP/Vista+: Benutzerdefiniertes Programm 1 &ouml;ffnen.</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Launch_App2}</td>
          <td>2000/XP/Vista+: Benutzerdefiniertes Programm 2 &ouml;ffnen.</td>
        </tr>
        <tr>
          <th><br></th>
          <th><br></th>
        </tr>
        <tr>
          <td style="text-align: center;">{PrintScreen}</td>
          <td>DRUCK-Taste</td>
        </tr>
        <tr>
          <td style="text-align: center;">{CtrlBreak}</td>
          <td>STRG+UNTBR</td>
        </tr>
        <tr>
          <td style="text-align: center;">{Pause}</td>
          <td>PAUSE-Taste</td>
        </tr>
        <tr>
          <th><br></th>
          <th><br></th>
        </tr>
        <tr>
          <td style="text-align: center;"><strong>{Click [Optionen]}</strong><br>
            <span class="ver">[v1.0.43+]</span></td>
          <td id="Click">Sendet einen Mausklick mit den selben Optionen vom <a href="Click.htm">Click-Befehl</a>. Zum Beispiel w&uuml;rde <code>{Click}</code> bewirken, dass die linke Maustaste einmal auf der aktuellen Mausposition geklickt wird, und <code>{Click 100, 200}</code>, dass die Koordinaten 100, 200 angeklickt werden (auf Basis von <a href="CoordMode.htm">CoordMode</a>). Die Maus kann ohne Klicken verschoben werden, wenn eine 0 nach den Koordinaten angegeben wird, zum Beispiel: <code>{Click 100, 200, 0}</code>. Die Verz&ouml;gerung zwischen den Mausklicks wird durch <a href="SetMouseDelay.htm">SetMouseDelay</a> bestimmt (nicht <a href="SetKeyDelay.htm">SetKeyDelay</a>).</td>
        </tr>
        <tr>
          <td style="text-align: center;">{WheelDown}, {WheelUp}, {WheelLeft}, {WheelRight}, {LButton}, {RButton}, {MButton}, {XButton1}, {XButton2}</td>
          <td>Sendet eine Mausaktion auf die aktuelle Mausposition (f&uuml;r die Kontrolle &uuml;ber Position und weitere Optionen kann <a href="Click.htm">{Click}</a> verwendet werden). Die Verz&ouml;gerung zwischen den Mausklicks wird durch <a href="SetMouseDelay.htm">SetMouseDelay</a> bestimmt. WheelLeft/Right ben&ouml;tigt v1.0.48+, aber funktionieren nicht auf Betriebssystemen &auml;lter als Windows Vista.</td>
        </tr>
        <tr>
          <td style="text-align: center;"><strong>{Blind}</strong></td>
          <td><p id="blind">Sobald {Blind} als erstes Element im String vorhanden ist, wird das Programm daran gehindert, dass die anf&auml;nglich gedr&uuml;ckte ALT/STRG/UMSCHALT/WIN-Taste beim Senden losgelassen wird. Zum Beispiel w&uuml;rde der Hotkey <code>+s::Send {Blind}abc</code> ABC statt abc senden, wenn der Benutzer die UMSCHALT-Taste gedr&uuml;ckt h&auml;lt.</p>
            <p>{Blind} bewirkt auch, dass <a href="SetStoreCapslockMode.htm">SetStoreCapslockMode</a> ignoriert wird, das hei&szlig;t, dass der Status der Festelltaste nicht ge&auml;ndert wird. Zudem l&auml;sst {Blind} zus&auml;tzliche Steuerungstasten weg, die ansonsten gesendet werden. Solche Tastatureingaben verhindern erstens, dass das Startmen&uuml; bei linken/rechten WIN-Tastatureingaben angezeigt wird, und zweitens, dass die Men&uuml;leiste bei ALT-Tastatureingaben aktiviert wird.</p>
            <p>Der Blind-Modus wird beim <a href="../misc/Remap.htm">Neubelegen einer Taste</a> automatisch verwendet. Zum Beispiel wird bei der Neubelegung a::b: ein "b" erzeugt, wenn "a" eingegeben wird, ein gro&szlig;es B erzeugt, wenn gro&szlig;es A eingegeben wird oder STRG+B erzeugt, wenn STRG+A eingegeben wird.</p>
            <p>{Blind} wird nicht von SendRaw und <a href="ControlSend.htm">ControlSendRaw</a> unterst&uuml;tzt. Desweiteren wird es nicht richtig von <a href="#SendPlayDetail">SendPlay</a> unterst&uuml;tzt, besonders bei Modifikatoren (STRG, ALT, UMSCHALT und WIN).</p></td>
        </tr>
        <tr>
          <td style="text-align: center;"><strong>{Raw}</strong><br>
            <span class="ver">[v1.0.43+]</span></td>
          <td id="Raw">Sendet die Tastatureingaben genau so, wie sie angezeigt werden, anstatt {Enter} als Enter-Taste, ^c als STRG+C und so weiter zu &uuml;bersetzen. Der String {Raw} kann an eine beliebige Stelle im String eingef&uuml;gt werden. Sobald dieser vorhanden ist, ist der Modus bis zum Stringende aktiv.</td>
        </tr>
      </table>
      <h2>Mehrfaches oder haltendes Dr&uuml;cken einer Taste</h2>
      <p><strong>Mehrfaches Dr&uuml;cken</strong>: Umschlie&szlig;t mit geschweiften Klammern den Namen der Taste, gefolgt von der Anzahl, wie oft diese gedr&uuml;ckt werden soll. Zum Beispiel:</p>
      <pre>Send {DEL 4}  <em>; Dr&uuml;ckt viermal die ENTF-Taste.</em>
Send {S 30}   <em>; Sendet 30 gro&szlig;geschriebene S-Zeichen.</em>
Send +{TAB 4}  <em>; Dr&uuml;ckt viermal UMSCHALT+TAB.</em></pre>
      <p><strong>Halten oder Loslassen</strong>: Umschlie&szlig;t mit geschweiften Klammern den Namen der Taste, gefolgt von dem Wort <strong>Down</strong> oder <strong>Up</strong>. Zum Beispiel:</p>
      <pre>Send {b down}{b up}
Send {TAB down}{TAB up}
Send {Up down}  <em>; Dr&uuml;ckt die obere Pfeiltaste nach unten.</em>
Sleep 1000  <em>; H&auml;lt diese f&uuml;r eine Sekunde gedr&uuml;ckt.</em>
Send {Up up}  <em>; L&auml;sst die obere Pfeiltaste wieder los.</em></pre>
      <p>Falls eine Taste mit der oberen Methode gedr&uuml;ckt gehalten wird, beginnt sie nicht, sich automatisch zu wiederholen, wie sie es tun w&uuml;rde, wenn sie physisch gedr&uuml;ckt gehalten wird (Auto-Wiederholung ist n&auml;mlich ein Treiber/Hardware-Feature). Allerdings kann eine <a href="Loop.htm">Schleife</a> dazu verwendet werden, eine Auto-Wiederholung zu simulieren. Das folgende Beispiel sendet 20 Tabulator-Eingaben:</p>
      <pre>Loop 20
{
    Send {Tab down}  <em>; Auto-Wiederholung besteht aus fortlaufenden Down-Ereignissen (ohne Up-Ereignisse).</em>
    Sleep 30  <em>; Die Anzahl an Millisekunden zwischen den Tastatureingaben (oder verwendet <a href="SetKeyDelay.htm">SetKeyDelay</a>).</em>
}
Send {Tab up}  <em>; Taste loslassen.</em></pre>
      <p>Das Wort <em>DownTemp</em> kann auch verwendet werden. Dieses Wort bewirkt das gleiche wie <em>Down</em>, au&szlig;er bei Modifikatoren (STRG/UMSCHALT/ALT/WIN). In solchen F&auml;llen benachrichtigt <em>DownTemp</em> nachfolgende Send-Befehle, dass die Taste nicht dauerhaft gedr&uuml;ckt ist und losgelassen werden kann, sobald diese von einer Tastatureingabe aufgerufen wird. Zum Beispiel w&uuml;rde <code>Send {Control DownTemp}</code> und danach <code>Send a</code> ein normales "a" erzeugen, anstatt STRG+A.</p>
      <h2 id="Remarks">Allgemeine Bemerkungen</h2>
      <p>Es gibt keine bestimmten Einschr&auml;nkungen, welche Zeichen gesendet werden k&ouml;nnen. Falls ein Zeichen auf der aktuellen Tastaturbelegung nicht vorhanden ist, kann es durch Senden eines Unicode-Zeichenpackets oder einer <a href="#asc">ALT+nnnnn</a>-Kombination simuliert werden, abh&auml;ngig davon, welche Version von AutoHotkey verwendet wird. Unicode-Zeichen werden in den Unicode-Versionen von AutoHotkey direkt als Text unterst&uuml;tzt, bei allen anderen Versionen nur mithilfe der <a href="#sendu">{U+nnnn}-Schreibweise</a>.</p>
      <p><strong>BlockInput im Vergleich mit SendInput/SendPlay</strong>: Obwohl der <a href="BlockInput.htm">BlockInput</a>-Befehl dazu verwendet werden kann, jede physische Tastatureingabe vom Benutzer daran zu hindern, den k&uuml;nstlichen Eingabeverlauf zu unterbrechen, ist es oft besser, <a href="#SendInputDetail">SendInput</a> oder <a href="#SendPlayDetail">SendPlay</a> zu verwenden, sodass Tastatureingaben und Mausklicks nicht unterbrochen werden k&ouml;nnen. Das liegt daran, dass SendInput/Play im Gegensatz zu BlockInput die Benutzereingabe nicht beim Senden verwirft. Solche Tastatureingaben werden stattdessen zwischengespeichert und danach gesendet.</p>
      <p>Falls eine gro&szlig;e Anzahl an Tastatureingaben gesendet wird, kann ein <a href="../Scripts.htm#continuation">Fortsetzungsbereich</a> verwendet werden, um die Les- und Pflegbarkeit zu verbessern.</p>
      <p>Da das Betriebssystem die Simulation von STRG+ALT+ENTF nicht erlaubt, hat so etwas wie <code>Send ^!{Delete}</code> keine Wirkung.</p>
      <p><b>Send funktioniert m&ouml;glicherweise nicht</b> in Windows Vista oder h&ouml;her, wenn das aktive Fenster mit administrativen Rechten l&auml;uft, das Script jedoch nicht. Das h&auml;ngt damit zusammen, dass der Sicherheitsmechanismus "User Interface Privilege Isolation" (UIPI) aktiv ist.</p>
      <h2 id="SendInputDetail">SendInput <span class="ver">[v1.0.43+]</span></h2>
      <p>SendInput ist in der Regel die bevorzugte Methode, um Tastatureingaben und Mausklicks zu senden, weil sie bedeutend schneller und zuverl&auml;ssiger ist. In den meisten F&auml;llen wird SendInput nahezu sofort ausgef&uuml;hrt, selbst wenn lange Strings gesendet werden. Aufgrund dieser Schnelligkeit ist SendInput auch zuverl&auml;ssiger, weil die Chance geringer ist, dass ein anderes Fenster unerwartet erscheint und die Tastatureingaben abf&auml;ngt. Die Zuverl&auml;ssigkeit erh&ouml;ht sich nochmals durch die Tatsache, dass die Benutzereingaben w&auml;hrend eines SendInput-Befehls bis zum Schluss zwischengespeichert wird.</p>
      <p>Im Gegensatz zu den anderen Sendmethoden ist SendInput auf ca. 5000 Zeichen begrenzt (dieser Grenzwert variiert je nach Version des Betriebssystems und Performance-Einstellungen). Zeichen und Ereignisse &uuml;ber dem Limit werden nicht gesendet.</p>
      <p><strong>Hinweis:</strong> SendInput ignoriert SetKeyDelay, weil das Betriebssystem eine Verz&ouml;gerung in diesem Modus nicht unterst&uuml;tzt. Wenn SendInput allerdings wie unten beschrieben auf <a href="#SendEvent">SendEvent</a> wechselt, gilt <code><a href="SetKeyDelay.htm">SetKeyDelay</a> -1, 0</code> (es sei denn, SendEvent's SetKeyDelay ist <code>-1, -1</code>, in diesem Fall wird <code>-1, -1</code> verwendet). Falls SendInput auf <a href="#SendPlayDetail">SendPlay</a> wechselt, gilt das SetKeyDelay von SendPlay.</p>
      <p id="SendInputUnavail">Wenn ein Script, <em>das nicht</em> SendInput ausf&uuml;hrt, einen <a href="_InstallKeybdHook.htm">systemnahen Tastatur-Hook</a> installiert hat, wechselt SendInput automatisch auf <a href="#SendEvent">SendEvent</a> (oder auf <a href="#SendPlayDetail">SendPlay</a>, wenn <code><a href="SendMode.htm">SendMode, InputThenPlay</a></code> aktiv ist). Das liegt daran, dass ein externes Hook, falls vorhanden, alle Vorteile von SendInput deaktiviert, das hei&szlig;t, es wird schlechter als SendPlay und SendEvent. Da SendInput jedoch nicht in der Lage ist, einen systemnahen Hook vor v1.0.43 zu erkennen, erfolgt dieser Wechsel nicht, das dazu f&uuml;hrt, dass SendInput unzuverl&auml;ssiger als SendPlay/Event wird.</p>
      <p>Wenn SendInput Mausklicks mithilfe von z. B. <a href="#Click">{Click}</a> sendet und <code><a href="CoordMode.htm">CoordMode</a> Mouse, Relative</code> aktiv ist (die Standardeinstellung), wird sich jeder Klick auf das Fenster beziehen, welches zu Beginn von Send aktiv war. Wenn SendInput daher absichtlich ein anderes Fenster aktiviert (z. B. mit ALT+TAB), werden die Koordinaten der nachfolgenden Klicks innerhalb des gleichen Befehls falsch sein, weil diese sich weiterhin auf das alte anstatt auf das neue Fenster beziehen.</p>
      <p>Windows 95 (und NT4 vor SP3): SendInput wird nicht unterst&uuml;tzt und wechselt automatisch auf SendEvent (oder auf SendPlay, falls <code><a href="SendMode.htm">SendMode</a>, InputThenPlay</code> aktiv ist).</p>
      <h2 id="SendPlayDetail">SendPlay <span class="ver">[v1.0.43+]</span></h2>
      <p>Der gr&ouml;&szlig;te Vorteil von SendPlay ist dessen F&auml;higkeit, Tastatureingaben und Mausklicks bei einer breiteren Auswahl an Spielen "wiederzugeben". Zum Beispiel k&ouml;nnte ein bestimmtes Spiel nur <a href="../Hotstrings.htm#SendMode">Hotstrings</a> akzeptieren, wenn sie die <a href="../Hotstrings.htm#SendMode">SendPlay-Option</a> haben. Allerdings kann es sein, dass SendPlay &uuml;berhaupt nicht in Windows Vista oder h&ouml;her funktioniert, wenn die Benutzerkontensteuerung (UAC) aktiv ist, selbst wenn das Script als Administrator l&auml;uft. Das folgende Script erm&ouml;glicht eine &Uuml;bergangsl&ouml;sung f&uuml;r dieses Problem: <a href="http://www.autohotkey.com/forum/topic75595.html">http://www.autohotkey.com/forum/topic75595.html</a>.</p>
      <p>Von den drei Sendemethoden ist SendPlay am ungew&ouml;hnlichsten, weil dieser Modus an sich keine Tastatureingaben und Mausklicks simuliert. Stattdessen werden mehrere Ereignisse (Nachrichten) erstellt, die direkt in das aktive Fenster einflie&szlig;en (vergleichbar mit <a href="ControlSend.htm">ControlSend</a>, nur auf einem niedrigeren Niveau).</p>
      <p>Wie bei <a href="#SendInputDetail">SendInput</a> werden Tastatureingaben von SendPlay nicht mit den Benutzereingaben vermischt. Wenn der Benutzer bei einem SendPlay etwas schreibt, werden solche Tastatureingaben bis zum Schluss zwischengespeichert.</p>
      <p>Obwohl SendPlay deutlich langsamer ist als SendInput, ist es meist schneller als der traditionelle <a href="#SendEvent">SendEvent</a>-Modus (selbst wenn <a href="SetKeyDelay.htm">KeyDelay</a> auf -1 ist).</p>
      <p>SendPlay ist nicht in der Lage, System-Hotkeys auszul&ouml;sen, die die zwei Windows-Tasten (LWin und RWin) enthalten. Zum Beispiel kann SendPlay weder das Startmen&uuml; anzeigen noch WIN+R benutzen, um das Ausf&uuml;hren-Dialogfenster zu &ouml;ffnen.</p>
      <p>Die Windows-Tasten (LWin und RWin) werden automatisch bei einem SendPlay blockiert, wenn der <a href="_InstallKeybdHook.htm">Tastatur-Hook</a> installiert ist. Dadurch wird verhindert, dass das Startmen&uuml; angezeigt wird, wenn der Benutzer versehentlich eine Windows-Taste beim Senden dr&uuml;ckt. Alle anderen Tasten hingegen werden nicht blockiert, weil sie bei einem SendPlay vom Betriebssystem automatisch bis zum Schluss zwischenspeichert werden.</p>
      <p>SendPlay verwendet nicht die Standard-Einstellungen von SetKeyDelay und SetMouseDelay. Stattdessen gilt standardm&auml;&szlig;ig &uuml;berhaupt keine Verz&ouml;gerung, das wie folgt ge&auml;ndert werden kann:</p>
      <pre><a href="SetKeyDelay.htm">SetKeyDelay</a>, 0, 10, <strong>Play</strong>  <em>; Beachtet, dass sowohl 0 als auch -1 im SendPlay-Modus gleichwertig sind.</em>
<a href="SetMouseDelay.htm">SetMouseDelay</a>, 10, <strong>Play</strong></pre>
      <p>SendPlay ist nicht der Lage, Festell-, Num- oder Scroll-Tasten auszuschalten. Ebenso ist dieser Modus nicht in der Lage, den Status einer Taste zu &auml;ndern, wie von <a href="GetKeyState.htm">GetKeyState</a> gesehen, es sei denn, die Tastatureingaben werden an ein Fenster vom Script gesendet. Selbst dann k&ouml;nnen alle &Auml;nderungen an den linken/rechten Modifikatoren (z. B. RControl) nur &uuml;ber ihrem neutralen Gegenst&uuml;ck (z. B. Control) erkannt werden. Au&szlig;erdem gelten f&uuml;r SendPlay noch weitere Einschr&auml;nkungen, die auf der <a href="SendMode.htm#Play">SendMode-Seite</a> zu finden sind.</p>
      <p>Im Gegensatz zu <a href="#SendInputDetail">SendInput</a> und <a href="#SendEvent">SendEvent</a> kann SendPlay von einem Benutzer unterbrochen werden, sobald er STRG+ALT+ENTF oder STRG+ESC dr&uuml;ckt. In diesem Fall werden die restlichen Tastatureingaben nicht gesendet, aber das Script weiter ausgef&uuml;hrt, als ob SendPlay normal beendet wurde.</p>
      <p>Obwohl SendPlay LWin- und RWin-Ereignisse senden kann, werden sie direkt an das aktive Fenster gesendet, anstatt deren interne Betriebssystemfunktion durchzuf&uuml;hren. Als &Uuml;bergangsl&ouml;sung kann <a href="#SendEvent">SendEvent</a> verwendet werden. Zum Beispiel w&uuml;rde <code>SendEvent #r</code> das Ausf&uuml;hren-Dialogfenster des Startmen&uuml;s anzeigen.</p>
      <h2>Verwandte Befehle</h2>
      <p><a href="SendMode.htm">SendMode</a>, <a href="SetKeyDelay.htm">SetKeyDelay</a>, <a href="SetStoreCapslockMode.htm">SetStoreCapslockMode</a>, <a href="_EscapeChar.htm">Schutzzeichen (z. B. `%) </a>, <a href="ControlSend.htm">ControlSend</a>, <a href="BlockInput.htm">BlockInput</a>, <a href="../Hotstrings.htm">Hotstrings</a>, <a href="WinActivate.htm">WinActivate</a></p>
      <h2>Beispiele</h2>
      <pre class="NoIndent">Send Mit freundlichen Gr&uuml;&szlig;en,{enter}John Smith  <em>; Schreibt eine zweizeilige Signatur.</em>
Send !ds <em>; &Ouml;ffnet das Dateimen&uuml; und w&auml;hlt Speichern aus (ALT+D, gefolgt von S).</em>
Send {End}+{Left 4} <em>; Springt ans Textende und sendet viermal UMSCHALT+NACH-LINKS.</em>
SendInput <a href="#Raw">{Raw}</a>Eine Reihe unberarbeiteter Zeichen mit der schnellsten Methode gesendet (<a href="#SendInputDetail">SendInput</a>).</pre>
    </div>
  </section>
</div>
<script type="text/javascript">WriteFooter(1);</script>
</body>
</html>