<!DOCTYPE HTML>
<html>
<head>
<title>StatusBarGetText</title>
<meta name="keywords" content="Befehl, Fenster">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../navbar/NavScript.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <article>
      <h1>StatusBarGetText</h1>
      <p>Ermittelt den Text einer Standard-Statusleiste.</p>
      <pre class="Syntax">StatusBarGetText, AusgabeVar [, Bereichsnummer, Fenstertitel, Fenstertext, Titelausnahme, Textausnahme]</pre>
      <h3>Parameter</h3>
      <table class="info">
        <tr>
          <td>AusgabeVar</td>
          <td>Name der Variable, in der der ermittelte Text gespeichert werden soll. </td>
        </tr>
        <tr>
          <td>Bereichsnummer</td>
          <td>Die Nummer eines Leistenbereichs, dessen Text abgerufen wird (kann auch ein <a href="../Variables.htm#Expressions">Ausdruck</a> sein). Standardmäßig 1 - das ist für gewöhnlich der Textbereich, der am interessantesten ist.</td>
        </tr>
        <tr>
          <td style="width: 15%;">Fenstertitel</td>
          <td style="width: 85%;">Ein Fenstertitel oder sonstige Kriterien, die das Zielfenster ermitteln sollen. Siehe <a href="../misc/WinTitle.htm">Fenstertitel</a>.</td>
        </tr>
        <tr>
          <td>Fenstertext</td>
          <td>In diesem Parameter kann ein Teilstring angegeben werden, der in einem Textelement des Zielfensters vorkommt (werden mit Windows Spy angezeigt). Versteckte Textelemente werden auch erkannt, sofern <a href="DetectHiddenText.htm">DetectHiddenText</a> aktiv ist.</td>
        </tr>
        <tr>
          <td>Titelausnahme</td>
          <td>Ignoriert Fenster, deren Titel diesen Wert enthalten.</td>
        </tr>
        <tr>
          <td>Textausnahme</td>
          <td>Ignoriert Fenster, deren Textelemente diesen Wert enthalten.</td>
        </tr>
      </table>
      <h3>ErrorLevel</h3>
      <p><span class="ver">[v1.1.04+]</span> Dieser Befehl ist in der Lage, bei Misserfolg eine Ausnahme auszulösen. Für mehr Informationen, siehe <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
      <p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird bei Misserfolg auf 1 und bei Erfolg auf 0 gesetzt. Bei Problemen wird <em>AusgabeVar</em> zudem leer gemacht.</p>
      <h3>Bemerkungen</h3>
      <p>Dieser Befehl versucht, die erste <em>Standard</em>-Statusleiste eines Fensters zu lesen (typisches Steuerelement von Microsoft: msctls_statusbar32).&nbsp; Einige Programme verwenden ihre eigenen Statusleisten oder spezielle Versionen des Microsoft-Steuerelements, das dazu führt, dass der Text nicht abrufbar ist.</p>
      <p>Anstatt diesen Befehl in einer Schleife zu verwenden, ist es besser, <a href="StatusBarWait.htm">StatusBarWait</a> zu verwenden, weil es Optimierungen beinhaltet, die einen Overhead durch mehrfaches Aufrufen von StatusBarGetText verhindern.</p>
      <p>Fenstertitel und -texte unterscheiden zwischen Groß- und Kleinschreibung. Solange <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> deaktiviert ist, werden versteckte Fenster nicht wahrgenommen.</p>
      <h3>Verwandte Befehle</h3>
      <p><a href="StatusBarWait.htm">StatusBarWait</a>, <a href="WinGetTitle.htm">WinGetTitle</a>, <a href="WinGetText.htm">WinGetText</a>, <a href="ControlGetText.htm">ControlGetText</a></p>
      <h3>Beispiel</h3>
      <pre class="NoIndent">StatusBarGetText, AbgerufenerText, 1, Suchergebnisse
IfInString, AbgerufenerText, Gefunden, MsgBox, Suchergebnisse wurden gefunden.</pre>
    </article>
  </section>
</div>
<script type="text/javascript">WriteFooter(1);</script>
</body>
</html>
