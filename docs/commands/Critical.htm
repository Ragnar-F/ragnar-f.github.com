<!DOCTYPE HTML>
<html>
<head>
<title>Critical</title>
<meta name="keywords" content="Befehl, Ablaufsteuerung">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/ga.js" type="text/javascript"></script>
<!--[if lt IE 9]>
<script src="../static/html5.js"></script>
<![endif]-->
<script src="../navbar/NavScript.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <div id="article">
    <h1>Critical</h1>
    <p>Verhindert, dass der <a href="../misc/Threads.htm">aktuelle Thread</a> von anderen Threads unterbrochen wird.</p>
    <pre class="Syntax">Critical [, Off]
Critical 50 <em>; Siehe <a href="#Interval">Bemerkungen</a>. </em></pre>
    <p>Wenn der erste Parameter nicht vorhanden (oder "On") ist, wird der <a href="../misc/Threads.htm">aktuelle Thread</a> kritisch gemacht. Das hei&szlig;t, dass dieser Thread nicht von anderen Threads unterbrochen werden kann. Enth&auml;lt der erste Parameter das Wort Off (oder 0 seit v1.0.48), wird der aktuelle Thread sofort unterbrechbar, unabh&auml;ngig von den Einstellungen in <a href="Thread.htm">Thread Interrupt</a>.</p>
    <p>Im Gegensatz zu <a href="../misc/Threads.htm">hoch-priorisierten</a> Threads  werden Ereignisse w&auml;hrend eines kritischen Threads nicht verworfen. Dr&uuml;ckt der Benutzer beispielsweise einen <a href="../Hotkeys.htm">Hotkey</a>, w&auml;hrend der aktuelle Thread kritisch ist,  wird dieser Hotkey auf unbestimmte Zeit zwischengespeichert, bis der aktuelle Thread endet oder unkritisch gemacht wird. Dabei wird der Hotkey als neuer Thread ausgef&uuml;hrt.</p>
    <p>In Notf&auml;llen wird ein kritischer Thread unterbrochen. Notf&auml;lle sind:</p>
    <ul>
      <li><a href="OnExit.htm">OnExit</a>-Subroutine</li>
      <li><a href="OnMessage.htm">OnMessage()</a>-Funktion, die eine Nachrichtennummer kleiner als 0x312 &uuml;berwacht (oder ein <a href="RegisterCallback.htm">Callback</a>, der von so einer Nachricht ausgel&ouml;st wird)</li>
      <li><a href="RegisterCallback.htm">Callback</a>, der indirekt vom kritischen Thread selbst ausgel&ouml;st wird (z. B. mittels <a href="PostMessage.htm">SendMessage</a> oder <a href="DllCall.htm">DllCall</a>)</li>
    </ul>
    <p>Um diese Unterbrechungen zu vermeiden, sollten solche Funktionen vor&uuml;bergehend deaktiviert werden.</p>
    <p>Bei zwischengespeicherten Ereignissen, die darauf warten, neue Threads zu starten, f&uuml;hrt "Critical Off" nicht zu einer sofortigen Unterbrechung des aktuellen Threads. Stattdessen wird dieser Thread erst nach durchschnittlich 5 ms unterbrochen. Daher ist es zu mehr als 99,999 % wahrscheinlich, dass mindestens eine Zeile nach "Critical Off" ausgef&uuml;hrt wird, bevor eine Unterbrechung erfolgt. Unterbrechungen k&ouml;nnen sofort mithilfe einer Verz&ouml;gerung wie <a href="Sleep.htm"><code>Sleep -1</code></a> oder <a href="WinWait.htm">WinWait</a> erzwungen werden.</p>
    <p>Ein kritischer Thread wird unterbrechbar, sobald eine <a href="MsgBox.htm">MsgBox</a> oder ein anderes Dialogfenster angezeigt wird. Im Gegensatz zu <a href="Thread.htm">Thread Interrupt</a> wird der Thread allerdings wieder kritisch, wenn der Benutzer das Dialogfenster schlie&szlig;t.</p>
    <p>Siehe <a href="../Variables.htm#IsCritical">A_IsCritical</a> f&uuml;r Informationen, wie die aktuelle Einstellung von Critical gespeichert oder wiederhergestellt werden kann. Da Critical jedoch eine thread-spezifische Einstellung ist, wird der darunterliegende/fortgesetzte Thread (sofern vorhanden) automatisch unkritisch, wenn ein kritischer Thread endet. Folglich gibt es keinen Grund, "Critical Off" ans Ende eines Threads zu setzen.</p>
    <p>Solange Critical nicht im automatischen Ausf&uuml;hrungsbereich (oberster Teil des Scripts) verwendet wird, starten alle Threads unkritisch (obwohl die Einstellungen von <a href="Thread.htm">Thread Interrupt</a> noch gelten). Aktiviert der automatische Ausf&uuml;hrungsbereich hingegen Critical, wird jeder neu gestartete <a href="../misc/Threads.htm">Thread</a> (z. B. <a href="../Hotkeys.htm">Hotkey</a>, <a href="Menu.htm">benutzerdefinierter Men&uuml;punkt</a> oder <a href="SetTimer.htm">zeitlich festgelegte</a> Subroutine) von Beginn an kritisch sein.</p>
    <p>Der Befehl <a href="Thread.htm">Thread NoTimers</a> ist vergleichbar mit Critical, au&szlig;er dass dieser nur Unterbrechungen von <a href="SetTimer.htm">Timers</a> verhindern kann.</p>
    <p>Seit v1.0.47 f&uuml;hrt die Aktivierung von Critical dazu, dass <a href="SetBatchLines.htm"><code>SetBatchLines -1</code></a> f&uuml;r den <a href="../misc/Threads.htm">aktuellen Thread</a> wirksam wird.</p>
    <p id="Interval">Seit v1.0.47 f&uuml;hrt die Angabe einer positiven Zahl im ersten Parameter  (z. B. <code>Critical 30</code>) dazu, dass Critical aktiviert wird, sowie auch die &Uuml;berpr&uuml;fungsdauer in Milliskunden der internen Nachrichtenwarteschlange ge&auml;ndert wird. Falls nichts angegeben ist, werden die Nachrichten bei aktiviertem Critical alle 16 ms und bei deaktiviertem Critical alle 5 ms &uuml;berpr&uuml;ft. Die Erh&ouml;hung des Intervalls f&uuml;hrt auch dazu, dass der Empfang von Nachrichten/Ereignisse nach hinten verschoben wird, wodurch der <a href="../misc/Threads.htm">aktuelle Thread</a> mehr Zeit hat, zu enden. Das verringert die Wahrscheinlichkeit, dass bestimmte <a href="OnMessage.htm">OnMessage()</a>- und <a href="Gui.htm#DefaultWin">GUI-Ereignisse</a> aufgrund von "Thread wird bereits ausgef&uuml;hrt" verloren gehen. Wartende Befehle wie <a href="Sleep.htm">Sleep</a> und <a href="WinWait.htm">WinWait</a> werden Nachrichten unabh&auml;ngig dieser Einstellung &uuml;berpr&uuml;fen (als &Uuml;bergangsl&ouml;sung kann <code>DllCall("Sleep", UInt, 500)</code> verwendet werden). Hinweis: Ist der Nachrichten&uuml;berpr&uuml;fungsintervall zu hoch, k&ouml;nnte die Reaktionsf&auml;higkeit von verschiedenen Ereignissen reduziert werden (z. B. beim Neuzeichnen eines <a href="Gui.htm">GUI</a>-Fensters).</p>
    <h3>Verwandte Befehle</h3>
    <p><a href="Thread.htm">Thread (Befehl), </a><a href="../misc/Threads.htm">Threads</a>, <a href="_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a>, <a href="_MaxThreadsBuffer.htm">#MaxThreadsBuffer</a>, <a href="OnMessage.htm">OnMessage()</a>, <a href="RegisterCallback.htm">RegisterCallback()</a>, <a href="Hotkey.htm">Hotkey</a>, <a href="Menu.htm">Menu</a>, <a href="SetTimer.htm">SetTimer</a></p>
    <h3>Beispiel</h3>
    <pre class="NoIndent">#space::  <em>; Hotkey: Win+Leertaste</em>
Critical
ToolTip Es wird kein neuer Thread gestartet, solange dieser ToolTip nicht verschwindet.
Sleep 3000
ToolTip  <em>; ToolTip ausschalten.</em>
Return  <em>; Beendet den Thread. Jeder darunterliegende Thread ist laut Definition unkritisch.</em></pre>
  </div>
  </section>
</div>
<script type="text/javascript">WriteFooter(1);</script>
</body>
</html>