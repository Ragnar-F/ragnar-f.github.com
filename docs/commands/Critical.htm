<!DOCTYPE HTML>
<html>
<head>
<title>Critical</title>
<meta name="keywords" content="Befehl, Ablaufsteuerung">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/ga.js" type="text/javascript"></script>
<!--[if lt IE 9]>
<script src="../static/html5.js"></script>
<![endif]-->
<script src="../navbar/NavScript.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <article>
    <h1>Critical</h1>
    <p>Verhindert, dass der <a href="../misc/Threads.htm">aktuelle Thread</a> von anderen Threads unterbrochen wird.</p>
    <pre class="Syntax">Critical [, Off]
Critical 50 <em>; Siehe <a href="#Interval">Bemerkungen</a>. </em></pre>
    <p>Beim Weglassen des ersten Parameters (oder "On") wird der <a href="../misc/Threads.htm">aktuelle Thread</a> kritisch gemacht, d. h. das dieser Thread nicht von anderen Threads unterbrochen werden kann. Sobald jedoch der erste Parameter "Off" enth&auml;lt (oder eine 0 seit v1.0.48), wird der aktuelle Thread sofort unterbrochen, unabh&auml;ngig von den Einstellungen in "<a href="Thread.htm">Thread Interrupt</a>".</p>
    <p>Im Gegensatz zu Threads mit <a href="../misc/Threads.htm">hoher Priorit&auml;t</a> werden Ereignisse w&auml;hrend eines kritischen Threads nicht verworfen. Wenn der Benutzer beispielsweise einen <a href="../Hotkeys.htm">Hotkey</a> dr&uuml;ckt, w&auml;hrend der aktuelle Thread kritisch ist, dann wird dieser Hotkey auf unbestimmte Zeit zwischengespeichert, bis der aktuelle Thread endet oder unkritisch gemacht wird. Dabei wird der Hotkey als neuer Thread ausgef&uuml;hrt.</p>
    <p>In Notf&auml;llen wird ein kritischer Thread unterbrochen. Notf&auml;lle sind:</p>
    <ul>
      <li><a href="OnExit.htm">OnExit</a>-Subroutine</li>
      <li><a href="OnMessage.htm">OnMessage()</a>-Funktion, die eine Nachrichtennummer kleiner als 0x312 &uuml;berwacht (oder ein <a href="RegisterCallback.htm">Callback</a>, der von so einer Nachricht ausgel&ouml;st wird)</li>
      <li><a href="RegisterCallback.htm">Callback</a>, der indirekt vom kritischen Thread selbst ausgel&ouml;st wird (z. B. mittels <a href="PostMessage.htm">SendMessage</a> oder <a href="DllCall.htm">DllCall</a>)</li>
    </ul>
    <p>Um diese Unterbrechungen zu vermeiden, deaktiviert vor&uuml;bergehend solche Funktionen.</p>
    <p>Wenn zwischengespeicherte Ereignisse darauf warten, neue Threads zu starten, dann f&uuml;hrt "Critical Off" nicht zu einer sofortigen Unterbrechung des aktuellen Threads. Stattdessen wird dieser Thread erst nach durchschnittlich 5 ms unterbrochen. Daher ist es zu mehr als 99,999 % wahrscheinlich, dass mindestens eine Zeile nach "Critical Off" ausgef&uuml;hrt wird, bevor eine Unterbrechung erfolgt. Unterbrechungen k&ouml;nnen sofort mithilfe einer Verz&ouml;gerung wie <a href="Sleep.htm">Sleep -1</a> oder <a href="WinWait.htm">WinWait</a> erzwungen werden.</p>
    <p>Ein kritischer Thread wird unterbrochen, sobald eine <a href="MsgBox.htm">MsgBox</a> oder ein anderes Dialogfenster erscheint. Im Gegensatz zu <a href="Thread.htm">"Thread Interrupt"</a> wird der Thread allerdings wieder kritisch, wenn der Benutzer das Dialogfenster schlie&szlig;t.</p>
    <p>Siehe <a href="../Variables.htm#IsCritical">A_IsCritical</a> f&uuml;r Informationen, wie die aktuelle Einstellung von Critical gespeichert oder wiederhergestellt werden kann. Da Critical jedoch eine thread-spezifische Einstellung ist, wird der darunterliegende/fortgesetzte Thread (sofern vorhanden) automatisch unkritisch, wenn ein kritischer Thread endet. Folglich gibt es keinen Grund, "Critical Off" ans Ende eines Threads zusetzen.</p>
    <p>Wenn Critical nicht im automatischen Ausf&uuml;hrungsbereich (oberster Teil des Scripts) verwendet wird, dann starten alle Threads unkritisch (obwohl die Einstellungen von <a href="Thread.htm">"Thread Interrupt"</a> noch gilt). Wenn Critical hingegen im automatischen Ausf&uuml;hrungsbereich aktiviert wird, dann ist jeder neu gestartete <a href="../misc/Threads.htm">Thread</a> (z. B. <a href="../Hotkeys.htm">Hotkey</a>, <a href="Menu.htm">benutzerdefinierter Men&uuml;punkt</a> oder <a href="SetTimer.htm">zeitlich festgelegte</a> Subroutine) kritisch.</p>
    <p>Der Befehl "<a href="Thread.htm">Thread NoTimers</a>" ist mit Critical vergleichbar, jedoch mit der Ausnahme, dass nur Unterbrechungen von <a href="SetTimer.htm">Timers</a> verhindert werden.</p>
    <p>v1.0.47+: Sobald Critical aktiv ist, wird <a href="SetBatchLines.htm"><em>SetBatchLines -1</em></a> f&uuml;r den <a href="../misc/Threads.htm">aktuellen Thread</a> wirksam.</p>
    <p id="Interval">v1.0.47+: Wenn im ersten Parameter eine positive Zahl angegeben wird (z. B. <em>Critical 30</em>), dann wird Critical aktiviert sowie auch die Anzahl an Milliskunden zwischen den &Uuml;berpr&uuml;fungen der internen Nachrichtenwarteschlange ge&auml;ndert. Sobald dieser Parameter weggelassen wird, werden die Nachrichten bei aktiviertem Critical alle 16 ms und bei deaktiviertem Critical alle 5 ms &uuml;berpr&uuml;ft. Beim Erh&ouml;hen des Intervalls werden Nachrichten/Ereignisse nach hinten verschoben, damit mehr Zeit vorhanden ist, den <a href="../misc/Threads.htm">aktuellen Thread</a> zu beenden. Das verringert die Wahrscheinlichkeit, dass bestimmte <a href="OnMessage.htm">OnMessage()</a>- und <a href="Gui.htm#DefaultWin">GUI-Ereignisse</a> aufgrund von "Thread wird bereits ausgef&uuml;hrt" verloren gehen. Wartende Befehle wie <a href="Sleep.htm">Sleep</a> und <a href="WinWait.htm">WinWait</a> werden Nachrichten unabh&auml;ngig dieser Einstellung &uuml;berpr&uuml;fen (als &Uuml;bergangsl&ouml;sung kann <em>DllCall("Sleep", UInt, 500)</em> verwendet werden). Hinweis: Bei zu starker Erh&ouml;hung der Nachrichten&uuml;berpr&uuml;fung k&ouml;nnte die Reaktionsf&auml;higkeit von verschiedenen Ereignissen reduziert werden (z. B. beim Neuzeichnen eines <a href="Gui.htm">GUI</a>-Fensters).</p>
    <h3>Verwandte Befehle</h3>
    <p><a href="Thread.htm">Thread (Befehl), </a><a href="../misc/Threads.htm">Threads</a>, <a href="_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a>, <a href="_MaxThreadsBuffer.htm">#MaxThreadsBuffer</a>, <a href="OnMessage.htm">OnMessage()</a>, <a href="RegisterCallback.htm">RegisterCallback()</a>, <a href="Hotkey.htm">Hotkey</a>, <a href="Menu.htm">Menu</a>, <a href="SetTimer.htm">SetTimer</a></p>
    <h3>Beispiel</h3>
    <pre class="NoIndent">#space::  <em>; Hotkey: Win+Leertaste</em>
Critical
ToolTip Es wird kein neuer Thread gestartet, solange dieser ToolTip nicht verschwindet.
Sleep 3000
ToolTip  <em>; ToolTip ausschalten.</em>
Return  <em>; Beendet den Thread. Jeder darunterliegende Thread ist laut Definition unkritisch.</em></pre>
  </article>
  </section>
</div>
<script type="text/javascript">WriteFooter(1);</script>
</body>
</html>