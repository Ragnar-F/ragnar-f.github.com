<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>RegRead</title>
<meta name="keywords" content="Befehl, Registrierung">
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<link href="../css/default.css" rel="stylesheet" type="text/css">
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-28224374-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
</head>
<body>
<div id="wrapper">
<div id="content">
<script src="../navbar/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(1);</script>


<h1>RegRead</h1>

<p>Liest einen Wert aus der Registrierung.</p>

<pre class="Syntax">RegRead, Ausgabevariable, Hauptschl&uuml;ssel, Unterschl&uuml;ssel [, Wertname]</pre>
<h3>Parameter</h3>
<table class="info">
  <tr>
    <td>Ausgabevariable</td>
    <td>Der Name der Variable, in der der ermittelte Wert gespeichert wird. Wenn der Wert nicht abgerufen werden kann, dann wird die Variable leer gemacht und <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 1 gesetzt.</td>
  </tr>
  <tr>
    <td width="15%">Hauptschl&uuml;ssel</td>
    <td width="85%">Entweder HKEY_LOCAL_MACHINE (oder HKLM), HKEY_USERS (oder HKU), HKEY_CURRENT_USER (oder HKCU), HKEY_CLASSES_ROOT (oder HKCR) oder HKEY_CURRENT_CONFIG (oder HKCC). Um auf eine entfernt liegende Registrierung zuzugreifen, stellt den Computernamen und ein Doppelpunkt voran, wie in diesem Beispiel: \\workstation01:HKEY_LOCAL_MACHINE</td>
  </tr>
  <tr>
    <td>Unterschl&uuml;ssel</td>
    <td>Der Name des Unterschl&uuml;ssels (z. B. Software\SomeApplication).</td>
  </tr>
  <tr>
    <td>Wertname</td>
    <td>Der Name des Wertes, der ermittelt werden soll. Wenn weggelassen, dann wird der Standardwert vom <em>Unterschl&uuml;ssel</em> abgerufen, der als "(Standard)" im RegEdit angezeigt wird. Wenn kein Standardwert vorhanden ist (wenn RegEdit "Wert nicht festgelegt" anzeigt), dann wird die <em>Ausgabevariable</em> leer gemacht und ErrorLevel auf 1 gesetzt.</td>
  </tr>
</table>
<h3>ErrorLevel</h3>
<p><span class="ver">[v1.1.04+]</span> Dieser Befehl ist in der Lage, bei Misserfolg eine Ausnahme auszul&ouml;sen. F&uuml;r mehr Informationen, siehe <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird auf 1 gesetzt, wenn ein Problem auftrat (z. B. existiert kein Schl&uuml;ssel oder Wert), ansonsten 0.</p>
<p><a href="../Variables.htm#LastError">A_LastError</a> wird auf das Ergebnis der Systemfunktion GetLastError() gesetzt.</p>
<h3>Bemerkungen</h3>
<p>Zurzeit werden nur folgende Wert-Typen unterst&uuml;tzt: REG_SZ, REG_EXPAND_SZ, REG_MULTI_SZ, REG_DWORD und REG_BINARY.</p>
<p>REG_DWORD-Werte werden immer als positive Dezimalzahlen ausgedr&uuml;ckt.</p>
<p>Obwohl nicht mehr als 64 KB an Daten aus REG_BINARY-Werten gelesen werden k&ouml;nnen, sind die anderen Arten nicht begrenzt, ausgenommen unter Windows 95/98/ME, da sind alle Typen auf 64 KB begrenzt (die Registrierung von Win9x ist nicht in der Lage, gr&ouml;&szlig;ere Werte zu speichern).</p>
<p>Beim Lesen eines REG_BINARY-Schl&uuml;ssels wird ein String mit Hex-Zeichen ausgegeben. Zum Beispiel wird der REG_BINARY-Wert von 01,a9,ff,77 als der String 01A9FF77 gelesen.</p>
<p>Beim Lesen eines REG_MULTI_SZ-Schl&uuml;ssels endet jede Komponente mit einem LF-Zeichen (`n). Wenn keine Komponenten vorhanden sind, dann wird die <em>Ausgabevariable</em> leer gemacht. Siehe <a href="FileSelectFile.htm">FileSelectFile</a> f&uuml;r ein Beispiel, wie einzelne Komponenten aus der <em>Ausgabevariable</em> extrahieren werden. Hinweis: Windows 95 unterst&uuml;tzt nicht den REG_MULTI_SZ-Werttyp.</p>
<p>Um mehrere Schl&uuml;ssel und Werte einer Registrierung abzurufen und zu bearbeiten, verwendet eine <a href="LoopReg.htm">Registrierung-Schleife</a>.</p>
<p>F&uuml;r Details, wie auf die Registrierung eines entfernt liegenden Computers zugegriffen werden kann, siehe die Bemerkungen in <a href="LoopReg.htm">Registrierung-Schleife</a>.</p>
<p>Um Eintr&auml;ge in den 64-Bit-Bereichen der Registrierung mittels eines 32-Bit-Scripts zu lesen oder zu schreiben, siehe <a href="http://www.autohotkey.com/forum/topic39560.html">www.autohotkey.com/forum/topic39560.html</a>.</p>
<h3>Verwandte Befehle</h3>
<p><a href="RegDelete.htm">RegDelete</a>, <a href="RegWrite.htm">RegWrite</a>, <a href="LoopReg.htm">Registrierung-Schleife</a>, <a href="IniRead.htm">IniRead</a></p>
<h3>Beispiel</h3>
<pre class="NoIndent">RegRead, Ausgabevariable, HKEY_LOCAL_MACHINE, SOFTWARE\Microsoft\Windows\CurrentVersion, ProgramFilesDir
MsgBox, Programmdateien befinden sich in: %Ausgabevariable%</pre>
<p>&nbsp;</p>
<pre class="NoIndent"><em>; Das folgende Beispiel ermittelt den TYPE eines Registrierungswertes der (z. B. REG_SZ oder REG_DWORD).</em>
MsgBox % RegKeyType("HKCU", "Environment", "TEMP")
Return

RegKeyType(Hauptschl&uuml;ssel, Unterschl&uuml;ssel, Wertname)  <em>; Diese Funktion gibt den Typ des angegebenen Wertes zur&uuml;ck.</em>
{
    Loop, %Hauptschl&uuml;ssel%, %Unterschl&uuml;ssel%
        If (A_LoopRegName = Wertname)
            Return A_LoopRegType
    Return "Error"
}</pre>
</div>
</div>
</body>
</html>