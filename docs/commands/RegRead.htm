<!DOCTYPE HTML>
<html>
<head>
<title>RegRead</title>
<meta name="keywords" content="Befehl, Registrierung">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/jquery-1.11.0.min.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../navbar/NavScript.js" type="text/javascript"></script>
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <article>
      <h1>RegRead</h1>
      <p>Liest einen Wert aus der Registrierung.</p>
      <pre class="Syntax">RegRead, AusgabeVar, Hauptschlüssel, Unterschlüssel [, Wertname]</pre>
      <h3>Parameter</h3>
      <table class="info">
        <tr>
          <td>AusgabeVar</td>
          <td>Name der Variable, in der der ermittelte Wert gespeichert werden soll. Falls der Wert nicht abgerufen werden kann, wird die Variable leer gemacht und <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 1 gesetzt.</td>
        </tr>
        <tr>
          <td style="width: 15%;">Hauptschlüssel</td>
          <td style="width: 85%;">Muss entweder HKEY_LOCAL_MACHINE (HKLM), HKEY_USERS (HKU), HKEY_CURRENT_USER (HKCU), HKEY_CLASSES_ROOT (HKCR) oder HKEY_CURRENT_CONFIG (HKCC) sein. Für den Zugriff auf eine Remoteregistrierung muss der Computername und ein Doppelpunkt wie folgt vorangestellt werden: \\workstation01:HKEY_LOCAL_MACHINE</td>
        </tr>
        <tr>
          <td>Unterschlüssel</td>
          <td>Der Name des Unterschlüssels (z. B. Software\BeliebigeAnwendung).</td>
        </tr>
        <tr>
          <td>Wertname</td>
          <td>Der Name des zu ermittelnden Wertes. Ist dieser Parameter nicht vorhanden, wird der Standardwert von <em>Unterschlüssel</em> abgerufen. Dieser wird in RegEdit als "(Standard)" angezeigt. Wenn kein Standardwert vorhanden ist (d. h., wenn in RegEdit "Wert nicht festgelegt" anzeigt wird), wird <em>AusgabeVar</em> leer gemacht und ErrorLevel auf 1 gesetzt.</td>
        </tr>
      </table>
      <h3>ErrorLevel</h3>
      <p><span class="ver">[v1.1.04+]</span> Dieser Befehl ist in der Lage, bei Misserfolg eine Ausnahme auszulösen. Für mehr Informationen, siehe <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
      <p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird bei Misserfolg auf 1 (z. B. nicht vorhandener Schlüssel oder Wert) oder bei Erfolg auf 0 gesetzt.</p>
      <p><a href="../Variables.htm#LastError">A_LastError</a> wird auf das Ergebnis der Systemfunktion GetLastError() gesetzt.</p>
      <h3>Bemerkungen</h3>
      <p>Zurzeit werden nur folgende Wert-Typen unterstützt: REG_SZ, REG_EXPAND_SZ, REG_MULTI_SZ, REG_DWORD und REG_BINARY.</p>
      <p>REG_DWORD-Werte werden immer als positive Dezimalzahlen ausgedrückt.</p>
      <p>Das Ergebnis eines REG_BINARY-Schlüssels ist ein String mit Hex-Zeichen. Zum Beispiel wird der REG_BINARY-Wert 01,a9,ff,77 als String 01A9FF77 gelesen.</p>
      <p>Das Ergebnis eines REG_MULTI_SZ-Schlüssels besteht aus mehreren Komponenten, die jeweils mit einem Zeilenumbruchzeichen (`n) enden. Wenn keine Komponenten vorhanden sind, wird <em>AusgabeVar</em> leer gemacht. Siehe <a href="FileSelectFile.htm">FileSelectFile</a> für ein Beispiel, wie einzelne Komponenten aus <em>AusgabeVar</em> extrahieren werden können. Hinweis: Windows 95 unterstützt nicht den REG_MULTI_SZ-Werttyp.</p>
      <p>REG_BINARY-Werte größer als 64 KB können nur in v1.1.10.01 und höher gelesen werden.</p>
      <p>Mit der <a href="LoopReg.htm">Registrierungs-Schleife</a> können mehrere Registrierungsschlüssel und -werte abgerufen und bearbeitet werden.</p>
      <p>Bei den Bemerkungen zur <a href="LoopReg.htm">Registrierungs-Schleife</a> wird näher gebracht, wie man auf die Registrierung eines Remotecomputers zugreifen kann.</p>
      <p>Mit <a href="SetRegView.htm">SetRegView</a> können Einträge von den 64-Bit-Bereichen der Registrierung in einem 32-Bit-Script oder umgekehrt gelesen und geschrieben werden.</p>
      <h3>Verwandte Befehle</h3>
      <p><a href="RegDelete.htm">RegDelete</a>, <a href="RegWrite.htm">RegWrite</a>, <a href="LoopReg.htm">Registrierungs-Schleife</a>, <a href="SetRegView.htm">SetRegView</a>, <a href="IniRead.htm">IniRead</a></p>
      <h3>Beispiel</h3>
      <pre class="NoIndent">RegRead, AusgabeVar, HKEY_LOCAL_MACHINE, SOFTWARE\Microsoft\Windows\CurrentVersion, ProgramFilesDir
MsgBox, Programmdateien befinden sich in: %AusgabeVar%</pre>
      <p>&nbsp;</p>
      <pre class="NoIndent"><em>; Das folgende Beispiel ermittelt den TYP eines Registrierungswertes (z. B. REG_SZ oder REG_DWORD).</em>
MsgBox % RegSchlüsseltyp("HKCU", "Environment", "TEMP")
Return

RegSchlüsseltyp(Hauptschlüssel, Unterschlüssel, Wertname)  <em>; Diese Funktion gibt den Typ des angegebenen Wertes zurück.</em>
{
    Loop, %Hauptschlüssel%, %Unterschlüssel%
        If (A_LoopRegName = Wertname)
            Return A_LoopRegType
    Return "Fehler"
}</pre>
    </article>
  </section>
</div>
<script type="text/javascript">WriteFooter(1);</script>
</body>
</html>
