<!DOCTYPE HTML>
<html>
<head>
<title>SetFormat</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/jquery.js" type="text/javascript"></script>
<script src="../static/tree.jquery.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>SetFormat</h1>

<p>Bestimmt das Format von Integer- und und Fließkommazahlen, die durch mathematische Operationen erzeugt wurden.</p>

<pre class="Syntax">SetFormat, Zahlentyp, Format</pre>
<h3>Parameter</h3>
<dl>

  <dt>Zahlentyp</dt>
  <dd><p>Muss entweder IntegerFast, FloatFast, Integer oder Float sein (die zwei schnellen Modi benötigen v1.0.48+; siehe <a href="#Fast">Anmerkungen</a>).</p></dd>

  <dt>Format</dt>
  <dd><p>Wenn der <em>Zahlentyp</em> Integer oder IntegerFast ist, dann kann H oder HEX für hexadezimal, oder D für dezimal angegeben werden. Hexadezimalzahlen beginnen mit dem 0x-Präfix (z. B. 0xFF). <span class="ver">[AHK_L 42+]:</span> Mit <code>h</code> werden die Ziffern von A bis F bei hexadezimalen Integer-Zahlen in Kleinbuchstaben und mit <code>H</code> in Großbuchstaben umgewandelt.</p>
      <p><a name="sci" id="sci"></a>Wenn der <em>Zahlentyp</em> Float oder FloatFast ist, dann kann <code>Gesamtbreite<strong>.</strong>Dezimalstellen</code> angegeben werden (z. B. <code>0.6</code>). Seit v1.0.46.11 kann der Buchstabe "e" angefügt werden, um eine wissenschaftliche Schreibweise zu erzeugen, z.B. <code>0.6e</code> oder <code>0.6E</code> (wenn großgeschrieben, dann wird ein großgeschriebenes E in jeder Zahl erzeugt). Hinweis: In AutoHotkey 1.x muss die wissenschaftliche Schreibweise einen Dezimalpunkt enthalten, z. B. <code>1.0e1</code>, aber nicht <code>1e1</code>.</p>
      <p>Die <em>Gesamtbreite</em> ist normalerweise 0, um anzuzeigen, dass die Zahl nicht mit Nullen oder Leerzeichen aufgefüllt werden soll. Wenn ein höherer Wert verwendet wird, werden die Zahlen mit Leerzeichen oder Nullen aufgefüllt (siehe <a href="#Float">Bemerkungen</a>), um sie auf diese Breite zu setzen.</p>
    <p><em><a name="DecimalPlaces"></a>Dezimalstellen</em> ist die Anzahl der anzuzeigenden Dezimalstellen (Rundung erfolgt). Wenn leer oder 0, dann wird weder der Dezimalteil noch der Dezimalpunkt angezeigt, das heißt, Fließkomma-Ergebnisse werden als Integer-Zahlen und nicht als Fließkommazahlen angezeigt. Der Standardwert ist 6.</p>
    <p>Padding: Wenn die <em>Gesamtbreite</em> für das Auffüllen hoch genug ist, dann werden Leerzeichen zur linken Seite hinzugefügt, das heißt, jede Zahl wird rechtsbündig ausgerichtet. Mit einem Minuszeichen vor der <em>Gesamtbreite</em> wird die Zahl stattdessen linksbündig ausgerichtet. Mit einer 0 vor der <em>Gesamtbreite</em> (z. B. <code>06.2</code>) wird die Zahl mit Nullen anstelle von Leerzeichen aufgefüllt.</p></dd>

</dl>

<h3 id="Fast">Der Vergleich vom Fast- und Slow-Modus</h3>
Seit v1.0.48 kann IntegerFast anstelle von Integer und FloatFast anstelle von Float verwendet werden.
<ul>
<li><strong>Vorteile</strong>: Der schnelle Modus hilft den Variablen, Integer- und Fließkommazahlen zwischenzuspeichern, um numerisch-intensive Operationen wesentlich zu beschleunigen. Der langsame Modus hingegen zwingt alle numerischen Ergebnisse, sofort umgewandelt und als String gespeichert zu werden.</li>
<li><strong><a name="FastDisadv"></a>Nachteile</strong>: Wenn eine Zahl in eine Variable gespeichert wird, dann verzögert der schnelle Modus die Auswirkungen von SetFormat, bis das Script tatsächlich eine Text/String-Version dieser Variable benötigt (z. B. um eine <a href="MsgBox.htm">MsgBox</a> anzuzeigen). Da möglicherweise zurzeit ein anderes SetFormat aktiv ist (z. B. mehr oder weniger Dezimalstellen), kann dies zu unerwarteten Ergebnissen führen. Damit das aktuelle schnelle Format sofort wirksam wird, verwendet eine Operation wie <code>HexWert <strong>.=</strong> ""</code>, welche einen leeren String an der Zahl anfügen, die zurzeit in <em>HexWert</em> gespeichert ist.</li>
</ul>
<p>Wenn der langsame Modus "Integer" oder "Float" irgendwo im Script verwendet wird, selbst wenn diese Zeile mit SetFormat nie ausgeführt wird, dann wird jeweils das Zwischenspeichern von Integer- oder Fließkommazahlen beim Ausführen des Scripts deaktiviert.</p>
<h3 id="Float">Fließkomma-Format</h3>
<p>Seit v1.0.48 haben Fließkomma-Variablen eine Genauigkeit von 15 Stellen, es sei denn, <code>SetFormat Float</code> (der langsame Modus) ist irgendwo im Script vorhanden. In diesem Fall wird die Genauigkeit von Fließkommazahlen mit den <em><a href="#DecimalPlaces">Dezimalstellen</a></em> festgelegt (wie in den Versionen vor 1.0.48). Das heißt, sobald ein Fließkomma-Ergebnis in eine Variable gespeichert wird, geht die zusätzliche Genauigkeit verloren und kann nicht wieder verwendet werden, ohne dabei z. B. <code>SetFormat, Float, 0.15</code> nochmals zusetzen. Um den Verlust der Genauigkeit zu verhindern, vermeidet <code>SetFormat Float</code> irgendwo im Script oder verwendet stattdessen <a href="#Fast"><code>SetFormat FloatFast</code></a>.</p>
<p>Egal ob der langsame oder schnelle Modus aktiv ist - Fließkomma-Ergebnisse und Variablen werden um <em><a href="#DecimalPlaces">Dezimalstellen</a></em> Stellen abgerundet, sobald sie angezeigt oder in einem String umgewandelt werden (z. B. <a href="MsgBox.htm">MsgBox</a> oder <a href="FileAppend.htm">FileAppend</a>). Um die volle Präzision zu ermöglichen, verwendet z. B. <code>SetFormat, FloatFast, 0.15</code>.</p>
<p>Um eine Fließkommazahl in eine Integer-Zahl umzuwandeln, verwendet <code>Var := <a href="../Functions.htm#Round">Round</a>(Var)</code>, <code>Var := <a href="../Functions.htm#Floor">Floor</a>(Var)</code> oder <code>Var := <a href="../Functions.htm#Ceil">Ceil</a>(Var)</code>. Um eine Integer-Zahl in eine Fließkommazahl umzuwandeln, fügt 0.0 hinzu (z. B. <code>Var += 0.0</code>) oder verwendet so etwas wie <code>MeinFloat := <a href="../Functions.htm#Round">Round</a>(MeinInteger, 1)</code>.</p>
<p>Die integrierte Variable <strong>A_FormatFloat</strong> enthält das aktuelle Fließkomma-Format (z. B. <code>0.6</code>).</p>
<h3 id="Integer">Integer-Format</h3>
<p>Integer-Ergebnisse werden normalerweise dezimal angezeigt, nicht hexadezimal. Um auf hexadezimal zu wechseln, verwendet <code>SetFormat, IntegerFast, Hex</code>. Das kann auch verwendet werden, um eine Integer in eine hexadezimale Zahl umzuwandeln (oder umgekehrt), wie im Beispiel ganz am Ende dieser Seite angezeigt.</p>
<p>Literale Integer-Zahlen in einem Script können hexadezimal oder dezimal sein. Hexadezimale Integer-Zahlen beginnen mit dem 0x-Präfix (z. B. <code>0xA9</code>). Sie können überall dort eingesetzt werden, wo ein numerischer Wert erwartet wird. Zum Beispiel ist <code>Sleep 0xFF</code> gleichbedeutend mit <code>Sleep 255</code>, unabhängig vom aktuellen Integer-Format in SetFormat.</p>
<p>AutoHotkey unterstützt 64-Bit signed Integer-Zahlen von -9223372036854775808 (-0x8000000000000000) bis 9223372036854775807 (0x7FFFFFFFFFFFFFFF).</p>
<p>Die integrierte Variable <strong>A_FormatInteger</strong> enthält das aktuelle Integer-Format (H oder D).</p>
<h3>Allgemeine Bemerkungen</h3>
<p>Wenn SetFormat nicht im Script benutzt wird, dann verwenden Integer-Zahlen standardmäßig das Dezimalformat und Fließkommazahlen standardmäßig <code>0.6</code> (<code>Gesamtbreite.Dezimalstellen</code>). Jeder neu gestartete <a href="../misc/Threads.htm">Thread</a> (z. B. ein <a href="../Hotkeys.htm">Hotkey</a>, ein <a href="Menu.htm">benutzerdefinierter Menüpunkt</a> oder eine <a href="SetTimer.htm">zeitgesteuerte</a> Subroutine) beginnt mit der Standardeinstellung des Befehls. Die Standardwerte können jedoch geändert werden, wenn SetFormat im automatischen Ausführungsbereich verwendet wird (oberster Teil des Scripts).</p>
<p>Eine Zuweisung im alten Stil wie <code>x = %y%</code> lässt führende und nachfolgende Leerzeichen weg. Deshalb sollte <a href="AutoTrim.htm">AutoTrim</a> oder der <a href="SetExpression.htm">Doppelpunkt-Gleich-Operator</a> (z. B. <code>x := y</code>) verwendet werden.</p>
<p>Es kann mit "<a href="IfIs.htm">if var is number/integer/float</a>" ermittelt werden, ob eine Variable einen numerischen Wert enthält.</p>
<p>Um eine Integer ohne Fließkomma-Berechnung mit Nullen oder Leerzeichen aufzufüllen, befolgt dieses Beispiel:</p>
<pre>Variable := "          " . Variable     <em>; Das Zitat enthält 10 Leerzeichen.  Um mit Nullen aufzufüllen, ersetzt Leerzeichen mit Nullen.</em>
StringRight, Variable, Variable, 10  <em>; Damit wird die Zahl in der <i>Variable</i> mit Leerzeichen aufgefüllt, bis eine Länge von max. 10 Zeichen erreicht ist.</em>
Variable := SubStr("          " . Variable, -9)  <em>; Eine einzeilige Alternative für die oberen zwei Zeilen.</em></pre>
<h3>Siehe auch</h3>
<p><a href="SetExpression.htm">Ausdruckszuweisung (:=)</a>, <a href="EnvAdd.htm">EnvAdd</a>, <a href="EnvSub.htm">EnvSub</a>, <a href="EnvMult.htm">EnvMult</a>, <a href="EnvDiv.htm">EnvDiv</a>, <a href="AutoTrim.htm">AutoTrim</a>, <a href="IfIs.htm">if Var is Typ</a></p>
<h3>Beispiele</h3>
<pre class="NoIndent">Variable = 11.333333
SetFormat, float, 6.2
Variable -= 1  <em>; Setzt die Variable auf 10.33 mit einem Leerzeichen davor, wegen der Gesamtbreite von 6.</em>
SetFormat, float, 0.2
Variable += 1  <em>; Setzt die Variable auf 11.33 ohne Leerzeichen davor.</em>
SetFormat, float, 06.0
Variable += 0  <em>; Setzt die Variable auf 000011</em>

<em>; Wandelt dezimale Integer in hexadezimal um:</em>
SetFormat, IntegerFast, hex
Variable += 0  <em>; Setzt die Variable (die vorher 11 enthalten hat) auf 0xb.</em>
Variable <strong>.</strong>= ""  <em>; Wegen dem schnellen Modus notwendig.</em>
SetFormat, IntegerFast, d</pre>

</body>
</html>
