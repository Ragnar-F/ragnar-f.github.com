<!DOCTYPE HTML>
<html>
<head>
<title>GetKeyState</title>
<meta name="keywords" content="Befehl, Tastatur, Maus, Joystick">
<meta name="description" content="Verwendet GetKeyState in dieser freien Scriptsprache, um auf einfache Weise zu überprüfen, ob eine Taste gedrückt gehalten wird oder nicht.">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/jquery.js" type="text/javascript"></script>
<script src="../static/tree.jquery.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>
<h1>GetKeyState</h1>
<p>Überprüft, ob eine Maus-/Joystick- oder Tastaturtaste gehalten wird oder nicht. Ruft auch den Joystickstatus ab.</p>
<pre class="Syntax">GetKeyState, AusgabeVar, Tastenname [, Modus]
      KeyIsDown := <a href="../Functions.htm#GetKeyState">GetKeyState</a>("Tastenname" [, "Modus"])</pre>
<h3>Parameter</h3>
<table class="info">
  <tr>
    <td style="width: 15%;">AusgabeVar</td>
    <td style="width: 85%;">
    <p>Name der Variable, in der der Status der Taste gespeichert werden soll. D für Unten (Down) und U für Oben (Up) (aber die Funktion <a href="../Functions.htm#GetKeyState">GetKeyState()</a> übergibt Wahr (1) für Down und Falsch (0) für Up). Kann der Status der Taste nicht ermittelt werden, wird die Variable leer gemacht.</p>
    <p>Die nächsten 2 Methoden gelten nur für Joysticks:</p>
    <ul>
      <li>Bei einer Joystick-Achse wie JoyX enthält <em>AusgabeVar</em> eine Fließkommazahl zwischen 0 und 100, die Position des Joysticks im Bewegungsbereich der Achse in Prozent. Das Format der Zahl kann mittels <a href="SetFormat.htm">SetFormat</a> geändert werden. Mit dem <a href="../scripts/JoystickTest.htm">Test-Script</a> kann ein Joystick analysiert werden. </li>
      <li>Enthält <em>Tastenname</em> JoyPOV, liegt der ermittelte Wert zwischen 0 und 35900. Die folgenden ungefähren POV-Werte werden von den meisten Joysticks verwendet:
            <ul>
              <li>-1: keinen Winkel erkannt</li>
              <li>0: nach vorne gerichtet</li>
              <li>9000 (90 Grad): nach rechts gerichtet </li>
              <li>27000 (270 Grad): nach links gerichtet</li>
              <li>18000 (180 Grad): nach hinten gerichtet</li>
      </ul>
      </li>
    </ul>
    </td>
  </tr>
  <tr>
    <td>Tastenname</td>
    <td>
    <p>Ein einzelnes Zeichen der Tastatur oder ein Tastenname aus der <a href="../KeyList.htm">Tastenliste</a>, darunter auch Maus- und Joysticktasten (obwohl Maustasten in Windows 95/98/Me normalerweise nicht erkannt werden). Beispiele: B, 5, LWin, RControl, Alt, Enter, Escape, LButton, MButton, Joy1</p>
    <p>Alternativ kann auch ein eindeutiger virtueller Tastencode wie vkFF angegeben werden. Das ist nützlich, wenn im seltenen Fall die Taste keinen Namen besitzt. Der virtuelle Tastencode kann ermittelt werden, indem die Schritte im unteren Bereich der <a href="../KeyList.htm#SpecialKeys">Tastenliste</a> befolgt werden.</p>
    <p><b>Bekannte Einschränkung:</b> Diese Funktion kann nicht zwischen zwei Tasten unterscheiden, die den gleichen virtuellen Tastencode haben, wie z. B. Left und NumpadLeft.</p>
    </td>
  </tr>
  <tr>
    <td>Modus</td>
    <td>
    <p>Dieser Parameter wird ignoriert, wenn der Joystick-Status ermittelt wird.</p>
    <p>Ist dieser Parameter nicht vorhanden, wird automatisch der logische Tastenstatus ermittelt. Dieser Status macht dem Betriebssystem und aktivem Fenster glauben, dass die Taste gedrückt wurde, welches aber nicht unbedingt dem physischen Status entspricht.</p>
    <p>Alternativ kann einer der folgenden Buchstaben angegeben werden:</p>
    <p><strong>P</strong>: Ermittelt den physischen Status (z. B. wenn der Benutzer eine Taste gedrückt hält). In Windows 95/98/Me entspricht der physische Tastenstatus (<em>Modus</em> = P) fast immer dem logischen Status. In Windows NT/2000/XP oder höher entspricht der physische Status normalerweise erst dem logischen Status, wenn Tastatur- und/oder Maus-Hooks installiert sind, die dann genau widerspiegeln können, ob der Benutzer eine Taste gedrückt hält oder nicht (solange sie gedrückt gehalten wurde, während das Script lief). Mittels dem <a href="KeyHistory.htm">KeyHistory</a>-Befehl oder Menüpunkt kann die Installation eines Hooks festgestellt werden. Die Installation eines Hooks kann mit <a href="_InstallKeybdHook.htm">#InstallKeybdHook</a> und/oder <a href="_InstallMouseHook.htm">#InstallMouseHook</a> erzwungen werden.</p>
    <p><strong>T</strong>: Ermittelt den Umschaltstatus (nur für umschaltbare Tasten wie FESTSTELL, NUM, ROLLEN und EINFG gültig). Der ermittelte D-Wert bedeutet "An", während U "Aus" bedeutet (aber die Funktion <a href="../Functions.htm#GetKeyState">GetKeyState()</a> übergibt Wahr (1) für "An" und Falsch (0) für "Aus").</p>
    <p>Der Umschaltstatus der EINFG-Taste kann wahrscheinlich nur in Windows 2000/XP oder höher ermittelt werden.</p>
    <p>In Windows 9x ist das Abrufen des Umschaltstatus weniger zuverlässig. Nachdem beispielsweise die Taste unmittelbar gedrückt wurde, kann der neue Status erst nach dem Anzeigen eines Script-Fensters wie <a href="MsgBox.htm">MsgBox</a> korrekt ermittelt werden.</p>
    </td>
  </tr>
</table>
<h3>Bemerkungen</h3>
<p>Zum Warten auf einen neuen Tastenstatus ist normalerweise der Befehl <a href="KeyWait.htm">KeyWait</a> besser geeignet, als eine Schleife mit GetKeyState.</p>
<p>Betriebssysteme mit ungewöhnlichen Tastaturtreibern können die Aktualisierung eines Tastenstatus verlangsamen, besonders bei umschaltbaren Tasten (z. B. FESTSTELL-Taste). Ein Script, das den Status solch einer Taste sofort überprüft, sollte mit einem <a href="Sleep.htm">Sleep</a>-Befehl verwenden werden, damit das Betriebssystem genug Zeit hat, den Tastenstatus zu aktualisieren.</p>
<p>Beispiele für die Verwendung mit GetKeyState und einem Joystick, siehe <a href="../misc/RemapJoystick.htm">Joystick-Neubelegung</a> und <a href="../scripts/JoystickMouse.htm">Joystick-To-Mouse</a>.</p>
<h3>Verwandte Befehle</h3>
<p><a href="../Functions.htm#GetKeyState">GetKeyState()</a>, <a href="KeyWait.htm">KeyWait</a>, <a href="../KeyList.htm">Tastenliste</a>, <a href="../misc/RemapJoystick.htm">Joystick-Neubelegung</a>, <a href="KeyHistory.htm">KeyHistory</a>, <a href="_InstallKeybdHook.htm">#InstallKeybdHook</a>, <a href="_InstallMouseHook.htm">#InstallMouseHook</a></p>
<h3>Beispiele</h3>
<pre class="NoIndent"><em>; Einfache Beispiele:</em>
GetKeyState, Status, RButton  <em>; Rechte Maustaste.</em>
GetKeyState, Status, Joy2  <em>; Die zweite Taste des ersten Joysticks.</em>

GetKeyState, Status, Shift
If Status = D
    MsgBox Mindestens eine Umschalttaste wird gedrückt gehalten.
Else
    MsgBox Keine Umschalttaste wird gedrückt gehalten.

GetKeyState, Status, CapsLock, T <em>;  D, wenn FESTSTELL-Taste AN ist, ansonsten U für AUS.</em>
Status := GetKeyState("Capslock", "T")  <em>; Wahr, wenn FESTSTELL-Taste AN ist, ansonsten Falsch für AUS.</em>

<em>; Neubelegungsbeispiel (dient nur zur Veranschaulichung,
; die interne <a href="../misc/Remap.htm">Neubelegungsfunktion</a> ist leichter zu handhaben):
; Beim folgenden Hotkey wird die Maustaste gedrückt halten, während NumpadAdd
; gedrückt gehalten wird (NumpadAdd wird zu einer Maustaste). Diese Methode
; kann zur Wiederholung einer Aktion benutzt werden, während der Benutzer eine Taste gedrückt hält:</em>
*NumpadAdd::
MouseClick, left,,, 1, 0, D  <em>; Hält die linke Maustaste gedrückt.</em>
Loop
{
    Sleep, 10
    GetKeyState, Status, NumpadAdd, P
    If Status = U  <em>; Schleife verlassen, da die Taste losgelassen worden ist.</em>
        break
    <em>; ... andere mögliche Aktionen, die wiederholt werden können.</em>
}
MouseClick, left,,, 1, 0, U  <em>; Lässt die Maustaste los.</em>
Return

<em>; Beispiel: Macht eine Joystick-Taste von der Achsenpostion des Joysticks abhängig.</em>
joy2::
GetKeyState, joyx, JoyX
If joyx &gt; 75
    MsgBox Aktion #1 (Taste gedrückt, während Joystick nach rechts bewegt wurde).
Else If joyx &lt; 25
    MsgBox Aktion #2 (Taste gedrückt, während Joystick nach links bewegt wurde).
Else
    MsgBox Aktion #3 (Taste gedrückt, während Joystick horizontal zentriert wurde).
Return

<em>; Siehe <a href="../misc/RemapJoystick.htm">Joystick-Neubelegung</a> und <a href="../scripts/JoystickMouse.htm">Joystick-To-Mouse</a> für weitere Beispiele.</em></pre>
</body>
</html>
