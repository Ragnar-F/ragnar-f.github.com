<!DOCTYPE HTML>
<html>
<head>
<title>IfWinExist / IfWinNotExist / WinExist</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/jquery.js" type="text/javascript"></script>
<script src="../static/tree.jquery.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>IfWinExist / IfWinNotExist / WinExist</h1>

<p>Überprüft, ob ein übereinstimmendes Fenster vorhanden ist. <em>WinExist()</em> gibt die <a href="WinGet.htm">eindeutige ID (HWND)</a> des ersten übereinstimmenden Fensters zurück.</p>

<pre class="Syntax">IfWinExist [, Fenstertitel, Fenstertext, Titelausnahme, Textausnahme]
IfWinNotExist [, Fenstertitel, Fenstertext, Titelausnahme, Textausnahme]
<a href="WinGet.htm">EindeutigeID</a> := WinExist("Fenstertitel", "Fenstertext", "Titelausnahme", "Textausnahme")</pre>
<h3>Parameter</h3>
<dl>

  <dt>EindeutigeID</dt>
  <dd><p><a href="WinGet.htm">Eindeutige ID (HWND)</a> (hexadezimaler Integer) des ersten Fensters, das mit den angegebenen Kriterien übereinstimmt.</p></dd>

  <dt>Fenstertitel</dt>
  <dd><p>Ein Fenstertitel oder sonstige Kriterien, die das Zielfenster ermitteln sollen. Siehe <a href="../misc/WinTitle.htm">Fenstertitel</a>.</p></dd>

  <dt>Fenstertext</dt>
  <dd><p>In diesem Parameter kann ein Teilstring angegeben werden, der in einem Textelement des Zielfensters vorkommt (abrufbar mit Windows Spy). Versteckte Textelemente werden auch erkannt, sofern <a href="DetectHiddenText.htm">DetectHiddenText</a> aktiv ist.</p></dd>

  <dt>Titelausnahme</dt>
  <dd><p>Ignoriert Fenster, deren Titel diesen Wert enthalten. Hinweis: Aufgrund der Abwärtskompatibilität interpretieren <em>IfWinExist</em> und <em>IfWinNotExist</em> diesen Parameter als Befehl, falls er exakt mit dem Namen eines Befehls übereinstimmt. Mit der <em>WinExist()</em>-Funktion dieses Problem umgangen werden.</p></dd>

  <dt>Textausnahme</dt>
  <dd><p>Ignoriert Fenster, deren Textelemente diesen Wert enthalten.</p></dd>

</dl>

<h3>Bemerkungen</h3>
<p>Sobald alle Parameter weggelassen werden, wird das <a href="../misc/WinTitle.htm#LastFoundWindow">zuletzt gefundene Fenster</a> überprüft, ob es noch vorhanden ist (oder bei <i>IfWinNotExist</i> nicht vorhanden ist).</p>
<p>Wenn einer der Befehle feststellt, dass ein geeignetes Fenster vorhanden ist, wird das <a href="../misc/WinTitle.htm#LastFoundWindow">zuletzt gefundene Fenster</a> auf dieses Fenster aktualisiert. Wenn <em>IfWinExist</em> als "wahr" oder <em>IfWinNotExist</em> als "falsch" gewertet wird, wird das <a href="../misc/WinTitle.htm#LastFoundWindow">zuletzt gefundene Fenster</a> aktualisiert.</p>
<p>Die Funktion <i>WinExist()</i> gibt die <a href="WinGet.htm">eindeutige ID (HWND)</a> des ersten übereinstimmenden Fensters zurück (0, wenn nicht). Da alle Zahlen außer 0 als "wahr" angesehen werden, ist die Anweisung <code>if WinExist("Fenstertitel")</code> immer wahr, sobald der <em>Fenstertitel</em> vorhanden ist.</p>
<p>Um das HWND eines Steuerelements abzurufen (zur Verwendung mit <a href="PostMessage.htm">Post/SendMessage</a> oder <a href="DllCall.htm">DllCall</a>), benutzt <a href="ControlGet.htm#Hwnd">ControlGet Hwnd</a> oder <a href="MouseGetPos.htm">MouseGetPos</a>.</p>
<p><a href="SetWinDelay.htm">SetWinDelay</a> hat keinen Einfluss auf <i>IfWinExist</i>/<a href="WinActive.htm">IfWinActive</a>.</p>
<p>Fenstertitel und -texte unterscheiden zwischen Groß- und Kleinschreibung. Solange <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> deaktiviert ist, werden versteckte Fenster nicht wahrgenommen.</p>

<h3>Siehe auch</h3>
<p><a href="WinActive.htm">IfWinActive</a>, <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>, <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a>, <a href="../misc/WinTitle.htm#LastFoundWindow">Zuletzt Gefundenes Fenster</a>, <a href="Process.htm">Process</a>, <a href="WinActivate.htm">WinActivate</a>, <a href="WinWaitActive.htm">WinWaitActive</a>, <a href="WinWait.htm">WinWait</a>, <a href="WinWaitClose.htm">WinWaitClose</a>, <a href="_IfWinActive.htm">#IfWinActive/Exist</a></p>
<h3>Beispiele</h3>
<pre class="NoIndent"><em>; Beispiel 1</em>
IfWinExist, Unbenannt - Editor
{
    WinActivate  <em>; Verwendet das oben gefundene Fenster.</em>
    WinMaximize  <em>; wie oben</em>
    Send, Das ist ein Text.{Enter}
    return
}

<em>; Beispiel 2</em>
IfWinNotExist, Rechner
    return
else
{
    WinActivate  <em>; Das obere "IfWinNotExist" setzt das zuletzt gefundene Fenster für uns.</em>
    WinMove, 40, 40  <em>; Zur neuen Position verschieben.</em>
    return
}

<em>; Beispiel 3</em>
if WinExist("ahk_class Notepad") or WinExist("ahk_class" . ClassName)
    WinActivate  <em>; Verwendet das <a href="../misc/WinTitle.htm#LastFoundWindow">zuletzt gefundene Fenster</a>.</em>

MsgBox % "Die ID des aktiven Fensters ist " . WinExist("A")

<em>; Beispiel 4: Das gleiche wie IfWinNotExist, Rechner</em>
If !WinExist("Rechner")
    return</pre>
	
</body>
</html>
