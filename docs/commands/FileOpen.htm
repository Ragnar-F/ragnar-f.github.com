<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>FileOpen</title>
<meta name="keywords" content="Befehl, Funktion, Datei">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<link href="../css/default.css" rel="stylesheet" type="text/css">
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-28224374-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
</head>
<body>
<script src="../navbar/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(1);</script>


<h1>FileOpen <span class="ver">[AHK_L 42+]</span></h1>

<p>&Ouml;ffnet eine Datei.</p>
<pre class="Syntax">Datei := FileOpen(Dateiname, Flags [, Kodierung])</pre>

<h3>Parameter</h3>
<table class="info">
  <tbody>
<tr>
<td width="15%">Dateiname</td>
<td width="85%">Der Name der zu &ouml;ffnenden Datei, die sich im <a href="../Variables.htm#WorkingDir">A_WorkingDir</a>-Verzeichnis befindet, solange kein absoluter Pfad angegeben ist.</td></tr>
  <tr>
<td>Flags</td>
<td>Seit <span class="ver">[AHK_L 54]</span> entweder ein String mit Zeichen f&uuml;r den gew&uuml;nschten Zugriffsmodus, gefolgt von anderen Optionen (optional getrennt durch Leerzeichen und Tabulatoren); Oder seit <span class="ver">[AHK_L 42]</span> eine Kombination (Summe) von numerischen Flags. Unterst&uuml;tzte Werte werden in der folgenden Tabelle beschrieben.</td></tr>
  <tr>
<td>Kodierung</td>
<td>Der zu verwendende Zeichensatz f&uuml;r die Textverarbeitung, solange die Datei keine UTF-8- oder UTF-16-<a href="http://en.wikipedia.org/wiki/Byte_order_mark">Bytereihenfolge-Markierung</a> enth&auml;lt.<br> Falls weggelassen, wird der aktuelle Wert von <a href="../Variables.htm#FileEncoding">A_FileEncoding</a> verwendet.</td></tr>
</tbody></table>
<h3>Flags</h3>

<table class="info">
  <tbody>
<tr><th style="width: 4em;"><br></th><th style="width: 4em;"><br></th><th style="text-align: left;">Zugriffsmodi (schlie&szlig;en sich gegenseitig aus)</th></tr>
  <tr>
<td class="fopt">r</td>
<td class="fnum">0</td>
<td><i>Lesen:</i> Schl&auml;gt fehl, falls die Datei noch nicht vorhanden ist.</td></tr>
  <tr>
<td class="fopt">w</td>
<td class="fnum">1</td>
<td><i>Schreiben:</i> Erstellt eine neue Datei oder <b style="color: red;">&uuml;berschreibt die vorhandene Datei.</b></td></tr>
  <tr>
<td class="fopt">a</td>
<td class="fnum">2</td>
<td><i>Anf&uuml;gen:</i> Erstellt eine neue Datei, falls die Datei noch nicht vorhanden ist, ansonsten wird der Datei-Pointer ans Ende der Datei gesetzt.</td></tr>
  <tr>
<td class="fopt">rw</td>
<td class="fnum">3</td>
<td><i>Lesen/Schreiben:</i> Erstellt eine neue Datei, falls die Datei noch nicht vorhanden ist.</td></tr>
  <tr>
<td class="fopt">h</td>
<td><br></td>
<td>Bewirkt, dass <i>Dateiname</i> ein Datei-Handle ist, der in ein Objekt eingebunden werden kann. Freigabemodus-Flags werden ignoriert. Das Datei-Handle wird <b>nicht</b> automatisch geschlossen, wenn das Datei-Objekt gel&ouml;scht wird oder das Aufrufen von <a href="../objects/File.htm#Close">Close</a> keine Wirkung hat. Beachtet, dass <a href="../objects/File.htm#Seek">Seek</a>, <a href="../objects/File.htm#Tell">Tell</a> und <a href="../objects/File.htm#Length">Length</a> nicht verwendet werden sollten, wenn <i>Dateiname</i> ein Handle f&uuml;r ein nicht-suchendes Device wie Pipe- oder Kommunikation-Device ist.</td></tr>
  <tr><th><br></th><th><br></th><th style="text-align: left;">Freigabemodus-Flags</th></tr>
  <tr>
<td class="fopt" style="white-space: nowrap;">-rwd</td>
<td><br></td>
<td>Sperrt die Datei f&uuml;r Lese-, Schreib- und/oder L&ouml;schzugriff. Es sind beliebige Kombinationen mit <code>r</code>, <code>w</code> und <code>d</code> m&ouml;glich. Die Angabe von <code>-</code> ist das Gleiche wie <code>-rwd</code>. Falls weggelassen, wird jeder Zugriff freigegeben.</td></tr>
  <tr>
<td><br></td>
<td class="fnum">0</td>
<td>Bei numerischen <i>Flags</i> bewirken fehlende Freigabemodus-Flags, dass die Datei gesperrt wird.</td></tr>
  <tr>
<td><br></td>
<td class="fnum">0x100</td>
<td><i>Lesezugriff</i> freigeben.</td></tr>
  <tr>
<td><br></td>
<td class="fnum">0x200</td>
<td><i>Schreibzugriff</i> freigeben.</td></tr>
  <tr>
<td><br></td>
<td class="fnum">0x400</td>
<td><i>L&ouml;schzugriff</i> freigeben.</td></tr>
  <tr><th><br></th><th><br></th><th style="text-align: left;">Zeilenumbruchsoptionen (EOL)</th></tr>
  <tr>
<td class="fopt"><code>`n</code></td>
<td class="fnum">4</td>
<td>Ersetzt beim Schreiben <code>`r`n</code> mit <code>`n</code>&nbsp; und beim Lesen <code>`n</code> mit <code>`r`n</code>.</td></tr>
  <tr>
<td class="fopt"><code>`r</code></td>
<td class="fnum">8</td>
<td>Ersetzt beim Schreiben das alleinstehende <code>`r</code> mit <code>`n</code>.</td></tr>
</tbody></table>

<h3>R&uuml;ckgabewert</h3>
<p>Wenn die Datei erfolgreich ge&ouml;ffnet wurde, ist der R&uuml;ckgabewert ein <a href="../objects/File.htm">Datei-Objekt</a>.</p>
<p>Wenn die Funktion fehlschl&auml;gt, wird der R&uuml;ckgabewert eine 0 sein und <a href="../Variables.htm#LastError">A_LastError</a> seit <span class="ver">[AHK_L 54]</span> einen Fehlercode enthalten.</p>
<p>Verwendet <code>If Datei</code> oder <code>IsObject(Datei)</code>, um zu &uuml;berpr&uuml;fen, ob die Funktion erfolgreich war.

</p>
<h3>Bemerkungen</h3>
<p>Beim Erstellen einer UTF-8- oder UTF-16-Datei wird eine Bytereihenfolge-Markierung (BOM) in die Datei geschrieben, <b>es sei denn</b>, die <i>Kodierung</i> (oder <a href="FileEncoding.htm">A_FileEncoding</a>, falls <i>Kodierung</i> weggelassen wird) enth&auml;lt "UTF-8-RAW" oder "UTF-16-RAW".</p>

<h3>Verwandte Befehle</h3>
<p><a href="FileEncoding.htm">FileEncoding</a>, <a href="../objects/File.htm">Datei-Objekt</a>, <a href="FileRead.htm">FileRead</a></p>

<h3>Beispiele</h3>
<pre class="NoIndent"><a name="writeread"></a><em>; Beispiel: Dieses Script schreibt etwas Text in eine Datei und liest diesen zur&uuml;ck in den Speicher.
; Es stellt die gleiche Funktionalit&auml;t wie dieses <a href="DllCall.htm#file">DllCall-Beispiel</a> bereit.</em>

FileSelectFile, Dateiname, S16,, Neue Datei erstellen:
if (Dateiname = "")
	return
Datei := <a href="FileOpen.htm">FileOpen</a>(Dateiname, "w")
if !IsObject(Datei)
{
	MsgBox Kann "%Dateiname%" nicht zum Schreiben &ouml;ffnen.
	return
}
TestString := "Das ist ein Teststring.`r`n"  <em>; Wenn eine Datei auf diese Weise geschrieben wird, sollte `r`n anstelle von `n verwendet werden, um eine neue Zeile zu beginnen.</em>
Datei.Write(TestString)
Datei.Close()

<em>; Nachdem die Datei geschrieben wurde, soll deren Inhalt zur&uuml;ck in den Speicher gelesen werden.</em>
Datei := FileOpen(Dateiname, "r-d") <em>; Datei lesen ("r"), Alle Zugriffe au&szlig;er L&ouml;schen freigeben ("-d")</em>
if !IsObject(Datei)
{
	MsgBox Kann "%Dateiname%" nicht zum Lesen &ouml;ffnen.
	return
}
ZuLesendeZeichen := StrLen(TestString)
TestString := Datei.Read(ZuLesendeZeichen)
Datei.Close()
MsgBox Der folgende String wurde aus der Datei gelesen: %TestString%
</pre>

<pre class="NoIndent"><em>; &Ouml;ffnet das Script im Schreibschutzmodus und lie&szlig;t die erste Zeile:</em>
Datei := FileOpen(A_ScriptFullPath, "r")
MsgBox % Datei.ReadLine()

<em>; &Ouml;ffnet ein Konsolenfenster f&uuml;r diese Demonstration:</em>
DllCall("AllocConsole")
<em>; &Ouml;ffnet die stdin/stdout-Handles der Anwendung mit der Option "`n".</em>
stdin  := FileOpen(DllCall("GetStdHandle", "int", -10, "ptr"), "h `n")
stdout := FileOpen(DllCall("GetStdHandle", "int", -11, "ptr"), "h `n")
stdout.Write("Bitte Anfrage eingeben.`n\&gt; ")
stdout.Read(0) <em>; Schreibpuffer leeren.</em>
Abfrage := RTrim(stdin.ReadLine(), "`n")
stdout.WriteLine("Die Anfrage war '" Abfrage "'. Einen sch&ouml;nen Tag noch.")
stdout.Read(0) <em>; Schreibpuffer leeren.</em>
Sleep 5000
</pre>
</body></html>