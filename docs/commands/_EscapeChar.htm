<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>#EscapeChar (und die Erl&auml;uterung zu Schutzsequenzen)</title>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<link href="../css/default.css" rel="stylesheet" type="text/css">
</head>
<body>

<h1>#EscapeChar (und die Erl&auml;uterung zu Schutzsequenzen)</h1>

<p>Ver&auml;ndert das Schutzzeichen des Scripts (z. B. Akzent zu Backslash).</p>

<pre class="Syntax">#EscapeChar NeuesZeichen</pre>
<h3>Parameter</h3>
<table class="info">
  <tr>
    <td width="15%">NeuesZeichen</td>
    <td width="85%">Verwendet ein beliebiges Zeichen.</td>
  </tr>
</table>
<h3>Bemerkungen</h3>
<p>Das Schutzzeichen wird verwendet, um das nachfolgende Zeichen anders als normal zu interpretieren.</p>
<p>Das Standard-Schutzzeichen in AutoIt-v2-Scripts (.aut) ist ein Backslash (\). F&uuml;r alle anderen Dateiendungen, einschlie&szlig;lich aller kompilierten Scripts, ist das Schutzzeichen standardm&auml;&szlig;ig ein Akzent/Gravis (`).</p>
<h3>Schutzsequenzen (wenn ein Akzent das Schutzzeichen ist)</h3>
<table class="info">
  <tr>
    <th>Das eingeben </th>
    <th>um das zu erhalten </th>
  </tr>
  <tr>
    <td width="15%">`,</td>
    <td width="85%">, (direkt vorhandenes Komma). <strong>Hinweis:</strong> Kommas, die im letzten Parameter eines Befehls angegeben werden, m&uuml;ssen nicht mit einem Schutzzeichen vorangestellt werden, weil das Programm diese Kommas direkt behandelt. Das Gleiche gilt auch f&uuml;r alle Parameter der <a href="MsgBox.htm">MsgBox</a>, weil es eine intelligente Komma-Handhabung hat.</td>
  </tr>
  <tr>
    <td>`%</td>
    <td>% (direkt vorhandenes Prozentzeichen)</td>
  </tr>
  <tr>
    <td>``</td>
    <td>` (direkt vorhandener Akzent; d. h. zwei aufeinanderfolgende Schutzzeichen ergeben ein direkt vorhandenes Zeichen)</td>
  </tr>
  <tr>
    <td>`;</td>
    <td>&nbsp;; (direkt vorhandenes Semikolon). <strong>Hinweis:</strong> <u>nur</u> erforderlich, wenn ein Semikolon ein Leerzeichen oder Tabulator davor hat. Wenn dies nicht geschieht, dann wird es korrekt erkannt, ohne mit einem Schutzzeichen vorangestellt.</td>
  </tr>
  <tr>
    <td>`::</td>
    <td>:: (direkt vorhandenes Doppelpunkt-Paar). Ab v1.0.40 ist es nicht l&auml;nger notwendig, diese mit einem Schutzzeichen voranzustellen.</td>
  </tr>
  <tr>
    <td>`n</td>
    <td>Neuzeile (Zeilenvorschub/LF)</td>
  </tr>
  <tr>
    <td>`r</td>
    <td>Zeilenumschaltung (CR)</td>
  </tr>
  <tr>
    <td>`b</td>
    <td>R&uuml;cktaste</td>
  </tr>
  <tr>
    <td>`t</td>
    <td>Tabulator (die mehr verwendete horizontale Variante)</td>
  </tr>
  <tr>
    <td>`v</td>
    <td> vertikaler Tabulator - entspricht dem ASCII-Wert 11. Kann auch in einigen Anwendungen mit Steuerung+K offenbart werden.</td>
  </tr>
  <tr>
    <td>`a</td>
    <td>Alarm (Glocke) - entspricht dem ASCII-Wert 7. Kann auch in einigen Anwendungen mit Steuerung+G offenbart werden.</td>
  </tr>
  <tr>
    <td>`f</td>
    <td>Seitenvorschub - entspricht dem ASCII-Wert 12. Kann auch in einigen Anwendungen mit Steuerung+L offenbart werden.</td>
  </tr>
  <tr>
    <td>Send</td>
    <td>Wenn <a href="Send.htm">Send-Befehle</a> oder <a href="../Hotstrings.htm">Hotstrings</a> in ihrem Standardmodus verwendet werden (nicht raw), dann haben Zeichen wie {}^!+# eine besondere Bedeutung. Umschlie&szlig;t sie deshalb mit Klammern, damit sie direkt verwendet werden k&ouml;nnen. Zum Beispiel: Send {<strong>^</strong>}{<strong>!</strong>}{<strong>{</strong>}</td>
  </tr>
  <tr>
    <td>""</td>
    <td>Innerhalb eines <a href="../Variables.htm#Expressions">Ausdrucks</a> mit einem direkt vorhandener String kann ein direkt vorhandenes Anf&uuml;hrungszeichen erzeugt werden, wenn zwei aufeinanderfolgende Anf&uuml;hrungszeichen verwendet werden. Zum Beispiel: Var := "Die Farbe ""Rot"" wurde gefunden."</td>
  </tr>
</table>
<h3>Verwandte Befehle</h3>
<p><a name="DerefChar"></a><a name="Delimiter"></a>Die folgenden selten verwendeten Anweisungen existieren auch:</p>
<pre>#DerefChar #  <em>; Ver&auml;ndert das Standardzeichen %.</em>
#Delimiter /  <em>; Ver&auml;ndert das Standardzeichen Komma.</em></pre>
<h3>Beispiel</h3>
<pre class="NoIndent">#EscapeChar \  <em>; Ver&auml;ndert den Akzent (`) zu einem Backslash.</em></pre>

</body>
</html>
