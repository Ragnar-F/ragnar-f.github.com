<!DOCTYPE HTML>
<html>
<head>
<title>Finally</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/jquery.js" type="text/javascript"></script>
<script src="../static/tree.jquery.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>Finally <span class="ver">[v1.1.14+]</span></h1>

<p>Stellt sicher, dass immer, wenn eine <a href="Try.htm">Try</a>-Anweisung erfolgt, eine oder mehrere Anweisungen (Befehle oder Ausdrücke) ausgeführt werden.</p>

<pre class="Syntax">Finally <i>Anweisung</i></pre>
<pre class="Syntax" style="line-height: 100%">Finally
{
    <i>Anweisungen</i>
}</pre>
<h3>Bemerkungen</h3>
<p>Jedes <em>Finally</em> muss mit einer <a href="Try.htm">Try</a>- oder <a href="Catch.htm">Catch</a>-Anweisung darüber verbunden werden. Ein <em>Finally</em> bezieht sich immer auf die nächste noch nicht beanspruchte <em>Try</em>-Anweisung darüber, sofern dieses Verhalten nicht mit einem <a href="Block.htm">Block</a> geändert wurde.</p>
<p>Wenn eine <em>Finally</em>-Anweisung an eine <em>Try</em>-Anweisung ohne <em>Catch</em>-Block angefügt wurde, wird die Ausnahme nicht vom Letzteren absorbiert. Zudem wird das Auslösen der Ausnahmen nach dem Ausführen der <em>Finally</em>-Anweisung fortgesetzt.</p>
<p>Es ist nicht erlaubt, mit <em>Goto</em>/<em>Break</em>/<em>Continue</em> eine <em>Finally</em>-Anweisung zu verlassen, weil sie sonst das Auslösen der Ausnahmen abbrechen würden (allerdings können sie verwendet werden, solange die Ausführung innerhalb des Blocks bleibt). Dieser Fehler wird erkannt, während das Script geladen wird (und während das Script läuft, für dynamische <em>Goto</em>-Anweisungen).</p>
<p>Je nach Bedarf kann der "<a href="Block.htm#otb">One True Brace Style</a>" bei der <em>Finally</em>-Anweisung angewendet werden. Zum Beispiel:</p>
<pre>try <strong>{</strong>
    ...
<strong>}</strong> finally <strong>{</strong>
    ...
<strong>}</strong>

try <strong>{</strong>
    ...
<strong>}</strong> catch e <strong>{</strong>
    ...
<strong>}</strong> finally <strong>{</strong>
    ...
<strong>}</strong></pre>
<h3>Siehe auch</h3>
<p><a href="Try.htm">Try</a>, <a href="Catch.htm">Catch</a>, <a href="Throw.htm">Throw</a>, <a href="Block.htm">Blöcke</a></p>
<h3 id="Examples">Beispiele</h3>
<pre class="NoIndent">try
{
    ToolTip, Bearbeite ...
    Beispiel1()
}
catch e
{
    <em>; Um mehr über das Objekt zu erfahren, das in e enthalten ist, siehe <a href="Catch.htm">Catch</a>.</em>
    MsgBox, 16,, % "Ausnahme ausgelöst!`n`nWas: " e.what "`nDatei: " e.file
        . "`nZeile: " e.line "`nNachricht: " e.message "`nZusatz: " e.extra
}
finally
{
    ToolTip <em>; Versteckt das ToolTip</em>
}

MsgBox, Fertig!

<em>; Diese Funktion hat einen Finally-Block, der als Aufräumcode fungiert.</em>
Beispiel1()
{
    try
        Beispiel2()
    finally
        MsgBox, Dies wird immer ausgeführt, unabhängig von Ausnahmen
}

<em>; Diese Funktion wird fehlschlagen, wenn die Minuten ungerade sind.</em>
Beispiel2()
{
    if Mod(A_Min, 2)
        throw Exception("Test-Ausnahme")
    MsgBox, Beispiel2 ist nicht fehlgeschlagen
}</pre>

</body>
</html>
