<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>WinGet</title>
<meta name="keywords" content="Befehl, Fenster">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<link href="../css/default.css" rel="stylesheet" type="text/css">
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-28224374-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
</head>
<body>
<div id="wrapper">
<div id="content">
<script src="../navbar/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(1);</script>


<h1>WinGet</h1>

<p>Ermittelt die eindeutige ID, den Prozessnamen oder eine Liste mit Steuerelementen des angegebenen Fensters. Es kann auch eine Liste mit Fenstern abgerufen werden, die den angegebenen Kriterien entsprechen.</p>

<pre class="Syntax">WinGet, Ausgabevariable [, Befehl, Fenstertitel, Fenstertext, Titelausnahme, Textausnahme]</pre>
<h3>Parameter</h3>
<table class="info">
  <tbody>
<tr>
    <td width="15%">Ausgabevariable</td>
    <td width="85%">Der Name der Variable, in der der R&uuml;ckgabewert vom <em>Befehl</em> gespeichert wird.</td>
  </tr>
  <tr>
    <td>Befehl</td>
    <td>Siehe untere Liste.
    </td>
  </tr>
  <tr>
    <td>Fenstertitel</td>
    <td>Der Titel oder Teiltitel des Fensters (das &Uuml;bereinstimmungsverhalten wird mit <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a> bestimmt). Wenn dieser und die anderen 3 Fensterparameter weggelassen werden, wird das <a href="../LastFoundWindow.htm">zuletzt gefundene Fenster</a> verwendet. Sobald dieser den Buchstaben A enth&auml;lt und die anderen 3 Fensterparameter weggelassen werden, wird das aktive Fenster verwendet. Bei Verwendung einer Fensterklasse muss ahk_class ExakterKlassenname angegeben werden (wird von Windows Spy angezeigt). Bei Verwendung einer Prozess-Kennung (PID) muss ahk_pid %VariableMitPID% angegeben werden. Bei Verwendung einer <a href="#ID">eindeutigen ID-Nummer</a> eines Fensters muss ahk_id %VariableMitID% angegeben werden. Die Suche kann durch Angabe <a href="../LastFoundWindow.htm#multi">mehrerer Kriterien</a> eingeschr&auml;nkt werden. Zum Beispiel: <em>Eigene Datei.txt ahk_pid %VarMitPID%</em></td>
  </tr>
  <tr>
    <td>Fenstertext</td>
    <td>In diesem Parameter kann ein Teilstring angegeben werden, der in einem Textelement des Zielfensters vorkommt (werden mit Windows Spy angezeigt). Versteckte Textelemente werden auch erkannt, sofern <a href="DetectHiddenText.htm">DetectHiddenText</a> aktiv ist.</td>
  </tr>
  <tr>
    <td>Titelausnahme</td>
    <td>Ignoriert Fenster, deren Titel diesen Wert enthalten.</td>
  </tr>
  <tr>
    <td>Textausnahme</td>
    <td>Ignoriert Fenster, deren Textelemente diesen Wert enthalten.</td>
  </tr>
</tbody></table>

<p>Der <em>Befehl</em> ist die ausf&uuml;hrende Operation, die standardm&auml;&szlig;ig <em>ID</em> ist, wenn er leer ist. Ansonsten ist es ein folgendes Wort:</p>
<p><strong><a name="ID"></a>ID</strong>: Ermittelt die eindeutige ID-Nummer (HWND/Handle) eines Fensters. Wenn kein passendes Fenster gefunden wird, dann wird die <em>Ausgabevariable</em> leer gemacht. Die Funktionen <a href="IfWinExist.htm">WinExist()</a> und <a href="IfWinActive.htm">WinActive()</a> k&ouml;nnen auch verwendet werden, um die ID eines Fensters abzurufen. WinExist("A") ist zum Beispiel ein schneller Weg, die ID des aktiven Fensters zu bekommen. Um das HWND eines Steuerelements abzurufen (zur Verwendung mit <a href="PostMessage.htm">Post/SendMessage</a> oder <a href="DllCall.htm">DllCall</a>), benutzt <a href="ControlGet.htm#Hwnd">ControlGet Hwnd</a> oder <a href="MouseGetPos.htm">MouseGetPos</a>.</p>
<p><strong>IDLast</strong>: Wie oben, nur mit der Ausnahme, dass die ID des letzten/untersten Fensters abgerufen wird, falls mehr als eine &Uuml;bereinstimmung vorhanden ist. Wenn nur eine &Uuml;bereinstimmung vorhanden ist, dann verh&auml;lt sie sich wie bei <em>ID</em>. Dieses Konzept ist mit <a href="WinActivateBottom.htm">WinActivateBottom</a> vergleichbar.</p>
<p><strong>PID</strong>: Ermittelt die <a href="Process.htm">Prozess-ID (PID)</a> eines Fensters.</p>
<p id="ProcessName"><strong>ProcessName</strong>: Ermittelt den Namen des Prozesses (z. B. notepad.exe), der ein Fenster besitzt. Wenn keine passenden Fenster gefunden werden, dann wird die <em>Ausgabevariable</em> leer gemacht.</p>
<p id="ProcessPath"><strong>ProcessPath</strong> <span class="ver">[v1.1.01+]</span>: Vergleichbar mit <em>ProcessName</em>, jedoch wird der vollst&auml;ndige Pfad und Name des Prozesses abgerufen, nicht nur der Name.</p>
<p><strong>Count</strong>: Ermittelt die Anzahl an vorhandenen Fenstern, die mit dem <em>Fenstertitel</em>, <em>Fenstertext</em>, der <em>Titelausnahme</em> und <em>Textausnahme</em> &uuml;bereinstimmen (0, wenn keins). Um alle Fenster im Betriebssystem zu z&auml;hlen, lasst alle vier Titel-/Text-Parameter weg. Solange <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> deaktiviert ist, werden versteckte Fenster nicht wahrgenommen.</p>
<p><strong><a name="List"></a>List</strong>: Ermittelt die eindeutigen ID-Nummern aller vorhandenen Fenster, die mit dem <em>Fenstertitel</em>, <em>Fenstertext</em>, der <em>Titelausnahme</em> und <em>Textausnahme</em> &uuml;bereinstimmen (um alle Fenster im Betriebssystem zu ermitteln, lasst alle vier Titel-/Text-Parameter weg). Jede ID-Nummer wird in einem <a href="../misc/Arrays.htm">Array-Element</a> gespeichert, dessen Name mit dem Namen der <em>Ausgabevariable</em> beginnt, w&auml;hrend die <em>Ausgabevariable</em> selbst die Anzahl an ermittelten Elementen enth&auml;lt (0, wenn keine). Wenn zum Beispiel die <em>Ausgabevariable</em> EigenerArray ist und zwei passende Fenster entdeckt werden, dann enth&auml;lt EigenerArray1 die ID des ersten Fensters, EigenerArray2 die ID des zweiten Fensters und EigenerArray selbst die Zahl 2. Fenster werden von oben nach unten abgerufen (je nachdem, wie sie auf dem Desktop gestapelt sind). Solange <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> deaktiviert ist, werden versteckte Fenster nicht wahrgenommen. Um einen Array innerhalb einer <a href="../Functions.htm">Funktion</a> zu erstellen, das global anstatt lokal ist, <a href="../Functions.htm#Global">deklariert</a> EigenerArray als globale Variable, bevor dieser Befehl verwendet wird (das Gegenteil davon gilt f&uuml;r <a href="../Functions.htm#AssumeGlobal">global-angenommene</a> Funktionen).</p>
<p><strong>MinMax</strong>: Ermittelt den minimierten/maximierten Zustand eines Fensters. Die <em>Ausgabevariable</em> wird leer gemacht, wenn kein passendes Fenster vorhanden ist, ansonsten wird sie eine folgende Zahl gesetzt:<br> -1: Das Fenster ist minimiert (<a href="WinRestore.htm">WinRestore</a> kann die Minimierung aufheben). <br> 1: Das Fenster ist maximiert (<a href="WinRestore.htm">WinRestore</a> kann die Maximierung aufheben).<br> 0: Das Fenster ist weder minimiert noch maximiert.</p>
<p><strong><a name="ControlList"></a>ControlList</strong>: Ermittelt die Namen aller Steuerelemente in einem Fenster. Falls weder ein &uuml;bereinstimmendes Fenster noch Steuerelemente vorhanden sind, dann wird die <em>Ausgabevariable</em> leer gemacht. Ansonsten besteht jeder Steuerelementname aus dem Klassennamen unmittelbar gefolgt von der Sequenznummer (ClassNN), wie vom Windows Spy angezeigt.</p>
<p>Jedes Element, au&szlig;er dem Letzten, endet mit einem LF-Zeichen (`n). Um bestimmte Steuerelementnamen nacheinander zu untersuchen, verwendet eine <a href="LoopParse.htm">Parsing-Schleife</a>, wie im Beispiel-Abschnitt unten angezeigt.</p>
<p>Steuerelemente werden nach ihrer Z-Reihenfolge sortiert, die im Prinzip identisch zur Reihenfolge der TAB-Navigation ist, wenn das Fenster so etwas unterst&uuml;tzt.</p>
<p>Das Steuerelement, welches sich unter dem Mauszeiger befindet, kann mit <a href="MouseGetPos.htm">MouseGetPos</a> abgerufen werden.</p>
<p><strong>ControlListHwnd</strong> <span class="ver">[v1.0.43.06+]:</span> Wie oben, nur mit der Ausnahme, dass anstelle von ClassNN das <a href="ControlGet.htm#Hwnd">Fenster-Handle (HWND)</a> abgerufen wird.</p>
<p><strong>Transparent</strong>: Ermittelt den Grad der Transparenz eines Fensters (siehe <a href="WinSet.htm">WinSet</a>, wie die Transparenz gesetzt werden kann). Die <em>Ausgabevariable</em> wird leer gemacht, wenn ...: 1) das Betriebssystem &auml;lter als Windows XP ist, 2) keine passenden Fenster gefunden werden, 3) das Fenster nicht transparent ist; oder 4) andere Bedingungen auftreten (durch das Verhalten vom Betriebssystem), wenn z. B. das Fenster minimiert, wiederhergestellt und/oder skaliert wird, nachdem es transparent gemacht wurde. Ansonsten wird eine Zahl zwischen 0 und 255 gespeichert, wobei 0 durchsichtig und 255 undurchsichtig ist. Zum Beispiel:</p>
<pre>MouseGetPos,,, MausFenster
WinGet, Transparent, Transparent, ahk_id %MausFenster%  <em>; Die Transparenz eines Fensters unter dem Mauszeiger.</em></pre>
<p><strong>TransColor</strong>: Ermittelt die Farbe, die in einem Fenster transparent ist (siehe <a href="WinSet.htm#TransColor">WinSet</a>, wie die Transparenz gesetzt werden kann). Die <em>Ausgabevariable</em> wird leer gemacht, wenn ...: 1) das Betriebssystem &auml;lter als Windows XP ist, 2) keine passenden Fenster gefunden werden, 3) das Fenster keine transparente Farbe hat; oder 4) andere Bedingungen auftreten (durch das Verhalten vom Betriebssystem), wenn z. B. das Fenster minimiert, wiederhergestellt und/oder skaliert wird, nachdem es transparent gemacht wurde. Ansonsten wird eine 6-stellige hexadezimale RGB-Farbe gespeichert (z. B. 0x00CC99). Zum Beispiel:</p>
<pre>MouseGetPos,,, MausFenster
WinGet, TransFarbe, TransColor, ahk_id %MausFenster%  <em>; Die Transparenzfarbe eines Fensters unter dem Mauszeiger.</em></pre>
<p><strong>Style</strong> oder <strong>ExStyle</strong>: Ermittelt eine 8-stellige Hexadezimalzahl, die dem Style oder Extended Style eines Fensters entspricht. Wenn keine passenden Fenster gefunden werden, dann wird die <em>Ausgabevariable</em> leer gemacht. Das folgende Beispiel ermittelt, ob ein Fenster den WS_DISABLED-Style hat:</p>
<pre>WinGet, Style, Style, Eigener Fenstertitel
If (Style &amp; 0x8000000)  <em>; 0x8000000 ist WS_DISABLED.</em>
  ... das Fenster ist deaktiviert, weitere Ma&szlig;nahmen durchf&uuml;hren ...</pre>
<p>Das n&auml;chste Beispiel ermittelt, ob ein Fenster den WS_EX_TOPMOST-Style hat (immer im Vordergund):</p>
<pre>WinGet, ExStyle, ExStyle, Eigener Fenstertitel
If (ExStyle &amp; 0x8)  <em>; 0x8 ist WS_EX_TOPMOST.</em>
  ... das Fenster ist immer im Vordergrund, weitere Ma&szlig;nahmen durchf&uuml;hren ...</pre>
<p>Die <a href="../misc/Styles.htm">Style-Tabelle</a> beinhaltet eine Auflistung von einigen Styles.</p>
<h3>Bemerkungen</h3>
<p>Die ID-Nummer eines Fensters ist nur w&auml;hrend der Laufzeit g&uuml;ltig. Das hei&szlig;t, wenn eine Anwendung neu gestartet wird, erhalten alle Fenster neue ID-Nummern.</p>
<p>Alle abgerufenen ID-Nummern sind numerisch (ohne den Pr&auml;fix "ahk_id") und werden im hexadezimalen Format abgespeichert, unabh&auml;ngig von der Einstellung im <a href="SetFormat.htm">SetFormat</a>.</p>
<p>Die ID des Fensters, das sich unter dem Mauszeiger befindet, kann mit <a href="MouseGetPos.htm">MouseGetPos</a> abgerufen werden.</p>
<p>Obwohl die ID-Nummern zurzeit 32-Bit unsigned Integer sind, k&ouml;nnen sie in zuk&uuml;nftigen Versionen zu 64-Bit werden. Daher ist es unsicher, numerische Operationen durchzuf&uuml;hren (z. B. Addition dieser Werte), weil solche Operationen voraussetzen, dass die Eingabestrings als signed anstelle von unsigned Integer aufteilbar sind.</p>
<p>Fenstertitel und -texte sind von der Gro&szlig;- und Kleinschreibung abh&auml;ngig. Solange <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> deaktiviert ist, werden versteckte Fenster nicht wahrgenommen.</p>
<h3>Verwandte Befehle</h3>
<p><a href="WinGetClass.htm">WinGetClass</a>, <a href="Process.htm">Process</a>, <a href="WinGetTitle.htm">WinGetTitle</a>, <a href="MouseGetPos.htm">MouseGetPos</a>, <a href="ControlGet.htm">ControlGet</a>, <a href="ControlFocus.htm">ControlFocus</a>, <a href="GroupAdd.htm">GroupAdd</a></p>
<h3>Beispiele</h3>
<pre class="NoIndent"><em>; Beispiel #1: Maximiert das aktive Fenster und meldet die eindeutige ID:</em>
WinGet, AktivID, ID, A
WinMaximize, ahk_id %AktivID%
MsgBox, Die ID des aktiven Fensters ist "%AktivID%".

<em>; Beispiel #2: Besucht alle Fenster im Betriebssystem und zeigt deren Infos:</em>
WinGet, id, list,,, Program Manager
Loop, %id%
{
    diese_ID := id%A_Index%
    WinActivate, ahk_id %diese_ID%
    WinGetClass, diese_Klasse, ahk_id %diese_ID%
    WinGetTitle, dieser_Titel, ahk_id %diese_ID%
    MsgBox, 4, , Alle Fenster besuchen`n%a_index% von %id%`nahk_id %diese_ID%`nahk_class %diese_Klasse%`n%dieser_Titel%`n`nWeiter?
    IfMsgBox, NO, break
}

<em>; Beispiel #3: Extrahiert bestimmte Steuerelementnamen aus einer Steuerelementliste:</em>
WinGet, Steuerelementliste, ControlList, A
Loop, Parse, Steuerelementliste, `n
{
    MsgBox, 4,, Steuerelement #%a_index% ist "%A_LoopField%". Weiter?
    IfMsgBox, No
        break
}

<em>; Beispiel #4: Zeigt die Steuerelementliste des aktiven Fensters in Echtzeit an:</em>
#Persistent
SetTimer, AktivesFensterBeobachten, 200
Return
AktivesFensterBeobachten:
WinGet, Steuerelementliste, ControlList, A
ToolTip, %Steuerelementliste%
Return</pre>

</div>
</div>
</body></html>