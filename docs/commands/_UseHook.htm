<!DOCTYPE HTML>
<html>
<head>
<title>#UseHook</title>
<meta name="keywords" content="Befehl, Direktive, Hotkey">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/ga.js" type="text/javascript"></script>
<!--[if lt IE 9]>
<script src="../static/html5.js"></script>
<![endif]-->
<script src="../navbar/NavScript.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <div id="article">
      <h1>#UseHook</h1>
      <p>Erzwingt die Verwendung des Hooks, um alle oder einige Tastatur-<a href="../Hotkeys.htm">Hotkeys</a> zu implementieren.</p>
      <pre class="Syntax">#UseHook [On|Off]</pre>
      <h3>Parameter</h3>
      <table class="info">
        <tr>
          <td style="width: 15%;">On|Off</td>
          <td style="width: 85%;"><p>#UseHook ohne eins der folgenden W&ouml;rter ist gleichbedeutend mit <code>#UseHook On</code>.</p>
            <p>On: Der <a href="_InstallKeybdHook.htm">Tastatur-Hook</a> wird verwendet, um alle Tastatur-Hotkeys zwischen hier und der n&auml;chsten Direktive <code>#UseHook OFF</code> (falls vorhanden) zu implementieren.</p>
            <p>Off: Hotkeys werden mit der Standardmethode implementiert (wenn m&ouml;glich mit RegisterHotkey(), ansonsten der Tastatur-Hook).</p></td>
        </tr>
      </table>
      <h3>Bemerkungen</h3>
      <p>Normalerweise wird die Windows-API-Funktion RegisterHotkey() wenn m&ouml;glich verwendet, um einen Tastatur-Hotkey zu implementieren. Allerdings kann die Reaktionsf&auml;higkeit von Hotkeys unter Umst&auml;nden besser sein, wenn stattdessen der <a href="_InstallKeybdHook.htm">Tastatur-Hook</a> verwendet wird.</p>
      <p>Das Aktivieren dieser Direktive ist mit dem <a href="../Hotkeys.htm#prefixdollar">$-Pr&auml;fix</a> in der Definition jeden Hotkeys vergleichbar.</p>
      <p>Wie bei allen Direktiven, die nur einmal beim Starten des Scripts verarbeitet werden, sollte <code>#UseHook</code> nicht im Script positioniert werden, als w&auml;re es ein Befehl (das hei&szlig;t, dass es unn&ouml;tig ist, die Direktive in eine Subroutine zu setzen). Positioniere diese Direktive stattdessen direkt vor dem ersten Hotkey, der davon beeinflusst werden soll.</p>
      <p>Standardm&auml;&szlig;ig k&ouml;nnen Hotkeys, die den <a href="_InstallKeybdHook.htm">Tastatur-Hook</a> verwenden, nicht durch den <a href="Send.htm">Send</a>-Befehl ausgel&ouml;st werden. Ebenso k&ouml;nnen Maus-Hotkeys nicht durch Befehle wie <a href="Click.htm">Click</a> ausgel&ouml;st werden, weil alle Maus-Hotkeys den <a href="_InstallMouseHook.htm">Maus-Hook</a> verwenden. Als &Uuml;bergangsl&ouml;sung kann <a href="Gosub.htm">Gosub</a> verwendet werden, um die Hotkey-Subroutine direkt anzuspringen. Zum Beispiel: <code>Gosub #LButton</code></p>
      <p><span class="ver">[v1.1.06+]:</span> <a href="_InputLevel.htm">#InputLevel</a> und <a href="SendLevel.htm">SendLevel</a> bieten zus&auml;tzlich Kontrolle dar&uuml;ber, welche Hotkeys und Hotstrings durch den Send-Befehl ausgel&ouml;st werden.</p>
      <p>Wenn diese Direktive nicht angegeben ist, gilt standardm&auml;&szlig;ig OFF.</p>
      <h3>Verwandte Befehle</h3>
      <p><a href="_InstallKeybdHook.htm">#InstallKeybdHook</a>, <a href="_InstallMouseHook.htm">#InstallMouseHook</a>, <a href="ListHotkeys.htm">ListHotkeys</a>, <a href="_InputLevel.htm">#InputLevel</a></p>
      <h3>Beispiel</h3>
      <pre class="NoIndent">#UseHook  <em>; Erzwingt die Verwendung des Hooks bei nachfolgenden Hotkeys.</em>
#x::MsgBox, Dieser Hotkey wird mit dem Hook implementiert.
#y::MsgBox, Dieser auch.
#UseHook off
#z::MsgBox, Aber nicht dieser.</pre>
    </div>
  </section>
</div>
<script type="text/javascript">WriteFooter(1);</script>
</body>
</html>