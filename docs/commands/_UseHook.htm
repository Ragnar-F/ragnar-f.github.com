<!DOCTYPE HTML>
<html>
<head>
<title>#UseHook</title>
<meta name="keywords" content="Befehl, Direktive, Hotkey">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/ga.js" type="text/javascript"></script>
<!--[if lt IE 9]>
<script src="../static/html5.js"></script>
<![endif]-->
<script src="../navbar/NavScript.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <article>
      <h1>#UseHook</h1>
      <p>Erzwingt die Verwendung des Hooks, um alle oder einige Tastatur-<a href="../Hotkeys.htm">Hotkeys</a> zu implementieren.</p>
      <pre class="Syntax">#UseHook [On|Off]</pre>
      <h3>Parameter</h3>
      <table class="info">
        <tr>
          <td style="width: 15%;">On|Off</td>
          <td style="width: 85%;"><p>Ist dieser Parameter nicht vorhanden, gilt standardmaßig On.</p>
            <p>On: Der <a href="_InstallKeybdHook.htm">Tastatur-Hook</a> wird verwendet, um alle Tastatur-Hotkeys zwischen hier und der nächsten Direktive <code>#UseHook OFF</code> (falls vorhanden) zu implementieren.</p>
            <p>Off: Hotkeys werden mit der Standardmethode implementiert (wenn möglich mit RegisterHotkey(), ansonsten per Tastatur-Hook).</p></td>
        </tr>
      </table>
      <h3>Bemerkungen</h3>
      <p>Ein Tastatur-Hotkey wird üblicherweise mit der Windows-API-Funktion RegisterHotkey() implementiert, wann immer es möglich ist. Unter bestimmten Bedingungen könnte sich die Reaktionsfähigkeit der Hotkeys erhöhen, wenn stattdessen der <a href="_InstallKeybdHook.htm">Tastatur-Hook</a> verwendet wird.</p>
      <p>Das Aktivieren dieser Direktive ist das gleiche wie, als würde man bei den betroffenen Hotkeys den <a href="../Hotkeys.htm#prefixdollar">$-Präfix</a> angeben.</p>
      <p>&nbsp;<code>#UseHook</code> sollte, wie jede andere Direktive auch, nicht wie ein Befehl im Script positioniert werden (beispielsweise macht es keinen Sinn, die Direktive in eine Subroutine zu setzen). Diese Direktive wird nur beim Starten des Scripts ausgeführt, danach nie wieder. Positioniere diese Direktive stattdessen direkt vor dem Hotkey, der als erstes von ihr beeinflusst werden soll.</p>
      <p>Standardmäßig können Hotkeys, die den <a href="_InstallKeybdHook.htm">Tastatur-Hook</a> verwenden, nicht durch den <a href="Send.htm">Send</a>-Befehl ausgelöst werden. Ebenso können Maus-Hotkeys nicht durch Befehle wie <a href="Click.htm">Click</a> ausgelöst werden, weil alle Maus-Hotkeys den <a href="_InstallMouseHook.htm">Maus-Hook</a> verwenden. Verwende stattdessen <a href="Gosub.htm">Gosub</a>, um direkt zur Hotkey-Subroutine zu springen. Zum Beispiel: <code>Gosub #LButton</code>.</p>
      <p><span class="ver">[v1.1.06+]:</span> <a href="_InputLevel.htm">#InputLevel</a> und <a href="SendLevel.htm">SendLevel</a> bieten zusätzliche Kontrolle darüber, welche Hotkeys und Hotstrings durch den Send-Befehl ausgelöst werden sollen.</p>
      <p>Ist diese Direktive im Script nicht angegeben, gilt standardmäßig OFF.</p>
      <h3>Verwandte Befehle</h3>
      <p><a href="_InstallKeybdHook.htm">#InstallKeybdHook</a>, <a href="_InstallMouseHook.htm">#InstallMouseHook</a>, <a href="ListHotkeys.htm">ListHotkeys</a>, <a href="_InputLevel.htm">#InputLevel</a></p>
      <h3>Beispiel</h3>
      <pre class="NoIndent">#UseHook  <em>; Erzwingt die Verwendung des Hooks bei nachfolgenden Hotkeys.</em>
#x::MsgBox, Dieser Hotkey wird mit dem Hook implementiert.
#y::MsgBox, Dieser auch.
#UseHook off
#z::MsgBox, Aber dieser nicht.</pre>
    </article>
  </section>
</div>
<script type="text/javascript">WriteFooter(1);</script>
</body>
</html>