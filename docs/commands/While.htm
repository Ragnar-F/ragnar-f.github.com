<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>While-Loop</title>
<meta name="keywords" content="Befehl, Ablaufsteuerung, Schleife">
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<link href="../css/default.css" rel="stylesheet" type="text/css">
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-28224374-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
</head>
<body>
<script src="../navbar/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(1);</script>


<h1>While-Loop <span class="ver">[v1.0.48+]</span></h1>

<p>Kontinuierliche Wiederholung einer Reihe von Befehlen, bis der angegebene <a href="../Variables.htm#Expressions">Ausdruck</a> als falsch gewertet wird.</p>

<pre class="Syntax">While <i>Ausdruck</i></pre>
<h3>Parameter</h3>
<table class="info">
  <tr>
    <td width="15%">Ausdruck</td>
    <td width="85%">Beliebiger g&uuml;ltiger <a href="../Variables.htm#Expressions">Ausdruck</a>. Zum Beispiel: <em>while x &lt; y</em></td>
  </tr>
</table>

<h3>Bemerkungen</h3>
<p>Der Ausdruck wird vor jeder Iteration einmal ausgewertet. Wenn der Ausdruck als wahr gewertet wird (jedes beliebige Ergebnis, nur nicht ein leerer String oder eine 0), dann wird der Schleifenk&ouml;rper ausgef&uuml;hrt, ansonsten springt die Ausf&uuml;hrung auf die Zeile nach dem Schleifenk&ouml;rper.</p>
<p>Nach einer While-Schleife erfolgt f&uuml;r gew&ouml;hnlich ein <a href="Block.htm">Block</a>, der eine Sammlung an Anweisungen enth&auml;lt, um den <em>Schleifenk&ouml;rper</em> zu formen. Allerdings ben&ouml;tigt eine Schleife mit nur einer Anweisung keinen Block (in diesem Fall z&auml;hlt ein "If" und das dazugeh&ouml;rige "Else" als eine Anweisung).</p>
<p><a name="otb"></a>Der "One True Brace Style" kann optional eingesetzt werden, d. h. die &ouml;ffnende Klammer darf auf derselben Zeile des Befehls stehen. Zum Beispiel: <em>while x &lt; y {</em></p>
<p>Die interne Variable <strong>A_Index</strong> enth&auml;lt die Nummer des aktuellen Schleifendurchlaufs. Die Variable enth&auml;lt eine 1, wenn der Ausdruck oder K&ouml;rper der Schleife zum ersten Mal ausgef&uuml;hrt wird. Zum zweiten Mal enth&auml;lt sie eine 2, und so weiter. Wenn eine innere Schleife durch eine &auml;u&szlig;ere Schleife eingeschlossen ist, dann hat die innere Schleife Vorrang. A_Index funktioniert in jeder Schleifenvariante, enth&auml;lt aber au&szlig;erhalb eine 0.</p>
<p>Wie bei allen Schleifen kann <a href="Break.htm">Break</a> verwendet werden, um die Schleife vorzeitig zu beenden. Au&szlig;erdem kann <a href="Continue.htm">Continue</a> verwendet werden, um den Rest der aktuellen Iteration zu &uuml;berspringen, wobei A_Index um 1 erh&ouml;ht und der Ausdruck der While-Schleife neu ausgewertet wird. Wenn noch wahr, dann beginnt ein neuer Durchlauf; ansonsten endet die Schleife.</p>
<p>Besondere Schleifen: Schleifen k&ouml;nnen verwendet werden, um Dateien, Ordner oder Registrierungseintr&auml;ge zu ermitteln (jeweils eins). Siehe <a href="LoopFile.htm">dateilesende Schleife</a> und <a href="LoopReg.htm">Registrierung-Schleife</a> f&uuml;r Details. Dar&uuml;ber hinaus agieren <a href="LoopReadFile.htm">dateilesende Schleifen</a> mit dem kompletten Inhalt einer Datei, Zeile f&uuml;r Zeile. Schlie&szlig;lich agieren <a href="LoopParse.htm">Parsing-Schleifen</a> mit bestimmten Feldern innerhalb eines abgegrenzten Strings.</p>
<h3>Verwandte Befehle</h3>
<p><a href="Until.htm">Until</a>, <a href="Break.htm">Break</a>, <a href="Continue.htm">Continue</a>, <a href="Block.htm">Blocks</a>, <a href="Loop.htm">Loop</a>, <a href="For.htm">For-Schleife</a>, <a href="LoopFile.htm">Loop (Dateien & Ordner)</a>, <a href="LoopReg.htm">Registrierung-Schleife</a>, <a href="LoopReadFile.htm">dateilesende Schleife</a>, <a href="LoopParse.htm">Parsing-Schleife</a>, <a href="IfExpression.htm">If (Ausdruck)</a></p>
<h3>Beispiele</h3>
<pre class="NoIndent"><em>; Wenn der Benutzer mit der linken Maustaste zieht, dann zeigt ein ToolTip die Gr&ouml;&szlig;e des Ziehbereichs an.</em>

CoordMode, Mouse, Screen

~LButton::
    MouseGetPos, StartPosX, StartPosY
    <strong>while </strong>GetKeyState("LButton")
    {
        MouseGetPos, x, y
        ToolTip, % StartPosX ", " StartPosY "`n" Abs(StartPosX-x) " x " Abs(StartPosY-y)
        Sleep, 10
    }
    ToolTip
Return</pre>

</body>
</html>
