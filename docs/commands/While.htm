<!DOCTYPE HTML>
<html>
<head>
<title>While-Loop</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/jquery.js" type="text/javascript"></script>
<script src="../static/tree.jquery.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>While-Loop <span class="ver">[v1.0.48+]</span></h1>

<p>Führt eine Reihe von Befehlen wiederholend aus, bis der angegebene <a href="../Variables.htm#Expressions">Ausdruck</a> als falsch gewertet wird.</p>

<pre class="Syntax">While <i>Ausdruck</i></pre>
<h3>Parameter</h3>
<dl>

  <dt>Ausdruck</dt>
  <dd><p>Beliebiger gültiger <a href="../Variables.htm#Expressions">Ausdruck</a>. Zum Beispiel: <code>while x &lt; y</code>.</p></dd>

</dl>

<h3>Bemerkungen</h3>
<p>Der Ausdruck wird nach jedem Schleifendurchlauf einmal ausgewertet. Falls die Auswertung des Ausdrucks wahr ist (weder ein leerer String noch die Zahl 0), wird der Schleifenkörper ausgeführt, ansonsten springt die Ausführung auf die Zeile nach dem Schleifenkörper.</p>
<p>Nach einer While-Schleife erfolgt üblicherweise ein <a href="Block.htm">Block</a> - das sind mehrere Anweisungen, die den <em>Schleifenkörper</em> bilden. Hat die Schleife nur eine Anweisung, ist ein Block nicht notwendig (in diesem Fall zählt ein "if" und das dazugehörige "else" als eine Anweisung).</p>
<p><a name="otb"></a>Bei Bedarf kann man den "One True Brace Style" (OTB) verwenden. Das heißt, dass die öffnende Klammer neben dem Befehl vorkommen darf. Zum Beispiel: <code>while x &lt; y {</code>.</p>
<p>Die integrierte Variable <strong>A_Index</strong> enthält die Nummer des aktuellen Schleifendurchlaufs. Sie enthält eine 1, sobald der Ausdruck und Körper der Schleife das ersten Mal ausgeführt wird, beim zweiten Mal eine 2 und so weiter. Wenn eine innere Schleife von eine äußere Schleife umschlossen ist, hat die innere Schleife Vorrang. A_Index funktioniert in jeder Schleifenvariante, aber außerhalb einer Schleife enthält sie eine 0.</p>
<p>Wie bei allen Schleifen kann <a href="Break.htm">Break</a> dazu verwendet werden, die Schleife vorzeitig zu beenden. Mit <a href="Continue.htm">Continue</a> kann außerdem der Rest des aktuellen Durchlaufs übersprungen werden, dabei wird A_Index um 1 erhöht und der Ausdruck der While-Schleife neu ausgewertet. Ist die Auswertung weiterhin wahr, beginnt ein neuer Durchlauf; ansonsten endet die Schleife.</p>
<p>Spezialisierte Schleifen: Schleifen können verwendet werden, um Dateien, Ordner oder Registry-Einträge automatisch zu ermitteln (nacheinander). Siehe <a href="LoopFile.htm">Loop (Dateien &amp; Ordner)</a> und <a href="LoopReg.htm">Registry-Schleife</a> für Details. Darüber hinaus können <a href="LoopReadFile.htm">dateilesende Schleifen</a> den kompletten Inhalt einer Datei Zeile für Zeile durchgehen. <a href="LoopParse.htm">Parsing-Schleifen</a> hingegen können bestimmte Felder abrufen, die sich innerhalb eines Strings befinden und durch Trennzeichen getrennt sind.</p>
<h3>Siehe auch</h3>
<p><a href="Until.htm">Until</a>, <a href="Break.htm">Break</a>, <a href="Continue.htm">Continue</a>, <a href="Block.htm">Blöcke</a>, <a href="Loop.htm">Loop</a>, <a href="For.htm">For-Loop</a>, <a href="LoopFile.htm">Loop (Dateien &amp; Ordner)</a>, <a href="LoopReg.htm">Registry-Schleife</a>, <a href="LoopReadFile.htm">dateilesende Schleife</a>, <a href="LoopParse.htm">Parsing-Schleife</a>, <a href="IfExpression.htm">If (Ausdruck)</a></p>
<h3>Beispiele</h3>
<pre class="NoIndent"><em>; Sobald der Benutzer die Maus im gedrückten Zustand bewegt, wird ein ToolTip angezeigt, der Informationen über die Größe der Fläche innerhalb des Ziehbereichs beinhaltet.</em>

CoordMode, Mouse, Screen

~LButton::
    MouseGetPos, StartPosX, StartPosY
    <strong>while</strong> GetKeyState("LButton")
    {
        MouseGetPos, x, y
        ToolTip, % StartPosX ", " StartPosY "`n" Abs(StartPosX-x) " x " Abs(StartPosY-y)
        Sleep, 10
    }
    ToolTip
return</pre>

</body>
</html>
