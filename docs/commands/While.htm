<!DOCTYPE HTML>
<html>
<head>
<title>While-Loop</title>
<meta name="keywords" content="Befehl, Ablaufsteuerung, Schleife">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/ga.js" type="text/javascript"></script>
<!--[if lt IE 9]>
<script src="../static/html5.js"></script>
<![endif]-->
<script src="../navbar/NavScript.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <div id="article">
      <h1>While-Loop <span class="ver">[v1.0.48+]</span></h1>
      <p>F&uuml;hrt eine Reihe von Befehlen wiederholend aus, bis der angegebene <a href="../Variables.htm#Expressions">Ausdruck</a> als falsch gewertet wird.</p>
      <pre class="Syntax">While <i>Ausdruck</i></pre>
      <h3>Parameter</h3>
      <table class="info">
        <tr>
          <td style="width: 15%;">Ausdruck</td>
          <td style="width: 85%;">Beliebiger g&uuml;ltiger <a href="../Variables.htm#Expressions">Ausdruck</a>. Zum Beispiel: <code>while x &lt; y</code>.</td>
        </tr>
      </table>
      <h3>Bemerkungen</h3>
      <p>Der Ausdruck wird nach jedem Schleifendurchlauf einmal ausgewertet. Falls die Auswertung des Ausdrucks wahr ist (weder ein leerer String noch die Zahl 0), wird der Schleifenk&ouml;rper ausgef&uuml;hrt, ansonsten springt die Ausf&uuml;hrung auf die Zeile nach dem Schleifenk&ouml;rper.</p>
      <p>Nach einer While-Schleife erfolgt &uuml;blicherweise ein <a href="Block.htm">Block</a> - das sind mehrere Anweisungen, die den <em>Schleifenk&ouml;rper</em> bilden. Allerdings ben&ouml;tigt eine Schleife, die nur eine Anweisung hat, keinen Block (in diesem Fall z&auml;hlt ein "If" und das dazugeh&ouml;rige "Else" als eine Anweisung).</p>
      <p id="otb">Optional kann auch der "One True Brace Style" (OTB) verwendet werden. Das hei&szlig;t, dass es m&ouml;glich ist, die &ouml;ffnende Klammer auf derselben Zeile des Befehls zu setzen. Zum Beispiel: <code>while x &lt; y {</code>.</p>
      <p>Die interne Variable <strong>A_Index</strong> enth&auml;lt die Nummer des aktuellen Schleifendurchlaufs. Sie enth&auml;lt eine 1, sobald der Ausdruck und K&ouml;rper der Schleife das ersten Mal ausgef&uuml;hrt wird, beim zweiten Mal eine 2 und so weiter. Wenn eine innere Schleife von eine &auml;u&szlig;ere Schleife umschlossen ist, hat die innere Schleife Vorrang. A_Index funktioniert in jeder Schleifenvariante, aber au&szlig;erhalb einer Schleife enth&auml;lt sie eine 0.</p>
      <p>Wie bei allen Schleifen kann <a href="Break.htm">Break</a> dazu verwendet werden, die Schleife vorzeitig zu beenden. Mit <a href="Continue.htm">Continue</a> kann au&szlig;erdem der Rest des aktuellen Durchlaufs &uuml;bersprungen werden, dabei wird A_Index um 1 erh&ouml;ht und der Ausdruck der While-Schleife neu ausgewertet. Ist die Auswertung weiterhin wahr, beginnt ein neuer Durchlauf; ansonsten endet die Schleife.</p>
      <p>Spezialisierte Schleifen: Schleifen k&ouml;nnen verwendet werden, um Dateien, Ordner oder Registrierungseintr&auml;ge automatisch zu ermitteln (nacheinander). Siehe <a href="LoopFile.htm">Loop (Dateien & Ordner)</a> und <a href="LoopReg.htm">Registrierungs-Schleife</a> f&uuml;r Details. Weiterhin bietet eine <a href="LoopReadFile.htm">dateilesende Schleife</a> die M&ouml;glichkeit, den kompletten Inhalt einer Datei Zeile f&uuml;r Zeile durchzugehen. Mit einer <a href="LoopParse.htm">Parsing-Schleife</a> k&ouml;nnen bestimmte Felder, die sich innerhalb eines abgegrenzten Strings befinden, verarbeitet werden.</p>
      <h3>Verwandte Befehle</h3>
      <p><a href="Until.htm">Until</a>, <a href="Break.htm">Break</a>, <a href="Continue.htm">Continue</a>, <a href="Block.htm">Blocks</a>, <a href="Loop.htm">Loop</a>, <a href="For.htm">For-Loop</a>, <a href="LoopFile.htm">Loop (Dateien & Ordner)</a>, <a href="LoopReg.htm">Registrierungs-Schleife</a>, <a href="LoopReadFile.htm">dateilesende Schleife</a>, <a href="LoopParse.htm">Parsing-Schleife</a>, <a href="IfExpression.htm">If (Ausdruck)</a></p>
      <h3>Beispiele</h3>
      <pre class="NoIndent"><em>; Sobald der Benutzer die Maus im gedr&uuml;ckten Zustand bewegt, wird ein ToolTip angezeigt, der Informationen &uuml;ber die Gr&ouml;&szlig;e der Fl&auml;che innerhalb des Ziehbereichs beinhaltet.</em>

CoordMode, Mouse, Screen

~LButton::
    MouseGetPos, StartPosX, StartPosY
    <strong>while </strong>GetKeyState("LButton")
    {
        MouseGetPos, x, y
        ToolTip, % StartPosX ", " StartPosY "`n" Abs(StartPosX-x) " x " Abs(StartPosY-y)
        Sleep, 10
    }
    ToolTip
Return</pre>
    </div>
  </section>
</div>
<script type="text/javascript">WriteFooter(1);</script>
</body>
</html>
