<!DOCTYPE HTML>
<html>
<head>
<title>KeyWait</title>
<meta name="keywords" content="Befehl, Tastatur, Maus, Joystick">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/ga.js" type="text/javascript"></script>
<!--[if lt IE 9]>
<script src="../static/html5.js"></script>
<![endif]-->
<script src="../navbar/NavScript.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <div id="article">
      <h1>KeyWait</h1>
      <p>Wartet, bis eine Tastatur-, Maus- oder Joystick-Taste losgelassen oder gedr&uuml;ckt wird.</p>
      <pre class="Syntax">KeyWait, Tastenname [, Optionen]</pre>
      <h3>Parameter</h3>
      <table class="info">
        <tr>
          <td style="width: 15%;">Tastenname</td>
          <td style="width: 85%;"><p>Ein einzelnes Zeichen der Tastatur oder ein Tastenname aus der <a href="../KeyList.htm">Tastenliste</a>, darunter auch Maus- und Joysticktasten. Anderweitige Joystick-Eigenschaften werden nicht unterst&uuml;tzt.</p>
            <p>Alternativ kann ein eindeutiger virtueller Tastencode wie <code>{vkFF}</code> angegeben werden. Das ist vorallem dann n&uuml;tzlich, wenn die Taste weder einen Namen hat, noch beim Dr&uuml;cken ein sichtbares Zeichen erzeugt. Der virtuelle Tastencode kann ermittelt werden, wenn die Schritte im unteren Abschnitt der <a href="../KeyList.htm#SpecialKeys">Tastenliste</a> befolgt werden.</p></td>
        </tr>
        <tr>
          <td>Optionen</td>
          <td><p>Sobald dieser Parameter leer ist, wartet der Befehl unendlich lang auf die Tastatur-, Maus- oder Joystick-Taste, bis sie physisch vom Benutzer losgelassen wird. Wenn allerdings der <a href="_InstallKeybdHook.htm">Tastatur-Hook</a> nicht installiert ist und der <em>Tastenname</em> eine Tastatur-Taste ist, die z. B. mithilfe des <a href="Send.htm">Send</a>-Befehls k&uuml;nstlich losgelassen wurde, dann wird die Taste auch als physisch losgelassen angesehen. Das gleiche gilt f&uuml;r Maustasten, wenn der <a href="_InstallMouseHook.htm">Maus-Hook</a> nicht installiert ist.</p>
            <p>Optionen: Ein String mit beliebig vielen der folgenden Buchstaben (in beliebiger Reihenfolge, optional durch Leerzeichen getrennt):</p>
            <p><strong>D</strong>: Warten, bis die Taste gedr&uuml;ckt wurde.</p>
            <p><strong>L</strong>: &Uuml;berpr&uuml;ft den logischen Status der Taste, der dem Betriebssystem und aktivem Fenster glauben macht, dass die Taste gedr&uuml;ckt wurde (entspricht nicht unbedingt dem physischen Status). Diese Option wird bei Joystick-Tasten ignoriert.</p>
            <p><strong>T</strong>: Zeit&uuml;berschreitung (z. B. <code>T3</code>). Die Wartezeit in Sekunden, bevor das Script fortgesetzt und <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 1 gesetzt wird. Falls die Taste in dieser Zeit gedr&uuml;ckt wird, wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 0 gesetzt und das Script sofort fortgesetzt, ohne die verbliebene Zeit abzuwarten.</p>
            <p>Der Zeitlimit-Wert kann eine Flie&szlig;kommazahl wie 2.5 sein, aber kein Hexadezimalwert wie 0x03.</p></td>
        </tr>
      </table>
      <h3>ErrorLevel</h3>
      <p>Sobald die Wartezeit abgelaufen ist, wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 1 gesetzt, ansonsten auf 0.</p>
      <h3>Bemerkungen</h3>
      <p>In Windows 95/98/Me ist der physische Status meistens auch der logische Status.</p>
      <p>In Windows NT/2000/XP oder h&ouml;her ist der physische Status &uuml;blicherweise auch der logische Status. Sobald jedoch der Tastatur- und/oder Maus-Hook installiert ist, kann exakt festgestellt werden, ob der Benutzer eine Taste gedr&uuml;ckt h&auml;lt oder nicht. Mit dem <a href="KeyHistory.htm">KeyHistory</a>-Befehl oder -Men&uuml;punkt kann &uuml;berpr&uuml;ft werden, ob ein Hook in Benutzung ist. Mit <a href="_InstallKeybdHook.htm">#InstallKeybdHook</a> und/oder <a href="_InstallMouseHook.htm">#InstallMouseHook</a> k&ouml;nnen Hooks erzwungen werden.</p>
      <p>W&auml;hrend der Befehl im Wartezustand ist, k&ouml;nnen neue <a href="../misc/Threads.htm">Threads</a> durch <a href="../Hotkeys.htm">Hotkeys</a>, <a href="Menu.htm">benutzerdefinierte Men&uuml;punkte</a> oder <a href="SetTimer.htm">Timer</a> gestartet werden.</p>
      <p>Es ist auch m&ouml;glich, auf mehr als eine Taste zu warten, bis diese losgelassen werden. Zum Beispiel:</p>
      <pre>KeyWait Control  <em>; Wartet darauf, dass sowohl STRG als auch ALT losgelassen wird.</em>
KeyWait Alt</pre>
      <p>Im Beispiel-Abschnitt von <a href="Input.htm">Input</a> wird gezeigt, wie auf das Dr&uuml;cken einer Taste gewartet wird, die zu einer bestimmten Reihe von Tasten geh&ouml;rt.</p>
      <h3>Verwandte Befehle</h3>
      <p><a href="GetKeyState.htm">GetKeyState</a>, <a href="../KeyList.htm">Tastenliste</a>, <a href="Input.htm">Input</a>, <a href="KeyHistory.htm">KeyHistory</a>, <a href="_InstallKeybdHook.htm">#InstallKeybdHook</a>, <a href="_InstallMouseHook.htm">#InstallMouseHook</a>, <a href="ClipWait.htm">ClipWait</a>, <a href="WinWait.htm">WinWait</a></p>
      <h3>Beispiele</h3>
      <pre class="NoIndent"><em>; Beispiel #1: Grundlagen:</em>
KeyWait, a  <em>; Warten, bis die A-Taste losgelassen wird.</em>
KeyWait, LButton, D  <em>; Wartet, bis die linke Maustaste gedr&uuml;ckt wird.</em>
KeyWait, Joy1, D T3  <em>; Wartet 3 Sekunden, bis die erste Joystick-Taste gedr&uuml;ckt wird.</em>
KeyWait, LAlt, L  <em>; Wartet, bis die linke ALT-Taste logisch losgelassen wird.</em></pre>
      <p>&nbsp;</p>
      <pre class="NoIndent"><em>; Beispiel #2: Ein einfacher Hotkey:</em>
~Capslock::
KeyWait, Capslock  <em>; Wartet, bis der Benutzer diese Taste physisch losgelassen hat.</em>
MsgBox Sie haben die FESTSTELL-Taste gedr&uuml;ckt und losgelassen.
Return</pre>
      <p>&nbsp;</p>
      <pre class="NoIndent"><em>; Beispiel #3: ; Neubelegung einer Tastatur- und Maustaste (dient nur zur Veranschaulichung,
; die interne <a href="../misc/Remap.htm">Neubelegungsfunktion</a> ist leichter zu handhaben):
; die linke Maustaste wird gedr&uuml;ckt gehalten, w&auml;hrend NumpadAdd
; gedr&uuml;ckt gehalten wird (NumpadAdd wird zur Maustaste).</em>
*NumpadAdd::
MouseClick, left,,, 1, 0, D  <em>; H&auml;lt die linke Maustaste gedr&uuml;ckt.</em>
KeyWait, NumpadAdd  <em>; Wartet, bis die Taste losgelassen wird.</em>
MouseClick, left,,, 1, 0, U  <em>; L&auml;sst die Maustaste los.</em>
Return</pre>
      <p>&nbsp;</p>
      <pre class="NoIndent"><em>; Beispiel #4: Erkennt, dass eine Taste zweimal gedr&uuml;ckt wurde (&auml;hnlich Doppelklick).
; KeyWait wird verwendet, um die Autowiederholungsfunktion daran zu hindern,
;  ungewollt eine Taste zweimal zu dr&uuml;cken, wenn die rechte STRG-Taste gedr&uuml;ckt gehalten wird.  Erm&ouml;glicht durch die
; Aufrechterhaltung eines Hotkey-Threads, die die Autowiederholung blockiert, solange
; #MaxThreadsPerHotkey auf dem Standardwert 1 ist.
; Hinweis: Es gibt ein aufw&auml;ndigeres Script im unteren Bereich der <a href="SetTimer.htm">SetTimer</a>-Seite, das zwischen einfaches, doppeltes und dreifaches Dr&uuml;cken unterscheidet.</em>
~RControl::
If (A_PriorHotkey &lt;&gt; "~RControl" or A_TimeSincePriorHotkey &gt; 400)
{
    <em>; Zu viel Zeit zwischen den Instanzen, daher kein zweimaliges Dr&uuml;cken.</em>
    KeyWait, RControl
    Return
}
MsgBox Sie haben die rechte Steuerungstaste zweimal gedr&uuml;ckt.
Return</pre>
    </div>
  </section>
</div>
<script type="text/javascript">WriteFooter(1);</script>
</body>
</html>