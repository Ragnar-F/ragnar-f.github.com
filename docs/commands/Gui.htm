<!DOCTYPE HTML>
<html>
<head>
<title>GUI</title>
<meta name="keywords" content="Befehl, Grafische Benutzeroberfl&auml;che">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/ga.js" type="text/javascript"></script>
<!--[if lt IE 9]>
<script src="../static/html5.js"></script>
<![endif]-->
<script src="../navbar/NavScript.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <article>
      <h1>GUI</h1>
      <p>Erstellt und verwaltet Fenster und deren Steuerelemente. Solche Fenster k&ouml;nnen zur Dateneingabe oder als individuelle Benutzerschnittstellen verwendet werden.</p>
      <pre class="Syntax">Gui, Unterbefehl [, Param2, Param3, Param4]</pre>
      <h2>Inhaltsverzeichnis</h2>
      <ul>
        <li><a href="#New">New</a>: Erstellt ein neues Fenster.</li>
        <li><a href="#Add">Add</a>: Erstellt ein Steuerelement wie z. B. Text, Schaltfl&auml;che oder Kontrollk&auml;stchen.</li>
        <li><a href="#Show">Show</a>: Zeigt das Fenster an. Kann ein Fenster auch minimieren, maximieren oder verschieben.</li>
        <li><a href="#Submit">Submit</a>: Speichert die Benutzereingaben und versteckt optional das Fenster.</li>
        <li><a href="#Cancel">Cancel</a> (oder Hide): Versteckt das Fenster.</li>
        <li><a href="#Destroy">Destroy</a>: Entfernt das Fenster.</li>
        <li><a href="#Font">Font</a>: Bestimmt die Schriftart, die -Schriftgr&ouml;&szlig;e, den Schriftstil und die Textfarbe f&uuml;r danach erstellte Steuerelemente.</li>
        <li><a href="#Color">Color</a>: Bestimmt die Hintergrundfarbe des Fensters und/oder dessen Steuerelemente.</li>
        <li><a href="#Margin">Margin</a>: Bestimmt den Abstand, sobald keine eindeutige Position f&uuml;r ein Steuerelement definiert wurde. </li>
        <li><a href="#Options">Optionen und Styles f&uuml;r ein Fenster</a>: Legt verschiedene Optionen zum Aussehen und Verhalten des Fensters fest.</li>
        <li><a href="#Menu">Menu</a>: Hinzuf&uuml;gen oder Entfernen einer Men&uuml;leiste.</li>
        <li><a href="#Minimize">Minimize / Maximize / Restore</a>: Minimiert, Maximiert oder stellt ein Fenster wieder her.</li>
        <li><a href="#Flash">Flash</a>: F&uuml;hrt dazu, dass die Taskleistenschaltfl&auml;che des Fensters anf&auml;ngt zu blinken.</li>
        <li><a href="#Default">Default</a>: &Auml;ndert den Standard-GUI-Fensternamen des aktuellen Threads. </li>
        <li><a href="#Position">Position und Gr&ouml;&szlig;e von Steuerelementen anpassen</a></li>
        <li><a href="#Events">Speichern von und Reagieren auf Benutzereingaben</a>: Variablen und g-Label </li>
        <li><a href="#OtherOptions">Optionen und Styles f&uuml;r Steuerelemente</a></li>
        <li><a href="#Labels">Fensterereignisse</a>: <a href="#GuiClose">GuiClose</a> | <a href="#GuiEscape">GuiEscape</a> | <a href="#GuiSize">GuiSize</a> | <a href="#GuiContextMenu">GuiContextMenu</a> | <a href="#GuiDropFiles">GuiDropFiles</a></li>
        <li><a href="#MultiWin">Mehrere GUI-Fenster erstellen</a></li>
        <li><a href="#DefaultWin">GUI-Ereignisse, Threads und Subroutinen</a></li>
        <li>Sonstiges: <a href="#Navigate">Navigation mit der Tastatur</a> | <a href="#Appear">Fensterdarstellung</a> | <a href="#GenRemarks">Allgemeine Bemerkungen</a></li>
        <li><a href="#Examples">Beispiele</a>: Enthaltene funktionierende Scripts, die GUI-Fenster und Steuerelemente verdeutlichen.</li>
      </ul>
      <h2 id="New">Gui, New [, Optionen, Titel] <span class="ver">[v1.1.04]</span></h2>
      <p>Erstellt ein neues Fenster.</p>
      <pre>Gui, New  <em>; Erstellt ein neues unbenanntes GUI.</em>
Gui, Name:New  <em>; Erstellt ein neues GUI und zerst&ouml;rt jedes vorhandene GUI mit diesem Namen.</em>
</pre>
      <p>Der Bequemlichkeit halber wird das neue Fenster als <a href="#Default">Standard</a> f&uuml;r den aktuellen Thread definiert.</p>
      <p>Wenn kein Name angegeben ist, haben spezielle <a href="#Labels">Label</a> wie <a href="#GuiClose"><em>GuiClose</em></a> standardm&auml;&szlig;ig das Pr&auml;fix &quot;Gui&quot;, sofern das nicht in den Optionen mit <a href="#PlusLabel">+Label<em>Pr&auml;fix</em></a> &uuml;berschrieben wird. Wenn das GUI, das den aktuellen Thread gestartet hat, auf diese Weise erstellt wurde, enth&auml;lt <a href="../Variables.htm#Gui">A_Gui</a> ein HWND, anstatt einen Namen. Desweiteren wird das HWND des neuen Fensters in <em>Ausgabevariable</em> gespeichert, sobald <a href="#GuiHwndOutputVar">+Hwnd<em>Ausgabevariable</em></a> in den Optionen verwendet wird.</p>
      <p>Falls ein Name angegeben ist, wird jedes vorhandene GUI mit diesem Namen <strong>zerst&ouml;rt</strong>.</p>
      <p><em>Optionen</em> kann beliebige <a href="#Options">Optionen</a> enthalten, die vom Haupt-GUI-Befehl unterst&uuml;tzt werden.</p>
      <p>Sobald der <em>Titel</em> weggelassen wird, wird der Dateiname des Scripts verwendet.</p>
      <p>Obwohl dieser Befehl dazu dient, Klarheit zu verschaffen, muss er nicht zwingend benutzt werden. Wenn einer der anderen Gui-Unterbefehle (z. B. <a href="#Add">Gui, Add</a>) verwendet wird und das GUI nicht vorhanden ist, wird es automatisch erstellt.</p>
      <p><strong>Hinweis:</strong> Vor v1.1.08 war dieser Befehl nicht in der Lage, das Standard-Gui zu setzen, falls ein Name angegeben war.</p>
      <h2 id="Add">Gui, Add, Steuerelementart [, Optionen, Text]</h2>
      <p>F&uuml;gt einem GUI-Fenster ein Steuerelement hinzu (GUI-Fenster wird je nach Bedarf automatisch erstellt).</p>
      <p>Folgende <em>Steuerelementart</em> kann verwendet werden:</p>
      <ul>
        <li><a href="GuiControls.htm#Text">Text</a>, <a href="GuiControls.htm#Edit">Edit</a>, <a href="GuiControls.htm#UpDown">UpDown</a>, <a href="GuiControls.htm#Picture">Picture</a></li>
        <li><a href="GuiControls.htm#Button">Button</a>, <a href="GuiControls.htm#Checkbox">Checkbox</a>, <a href="GuiControls.htm#Radio">Radio</a></li>
        <li><a href="GuiControls.htm#DropDownList">DropDownList</a>, <a href="GuiControls.htm#ComboBox">ComboBox</a></li>
        <li><a href="GuiControls.htm#ListBox">ListBox</a>, <a href="ListView.htm">ListView</a>, <a href="TreeView.htm">TreeView</a></li>
        <li><a href="GuiControls.htm#Hotkey">Hotkey</a>, <a href="GuiControls.htm#DateTime">DateTime</a>, <a href="GuiControls.htm#MonthCal">MonthCal</a></li>
        <li><a href="GuiControls.htm#Slider">Slider</a>, <a href="GuiControls.htm#Progress">Progress</a></li>
        <li><a href="GuiControls.htm#GroupBox">GroupBox</a>, <a href="GuiControls.htm#Tab">Tab</a>, <a href="GuiControls.htm#StatusBar">StatusBar</a></li>
        <li><a href="GuiControls.htm#ActiveX">ActiveX</a> (z. B.  Internet Explorer Control)</li>
      </ul>
      <p>Zum Beispiel:</p>
      <pre>Gui, Add, Text,, Bitte Name eingeben:
Gui, Add, Edit, vName
Gui, Show</pre>
      <h2 id="Show">Gui, Show [, Optionen, Titel]</h2>
      <p>Sofern nicht anders in den <em>Optionen</em> angegeben, macht dieser Befehl das Fenster sichtbar, hebt das Minimieren je nach Bedarf auf, <a href="WinActivate.htm">aktiviert</a> es und legt den Titel fest. Falls der <em>Titel</em> weggelassen wird, wird der vorherige Titel beibehalten (ist dieser auch nicht vorhanden, dann der Dateiname des Scripts).</p>
      <p>Beim Weglassen der Optionen X, Y, W und H bleibt die vorherige Gr&ouml;&szlig;e und Position des Fensters erhalten. Falls keine vorherige Position vorhanden ist, wird das Fenster automatisch zentriert, abh&auml;ngig von den Optionen X und Y, die weiter unten erw&auml;hnt werden. Falls eine vorherige Gr&ouml;&szlig;e nicht wiederhergestellt werden kann, wird die Fenstergr&ouml;&szlig;e automatisch an den vorhandenen Steuerelementen angepasst.</p>
      <p>Folgende Strings k&ouml;nnen in den <em>Optionen</em> angegeben werden (jede Zahl muss dezimal und in Pixeln angegeben werden):</p>
      <p><strong>Wn</strong>: Ersetzt <strong>n</strong> mit der Breite des Client-Bereichs im Fenster (der Client-Bereich schlie&szlig;t Rahmen, Titelleiste und <a href="#Menu">Men&uuml;leiste</a> des Fensters aus).</p>
      <p><strong>Hn</strong>: Ersetzt <strong>n</strong> mit der H&ouml;he des Client-Bereichs im Fenster.</p>
      <p><strong>Xn</strong>: Ersetzt <strong>n</strong> mit der X-Position des Fensters. Dabei ist Position 0 die erste sichtbare Pixelspalte am linken Bildschirmrand.</p>
      <p><strong>Yn</strong>: Ersetzt <strong></strong><strong>n</strong> mit der Y-Position des Fensters. Dabei ist Position 0 ist die erste sichtbare Pixelzeile am oberen Bildschirmrand.</p>
      <p><strong>Center</strong>: Das Fenster wird auf dem Bildschirm horizontal und vertikal zentriert.</p>
      <p><strong>xCenter</strong>: Das Fenster wird auf dem Bildschirm nur horizontal zentriert. Zum Beispiel: <code>Gui, Show, xCenter y0</code></p>
      <p><strong>yCenter</strong>: Das Fenster wird auf dem Bildschirm nur vertikal zentriert.</p>
      <p id="AutoSize"><strong>AutoSize</strong>: Die Fenstergr&ouml;&szlig;e wird an den sichtbaren Steuerelementen angepasst. Das ist n&uuml;tzlich, um die Fenstergr&ouml;&szlig;e anzupassen, nachdem neue Steuerelemente hinzugef&uuml;gt oder Gr&ouml;&szlig;e und Sichtbarkeit vorhandener Steuerelemente ge&auml;ndert wurden. Zum Beispiel:<br>
        <code>Gui, Show, AutoSize Center</code></p>
      <br>
      <p><em><strong>Eine der folgenden Optionen kann auch vorhanden sein:</strong></em></p>
      <p><strong>Minimize</strong>: Minimiert das Fenster und aktiviert das darunterliegende Fenster.</p>
      <p><strong>Maximize</strong>: Maximiert und aktiviert das Fenster.</p>
      <p><strong>Restore</strong>: Hebt das Maximieren und Minimieren des Fensters je nach Bedarf wieder auf. Zudem wird das Fenster je nach Bedarf angezeigt und aktiviert.</p>
      <p><strong>NoActivate</strong>: Hebt das Maximieren und Minimieren des Fensters je nach Bedarf wieder auf. Zudem wird das Fenster angezeigt, ohne es zu aktivieren.</p>
      <p><strong>NA</strong>: Das Fenster wird angezeigt, ohne es zu aktivieren. Falls das Fenster minimiert ist (das beibehalten wird), steigt es in der Z-Rangordnung nach oben (die Rangordnung kann im Alt-Tab-Fenster &uuml;berpr&uuml;ft werden). Falls das Fenster vorher versteckt wurde, erscheint es &uuml;ber dem aktiven Fenster, selbst wenn das aktive Fenster nicht deaktiviert ist.</p>
      <p><strong>Hide</strong>: Versteckt das Fenster und aktiviert das darunterliegende Fenster. Hat die gleiche Funktionsweise wie <a href="#Cancel">Gui Cancel</a>, aber mit der Ausnahme, dass die Position, die Gr&ouml;&szlig;e und der Titel des versteckten Fensters weiterhin ge&auml;ndert werden kann, ohne es anzeigen zu m&uuml;ssen. Zum Beispiel: <code>Gui, Show, Hide x55 y66 w300 h200, Neuer Titel</code></p>
      <h2 id="Submit">Gui, Submit [, NoHide]</h2>
      <p>Speichert den Inhalt jedes Steuerelements in die <a href="#var">zugewiesene Variable</a> (falls vorhanden) und versteckt das Fenster, solange die NoHide-Option nicht vorhanden ist. Bei Steuerelementen mit mehreren Ausgabefeldern (z. B. eine <a href="GuiControls.htm#ListBoxMulti">mehrfach ausgew&auml;hlte</a> ListBox) enth&auml;lt die Ausgabe das <a href="#Delimiter">aktuelle Begrenzungszeichen</a> des Fensters. Wenn das Fenster nicht vorhanden ist (da es z. B. mittels <a href="#Destroy">Gui Destroy</a> zerst&ouml;rt wurde), bleibt dieser Befehl unwirksam.</p>
      <h2 id="Cancel">Gui, Cancel</h2>
      <p>Versteckt das Fenster, ohne dabei die Inhalte der Steuerelemente in die jeweils <a href="#var">zugewiesene Variable</a> zu speichern. Wenn das Fenster nicht vorhanden ist (da es z. B. mittels <a href="#Destroy">Gui Destroy</a> zerst&ouml;rt wurde), bleibt dieser Befehl unwirksam.</p>
      <h2 id="Destroy">Gui, Destroy</h2>
      <p>Entfernt das Fenster (falls vorhanden) samt aller dazugeh&ouml;rigen Steuerelemente und gibt den entsprechenden Arbeitsspeicher sowie die Systemressourcen frei. Sobald dieses Fenster neu erstellt wird, beginnen alle Fenstereigenschaften wie Farbe und Schriftart wieder mit ihren Standardwerten (als h&auml;tte das Fenster nie existiert). Sp&auml;testens beim Beenden des Scripts werden alle GUI-Fenster automatisch entfernt, sollte dieser Befehl nie verwendet werden.</p>
      <h2 id="Font">Gui, Font [, Optionen, Schriftart]</h2>
      <p>Bestimmt die Schriftart, die Schriftgr&ouml;&szlig;e, den Schriftstil und/oder die Textfarbe f&uuml;r Steuerelemente, die nach diesem Befehl erstellt werden. Zum Beispiel:</p>
      <pre>Gui, Font, s10, Verdana  <em>; Schriftart Verdana mit Gr&ouml;&szlig;e 10.</em></pre>
      <p>Beim Weglassen der der letzten beiden Parameter wird die Standard-Schriftart, die Standard-Schriftgr&ouml;&szlig;e und die Standard-Textfarbe vom Betriebssystem wiederhergestellt.</p>
      <p><em>Schriftart</em> ist der Name einer beliebigen Schrift (siehe <a href="../misc/FontsStandard.htm">Tabelle f&uuml;r Schriftarten</a>). Falls die <em>Schriftart</em> weggelassen wird oder nicht im Betriebssystem vorhanden ist, wird die zuvor verwendete Schriftart weiter verwendet (bzw. die Standardschriftart des Betriebssystems, wenn keine vorhanden ist). Dadurch wird erm&ouml;glicht, dass ein GUI-Fenster bei mehreren Betriebssystemen die gleiche Schriftart verwendet, selbst wenn einige dieser Systeme die bevorzugte Schriftart nicht anbieten. Im folgenden Beispiel hat Verdana Vorrang vor Arial, welches wiederum Vorrang vor MS Sans Serif hat:</p>
      <pre>Gui, Font,, MS sans serif
Gui, Font,, Arial
Gui, Font,, Verdana  <em>; Bevorzugte Schriftart.</em></pre>
      <p>Falls der <em>Optionen</em>-Parameter leer ist, werden die zuvor benutzten Schriftartattribute weiter verwendet. Ansonsten k&ouml;nnen ersatzweise beliebig viele der folgenden Optionsbuchstaben angegeben werden:</p>
      <p><strong>C</strong>: Namen der Farbe (siehe <a href="Progress.htm#colors">Farbtabelle</a>), ein RGB-Wert oder das Wort "Default", um die Standardfarbe des Betriebssystems wiederherzustellen (meistens schwarz). Beispielwerte: cRed, cFFFFAA, cDefault. Hinweis: Bei <a href="GuiControls.htm#Button">Schaltfl&auml;chen</a> werden benutzerdefinierte Farben ignoriert. Au&szlig;erdem kann ein bestimmtes Steuerelement mit einer beliebigen Farbe erstellt werden, indem die C-Option eingef&uuml;gt wird. Zum Beispiel: <code>Gui, Add, Text, cRed, Eigener Text</code></p>
      <p><strong>S</strong>: Gr&ouml;&szlig;e (in Punkten). Zum Beispiel: s12 (muss dezimal sein)</p>
      <p><strong>W</strong>: Breite (Dicke). Eine Nummer zwischen 1 und 1000 (400 ist normal und 700 ist fett). Zum Beispiel: w600 (muss dezimal sein)</p>
      <p>Zudem werden folgende W&ouml;rter unterst&uuml;tzt: <strong>bold</strong>, <em>italic</em>, <s>strike</s>, <u>underline</u> und norm (&uuml;bersetzt: fett, kursiv, durchgestrichen, unterstrichen und normal). <em>Norm</em> stellt die normale Breite/Dicke der Schrift wieder her und deaktiviert italic, strike und underline (Farbe und Gr&ouml;&szlig;e bleiben jedoch erhalten). Es ist m&ouml;glich, erst alle Attribute mit norm zu deaktivieren und danach neue Attribute hinzuzuf&uuml;gen. Mit <em>norm italic</em> beispielsweise wird die Schrift normalisiert und danach auf kursiv gesetzt.</p>
      <p>Sobald mehrere Optionen angegeben werden, m&uuml;ssen diese jeweils mit einem Leerzeichen getrennt werden. Zum Beispiel: cBlue s12 bold</p>
      <p>Wenn ein Script <a href="#MultiWin">mehrere GUI-Fenster</a> erstellt, hat jedes Fenster seine eigene "aktuelle Schriftart" f&uuml;r die Erstellung neuer Steuerelemente.</p>
      <p>Beachtet zudem, dass das Betriebssystem mehrere Standard-Dialogfenster bereitstellt, die den Benutzer dazu auffordern, eine Schriftart, eine Farbe oder ein Icon auszuw&auml;hlen. Diese Dialogfenster k&ouml;nnen mithilfe von <a href="DllCall.htm">DllCall()</a> angezeigt werden, siehe dazu <a href="http://www.autohotkey.com/forum/topic17230.html">www.autohotkey.com/forum/topic17230.html</a>.</p>
      <p id="fontq"><strong>Q</strong>: <span class="ver">[AHK_L 19+]:</span> Textdarstellungsqualit&auml;t. Zum Beispiel: q3. Nach Q sollte eine Zahl aus der folgenden Tabelle erfolgen:</p>
      <table class="info">
        <tr>
          <td>0 = DEFAULT_QUALITY</td>
          <td>Die Darstellung der Schriftart spielt keine Rolle.</td>
        </tr>
        <tr>
          <td>1 = DRAFT_QUALITY</td>
          <td>Die Darstellung der Schriftart ist ein wenig unwichtiger als wie bei PROOF_QUALITY.</td>
        </tr>
        <tr>
          <td>2 = PROOF_QUALITY</td>
          <td>Die Zeichenqualit&auml;t der Schriftart ist wichtiger als die exakte &Uuml;bereinstimmung mit logischen Schriftattributen (z. B. fett, kursiv und so weiter).</td>
        </tr>
        <tr>
          <td>3 = NONANTIALIASED_QUALITY</td>
          <td>Schrift wird nicht gegl&auml;ttet.<br></td>
        </tr>
        <tr>
          <td>4 = ANTIALIASED_QUALITY</td>
          <td>Schrift wird gegl&auml;ttet, wenn die Schriftart so etwas unterst&uuml;tzt und deren Gr&ouml;&szlig;e nicht zu klein und nicht zu gro&szlig; ist.</td>
        </tr>
        <tr>
          <td>5 = CLEARTYPE_QUALITY</td>
          <td>Windows XP und h&ouml;her: Der Text wird gegebenenfalls mithilfe der ClearType-Kantengl&auml;ttung dargestellt.</td>
        </tr>
      </table>
      <p>Um mehr dar&uuml;ber zu erfahren, was diese Werte bedeuten, siehe <a href="http://msdn.microsoft.com/en-us/library/dd183499.aspx">MSDN: CreateFont</a>.</p>
      <p>Da normalerweise die h&ouml;chste Qualit&auml;tseinstellung als Standardwert verwendet wird, dient diese Option eher dazu, Kantengl&auml;ttung zu deaktivieren, um den Text in bestimmten F&auml;llen besser lesbar zu machen.</p>
      <h2 id="Color">Gui, Color [, Fensterfarbe, Steuerelementfarbe]</h2>
      <p>Bestimmt die Hintergrundfarbe des Fensters und/oder dessen Steuerelemente. Mit der <em>Fensterfarbe</em> wird der Hintergrund des Fensters selbst bestimmt. Die <em>Steuerelementfarbe</em> gilt f&uuml;r alle gegenw&auml;rtigen und zuk&uuml;nftigen Steuerelemente im Fenster (beachtet dabei, dass einige Steuerelemente keine benutzerdefinierten Farben unterst&uuml;tzen). Obwohl die <em>Steuerelementfarbe</em> anfangs von <a href="ListView.htm">ListView</a>- und <a href="TreeView.htm">TreeView</a>-Steuerelemente anerkannt wird, ist deren <em>Steuerelementfarbe</em> nachtr&auml;glich nicht mehr &auml;nderbar. In solchen F&auml;llen kann <code>GuiControl +BackgroundFF9977, EigeneListview</code> verwendet werden, um die Farbe direkt zu &auml;ndern.</p>
      <p>Lasst jeweils den entsprechenden Parameter leer, um die aktuelle Farbe beizubehalten. Andernfalls kann eine Hauptfarbe aus der <a href="Progress.htm#colors">HTML-Farbtabelle</a>, ein 6-stelliger RGB-Wert (0x-Pr&auml;fix ist optional) oder das Wort "Default" f&uuml;r die Standardfarbe angegeben werden. Beispielwerte: Silver, FFFFAA, 0xFFFFAA, Default.</p>
      <p>Standardm&auml;&szlig;ig ist die Hintergrundfarbe des Fensters die Systemfarbe der Schaltfl&auml;chen, und die Hintergrundfarbe des Steuerelements standardm&auml;&szlig;ig die Systemfarbe des Fensters (f&uuml;r gew&ouml;hnlich wei&szlig;).</p>
      <p>Die Farbe der <a href="#Menu">Men&uuml;leiste</a> und deren Untermen&uuml;s kann wie folgt ge&auml;ndert werden: <code><a href="Menu.htm">Menu</a>, EigeneMen&uuml;leiste, Color, White</code></p>
      <p>Um den Hintergrund in Windows 2000/XP oder h&ouml;her transparent zumachen, verwendet <a href="WinSet.htm#TransColor">WinSet TransColor</a>. Falls allerdings ein benutzerdefiniertes Fenster zugewiesen wird, ohne vorher "Gui, Color" definiert zu haben, werden die Schaltfl&auml;chen ebenfalls transparent. Um das zu verhindern, verwendet zun&auml;chst eine benutzerdefinierte Fensterfarbe und macht diese Farbe dann transparent. Zum Beispiel:</p>
      <pre>Gui, Color, EEAA99
Gui +LastFound  <em>; Macht das GUI-Fenster zum <a href="../misc/WinTitle.htm#LastFoundWindow">zuletzt gefundenen Fenster</a>.</em>
WinSet, TransColor, EEAA99</pre>
      <p>Um dabei auch den Rahmen und die Titelleiste des Fensters zu entfernen, verwendet folgenden Befehl, <strong>nachdem</strong> das Fenster transparent gemacht wurde:</p>
      <pre>Gui -Caption  <em>; Oder "<i>Gui, GuiName:-Caption</i>", falls es nicht das <a href="#DefaultWin">Standardfenster</a> ist.</em></pre>
      <p>Die oben genannte Methode wird durch die Bildschirmanzeige (OSD) weiter unten nochmals n&auml;her gebracht.</p>
      <h2 id="Margin">Gui, Margin [, X, Y]</h2>
      <p><strong>X</strong> und <strong>Y</strong> bestimmen die Anzahl an Pixeln, die einen Freiraum an der linken/rechten und oberen/unteren Seite bilden, falls Steuerelemente automatisch positioniert werden, denen eindeutig die <a href="#XY">Koordinaten X und Y</a> fehlen. Au&szlig;erdem werden diese Abst&auml;nde dazu verwendet, den vertikalen und horizontalen Abstand zwischen den automatisch positionierten Steuerelementen festzulegen. Schlussendlich werden die Abst&auml;nde zur Berechnung der Fenstergr&ouml;&szlig;e ber&uuml;cksichtigt, sobald <a href="#Show">Gui Show</a> das erste Mal verwendet wird (falls keine eindeutige Gr&ouml;&szlig;e angegeben wurden ist).</p>
      <p>Sobald dieser Befehl nicht verwendet wird und das Fenster mindestens ein Steuerelement hat, errechnen sich die Standardabst&auml;nde an allen Seiten proportional zur ausgew&auml;hlten <a href="#Font">Schriftart</a> (0.75 x Schrifth&ouml;he f&uuml;r Unten &amp; Oben, 1.25 x Schriftbreite f&uuml;r Links &amp; Rechts).</p>
      <p>Obwohl die Abst&auml;nde ge&auml;ndert werden k&ouml;nnen, w&auml;hrend Steuerelemente hinzugef&uuml;gt werden, werden solche &Auml;nderungen nur f&uuml;r Steuerelemente wirksam, die nachtr&auml;glich hinzugef&uuml;gt werden. Sobald einer der Parameter leer gelassen wird, bleibt der entsprechende Abstand unver&auml;ndert.</p>
      <h2 id="Options">Gui, +/-Option1 +/-Option2 ...</h2>
      <p>Nach dem GUI-Befehl k&ouml;nnen mehrere Optionen angegeben werden. Aus Performance-Gr&uuml;nden ist es besser, alle Optionen auf einer Zeile zu setzen, bevor das Fenster erstellt wird (das hei&szlig;t, bevor andere Unterbefehle wie <a href="#Add">Gui Add</a> verwendet werden).</p>
      <p>Der Effekt des Befehls ist kumulativ (summierend). Das hei&szlig;t, dass dieser Befehl nur Einstellungen &auml;ndert, die direkt angegeben wurden sind, alle anderen bleiben unver&auml;ndert.</p>
      <p>Mit einem Plus- oder Minuszeichen kann eine Option jeweils hinzugef&uuml;gt oder entfernt werden. Zum Beispiel:</p>
      <pre>Gui +Resize -MaximizeBox  <em>; &Auml;ndert die Einstellungen des <a href="#DefaultWin">Standard</a>-GUI-Fensters.</em>
Gui <strong>EigenesGui:</strong>+Resize -MaximizeBox  <em>; &Auml;ndert die Einstellungen des GUI's namens <i>EigenesGui</i>.</em></pre>
      <p><strong>AlwaysOnTop</strong>: Das Fenster bleibt in der Z-Rangordnung ganz oben, hat den gleichen Effekt wie "<a href="WinSet.htm">WinSet</a> AlwaysOnTop".</p>
      <p><strong>Border</strong>: Das Fenster erh&auml;lt einen d&uuml;nnen Rahmen. Das ist un&uuml;blich.</p>
      <p><strong>Caption</strong> (standardm&auml;&szlig;ig vorhanden): Das Fenster erh&auml;lt eine Titelleiste und einen dicken Rahmen. Die Titelleiste sollte erst nach <a href="WinSet.htm#TransColor">WinSet TransColor</a> entfernt werden.</p>
      <p id="Delimiter"><strong>Delimiter</strong>: Bestimmt, dass das Fenster ein Trennzeichen au&szlig;er senkrechter Strich (|) verwenden soll, sobald der Inhalt eines Steuerelements mit <a href="#Add">Gui Add</a> hinzugef&uuml;gt, mit <a href="GuiControl.htm">GuiControl</a> bearbeitet oder mit <a href="#Submit">Gui Submit</a> bzw. <a href="GuiControlGet.htm">GuiControlGet</a> ermittelt wird. F&uuml;gt das gew&uuml;nschte Trennzeichen unmittelbar nach dem Wort Delimiter an. Zum Beispiel wird mit <code>Gui +Delimiter`n</code> ein Zeilenumbruchszeichen verwendet, das besonders gut f&uuml;r <a href="../Scripts.htm#continuation">Fortsetzungsbereiche</a> geeignet ist. Mit <code>Gui +Delimiter|</code> wird das Standardtrennzeichen wiederhergestellt. Benutzt <code>Gui +DelimiterSpace</code> oder <code>Gui +DelimiterTab</code>, um ein Leer- oder Tabulatorzeichen als Trennzeichen zu verwenden. Wurde das Trennzeichen einmal ge&auml;ndert, beeinflusst diese Option alle vorhandenen und nachfolgenden <a href="../misc/Threads.htm">Threads</a>, die dieses bestimmte Fenster bearbeiten.</p>
      <p><strong>Disabled</strong>: Deaktiviert das Fenster und hindert den Benutzer daran, mit den Steuerelementen zu interagieren. Das wird oft bei Fenstern benutzt, die untergeordnete Fenster enthalten (siehe <a href="#Owner">Owner</a>).</p>
      <p id="GuiHwndOutputVar"><strong>Hwnd</strong><em>Ausgabevariable</em> <span class="ver">[v1.1.04+]:</span> Diese Option speichert das Fenster-Handle (HWND) des GUIs in die <em>Ausgabevariable</em>. Zum Beispiel: <code>Gui +HwndEigenesGuiHwnd</code>. Innerhalb einer Funktion wird <em>EigenesGuiHwnd</em> als eine <a href="../Functions.htm#DynVar">dynamische Variable</a> behandelt. Das HWND eines GUIs wird oft mit <a href="PostMessage.htm">PostMessage</a>, <a href="PostMessage.htm">SendMessage</a> und <a href="DllCall.htm">DllCall</a> verwendet. Es kann auch direkt als ein <a href="../misc/WinTitle.htm#ahk_id">ahk_id-Fenstertitel</a> oder anstelle vom GUI-Namen benutzt werden; zum Beispiel <code>Gui %EigenesGuiHwnd%:Destroy</code>.</p>
      <p id="PlusLabel"><strong>Label</strong> <span class="ver">[v1.0.44.09+]:</span> Erm&ouml;glicht benutzerdefinierte Namen f&uuml;r die <a href="#Labels">speziellen Label</a> des Fensters. Zum Beispiel verwendet <code>Gui EigenesGui:+LabelEigenesGui_On</code> die Label EigenesGui_OnClose und EigenesGui_OnSize (falls vorhanden), anstatt EigenesGuiGuiClose und EigenesGuiGuiSize. Das hei&szlig;t, dass der String "EigenesGuiGui" in jedem <a href="#Labels">speziellen Label</a> mit "EigenesGui_On" ersetzt wird. Dadurch k&ouml;nnen sich mehrere Fenster die gleichen Label teilen (in diesem Fall enth&auml;lt <a href="../Variables.htm#Gui">A_Gui</a> das Fenster, das die Subroutine ausgef&uuml;hrt hat).</p>
      <p id="LastFound"><strong>LastFound</strong>: Markiert das aktuelle Fenster als <a href="../misc/WinTitle.htm#LastFoundWindow">zuletzt gefundenes Fenster</a> (in einem <a href="#DefaultWin">GUI-Thread</a> unn&ouml;tig, weil das dort automatisch erfolgt). Dadurch wird erm&ouml;glicht, dass das Fenster von Befehlen wie <a href="WinSet.htm">WinSet</a> bearbeitet werden kann, selbst wenn es versteckt ist (das hei&szlig;t, dass <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> nicht ben&ouml;tigt wird). Das ist besonders n&uuml;tzlich, um die Eigenschaften des Fensters zu &auml;ndern, bevor es angezeigt wird. Zum Beispiel:</p>
      <pre>Gui +LastFound
WinSet, TransColor, %BeliebigeFarbe% 150
Gui Show</pre>
      <p id="LastFoundExist"><strong>LastFoundExist</strong> <span class="ver">[v1.0.43.09+]:</span> Im Gegensatz zu den anderen Optionen wird LastFoundExist nur erkannt, wenn keine anderen Optionen auf derselben Zeile stehen. <em>+LastFoundExist</em> ist das Gleiche wie <em>+LastFound</em>, au&szlig;er dass das Fenster nicht erstellt wird, falls es noch nicht vorhanden ist. Diese Option wird haupts&auml;chlich verwendet, um zu erkennen, ob ein bestimmtes GUI-Fenster bereits existiert. Zum Beispiel:</p>
      <pre>Gui EigenesGui:+LastFoundExist
IfWinExist
    MsgBox GUI "EigenesGui" existiert bereits.</pre>
      <p><strong>MaximizeBox</strong>: Aktiviert die Maximieren-Schaltfl&auml;che in der Titelleiste. Diese Option ist bei <em>Resize</em> inbegriffen.</p>
      <p><strong>MinimizeBox</strong> (standardm&auml;&szlig;ig vorhanden): Aktiviert die Minimieren-Schaltfl&auml;che in der Titelleiste.</p>
      <p id="MinSize"><strong>MinSize</strong> und <strong>MaxSize</strong> <span class="ver">[v1.0.44.13+]:</span> Bestimmt die minimale und/oder maximale Gr&ouml;&szlig;e des Fensters, wenn der Benutzer beispielsweise die Gr&ouml;&szlig;e des Fensters durch Ziehen an den Ecken &auml;ndern will. Sobald die W&ouml;rter <em>MinSize</em> und/oder <em>MaxSize</em> ohne Suffix angegeben werden, wird die aktuelle Fenstergr&ouml;&szlig;e als Begrenzung verwendet (wenn das Fenster keine aktuelle Gr&ouml;&szlig;e hat, wird die zuerst verwendete Gr&ouml;&szlig;e von <a href="#Show">Gui Show</a> benutzt). Alternativ kann die Breite, gefolgt von einem "x" und der H&ouml;he, angef&uuml;gt werden: <code>Gui +Resize +MinSize640x480</code>. Die Abmessungen sind in Pixel und bestimmen die Gr&ouml;&szlig;e des Client-Bereichs im Fenster (der Client-Bereich schlie&szlig;t Rahmen, Titelleiste und <a href="#Menu">Men&uuml;leiste</a> des Fensters aus). Jede Zahl muss dezimal angegeben werden.</p>
      <p>Breite und/oder H&ouml;he k&ouml;nnen weggelassen werden, damit diese jeweils unver&auml;ndert bleiben (z. B. <em>+MinSize640x</em> oder <em>+MinSizex480</em>). Dar&uuml;ber hinaus kann Min/MaxSize mehrmals angegeben werden, um die aktuelle Fenstergr&ouml;&szlig;e f&uuml;r eine Abmessung und eine eindeutige Gr&ouml;&szlig;e f&uuml;r die andere Abmessung zu verwenden. Zum Beispiel verwendet <em>+MinSize +MinSize640x</em> die aktuelle Fenstergr&ouml;&szlig;e f&uuml;r die H&ouml;he und 640 f&uuml;r die Breite.</p>
      <p>Wenn <em>MinSize</em> und <em>MaxSize</em> nicht vorhanden sind, werden die Standardwerte des Betriebssystems verwendet (vergleichbar mit <em>Gui -MinSize -MaxSize</em>, um die Standardwerte wiederherzustellen). Hinweis: das Fenster muss <a href="#Resize">+Resize</a> enthalten, damit der Benutzer in der Lage ist, die Gr&ouml;&szlig;e zu &auml;ndern).</p>
      <p id="OwnDialogs"><strong>OwnDialogs</strong>: <code>Gui +OwnDialogs</code> sollte in jedem <a href="../misc/Threads.htm">Thread</a> (wie eine ButtonOK-Subroutine) angegeben werden, der <a href="MsgBox.htm">MsgBox</a>-, <a href="InputBox.htm">InputBox</a>-, <a href="FileSelectFile.htm">FileSelectFile</a>- oder <a href="FileSelectFolder.htm">FileSelectFolder</a>-Dialogfenster anzeigt, um diese unterzuordnen. Solche Dialogfenster werden dabei modal. Das hei&szlig;t, dass der Benutzer erst wieder mit dem GUI-Fenster interagieren kann, wenn das Dialogfenster geschlossen wird. <a href="ToolTip.htm">ToolTip</a>-, <a href="Progress.htm">Progress</a>- und <a href="Progress.htm">SplashImage</a>-Fenster k&ouml;nnen hingegen nicht modal sein, selbst wenn sie untergeordnet werden. Sie bleiben lediglich immer im Vordergrund. In jedem Fall werden untergeordnete Dialogfenster automatisch zerst&ouml;rt, sobald ihr GUI-Fenster <a href="#Destroy">zerst&ouml;rt</a> wird.</p>
      <p>Normalerweise ist es nicht notwendig, diese Einstellung wieder zu deaktivieren, weil sie andere <a href="../misc/Threads.htm">Threads</a> nicht beeinflusst. Falls ein Thread sowohl untergeordnete als auch nicht-untergeordnete Dialogfenster anzeigen muss, kann diese Einstellung mittels <code>Gui -OwnDialogs</code> deaktiviert werden.</p>
      <p>Wenn kein Fensternamepr&auml;fix vorhanden ist (wenn beispielsweise <code>Gui +OwnDialogs</code> anstelle von <code>Gui EigenesGui:+OwnDialogs</code> verwendet wird), werden die Dialogfenster dem <a href="#DefaultWin">Standardfenster des Threads</a> untergeordnet.</p>
      <p id="Owner"><strong>Owner</strong>: Mit <em>+Owner</em> wird das Fenster einem anderen untergeordnet. Ein untergeordnetes Fenster hat standardm&auml;&szlig;ig keine eigene Schaltfl&auml;che in der Taskleiste und befindet sich immer im Vordergrund, sobald es sichtbar ist. Dieses Fenster wird automatisch zerst&ouml;rt, sobald das dazugeh&ouml;rige GUI-Fenster zerst&ouml;rt wird. <em>+Owner</em> darf erst <u>nach</u> der Erstellung des &uuml;bergeordneten Fensters verwendet werden, aber seit v1.1.05 auch vor und nach der Erstellung des untergeordneten Fensters. Es gibt zwei M&ouml;glichkeiten, +Owner wie folgt zu verwenden:</p>
      <pre>Gui, EigenesGui:+OwnerAnderesGui  <em>; <i>EigenesGui</i> wird <i>AnderesGui</i> untergeordnet.</em>
Gui, EigenesGui:+Owner  <em>; <i>EigenesGui</i> wird dem <a href="Menu.htm#MainWindow">Hauptfenster des Scripts</a> untergeordnet, um die Schaltfl&auml;che in der Taskleiste zu unterdr&uuml;cken.</em></pre>
      <p><span class="ver">[v1.1.03+]:</span> Unmittelbar nach <em>+Owner</em> kann der <a href="#Name">Name</a> oder die Nummer eines vorhandenen Gui-Fensters, oder das <a href="WinGet.htm#ID">HWND</a> eines beliebigen Fensters auf h&ouml;chster Ebene erfolgen.</p>
      <p>Um den Benutzer daran zu hindern, beim Anzeigen eines untergeordneten Fensters mit dem &uuml;bergeordneten Fenster zu interagieren, deaktiviert das &uuml;bergeordnete Fenster mit <code>Gui +Disabled</code>. Sobald das untergeordnete Fenster geschlossen oder zerst&ouml;rt wird, kann das &uuml;bergeordnete Fenster wieder mit <code>Gui -Disabled</code> aktiviert werden. Au&szlig;erdem sollte das getan werden, bevor das Fenster geschlossen bzw. zerst&ouml;rt wird, damit das &uuml;bergeordnete Fenster wieder automatisch aktiviert wird.</p>
      <p id="Parent"><strong>Parent</strong> <span class="ver">[v1.1.03+]</span>: Unmittelbar nach <em>+Parent</em> kann der <a href="#Name">Name</a> oder die Nummer eines vorhandenen Gui-Fensters, oder das <a href="WinGet.htm#ID">HWND</a> eines beliebigen Fensters oder Steuerelements angegeben werden, damit es diesem Fenster zugeordnet wird. Um das Gui-Fenster wieder in einem Fenster auf h&ouml;chster Ebene umzuwandeln, verwendet <em>-Parent</em>. Diese Option funktioniert auch, nachdem das Fenster erstellt wurde.</p>
      <p id="Resize"><strong>Resize</strong>: Erm&ouml;glicht, dass die Fenstergr&ouml;&szlig;e vom Benutzer anpassbar ist und aktiviert zudem die Maximieren-Schaltfl&auml;che in der Titelleiste. Mit <em>+Resize -MaximizeBox</em> wird die Maximieren-Schaltfl&auml;che unterdr&uuml;ckt.</p>
      <p><strong>SysMenu</strong> (standardm&auml;&szlig;ig vorhanden): Mit <em>-SysMenu</em> wird das Systemmen&uuml; und Icon von der oberen linken Ecke des Fensters entfernt. Dadurch entfallen auch die Schaltfl&auml;chen f&uuml;rs Minimieren, Maximieren und Schlie&szlig;en.</p>
      <p id="Theme"><strong>Theme</strong>: Mit <em>-Theme</em> haben alle nachfolgenden Steuerelemente im Fenster das klassische Design (nur ab Windows XP). Um danach zus&auml;tzliche Steuerelemente hinzuzuf&uuml;gen, die das aktuelle Design ber&uuml;cksichtigen, verwendet <em>+Theme</em>. Hinweis: Diese Option funktioniert nicht in Betriebssystemen, die &auml;lter als Windows XP sind oder wenn in Windows XP das klassische Design aktiv ist. Letztendlich ist es&nbsp; m&ouml;glich, die Option auch bei einzelnen Steuerelementen mittels <em>+Theme</em> oder <em>-Theme</em> zu &auml;ndern.</p>
      <p><strong>ToolWindow</strong>: Das Fenster hat eine schmale Titelleiste, aber keine Schaltfl&auml;che in der Taskleiste.</p>
      <p><strong>(Unbenannter Style)</strong>: Verwendet ein Plus- oder Minuszeichen, gefolgt von einer dezimalen oder hexadezimalen <a href="../misc/Styles.htm">Style-Nummer</a>.</p>
      <p><strong>(Unbenannter ExStyle)</strong>: Verwendet ein Plus- oder Minuszeichen, gefolgt von dem Buchstaben "E" und einer dezimalen oder hexadezimalen erweiterten Style-Nummer. <em>+E0x40000</em> beispielsweise f&uuml;gt den WS_EX_APPWINDOW-Style hinzu, um die Taskleistenschaltfl&auml;che des Fensters zu erzwingen. Weitere nicht-dokumentierte Styles findet man auf <a href="http://www.microsoft.com">www.microsoft.com</a>, z. B. mit der Suche nach WS_EX_APPWINDOW.</p>
      <h2 id="Menu">Gui, Menu [, Men&uuml;name]</h2>
      <p>F&uuml;gt eine Men&uuml;leiste an das Fenster. Verwendet den <a href="Menu.htm">Menu</a>-Befehl, um hierf&uuml;r ein normales Men&uuml; zu erstellen. Zum Beispiel:</p>
      <pre>Menu, Dateimen&uuml;, Add, &Ouml;&amp;ffnen<a href="_EscapeChar.htm">`t</a>Ctrl+F, Men&uuml;Datei&Ouml;ffnen  <em>; Siehe untere Bemerkungen f&uuml;r Ctrl+F.</em>
Menu, Dateimen&uuml;, Add, &amp;Beenden, MenuHandler
Menu, Hilfsmen&uuml;, Add, Inf&amp;o, MenuHandler
Menu, EigeneMen&uuml;leiste, Add, &amp;Datei, :Dateimen&uuml;  <em>; F&uuml;gt die oben erstellten Untermen&uuml;s hinzu.</em>
Menu, EigeneMen&uuml;leiste, Add, &amp;?, :Hilfsmen&uuml;
<strong>Gui, Menu, EigeneMen&uuml;leiste</strong></pre>
      <p>Wie bereits bemerkt, erfolgt nach &Ouml;&amp;ffnen die Tastenkombination <kbd>Ctrl</kbd>+<kbd>F</kbd> (mit einem Tabulatorzeichen dazwischen). Das ist eine Tastenkombination, die der Benutzer dr&uuml;cken k&ouml;nnte, um den Men&uuml;punkt auf alternative Weise aufzurufen. <span class="ver">[v1.1.04+]:</span> Falls die Tastenkombination normale Modifikatortasten wie Ctrl, Alt oder Shift enth&auml;lt (Anm. d. &Uuml;bers.: die deutschen Bezeichnungen Strg und Umschalt sind zurzeit nicht m&ouml;glich), wird diese automatisch als <em>Tastaturk&uuml;rzel</em> f&uuml;r das GUI registriert. Tastaturk&uuml;rzel mit nur einem Zeichen und ohne Modifikatoren sind von der Gro&szlig;- und Kleinschreibung abh&auml;ngig und k&ouml;nnen durch ungew&ouml;hnliche Mitteln wie IME oder Alt+NNNN ausgel&ouml;st werden.</p>
      <p>Wenn eine bestimmte Tastenkombination nicht automatisch funktioniert, dann muss daf&uuml;r m&ouml;glicherweise ein <a href="_IfWinActive.htm">kontextabh&auml;ngiger Hotkey</a> verwendet werden. Beachtet aber, dass solche Hotkeys normalerweise nicht durch <a href="Send.htm">Send</a> ausgel&ouml;st werden k&ouml;nnen und dass sie eher andere Scripts st&ouml;ren, anstatt ein Standard-Tastaturk&uuml;rzel zu sein.</p>
      <p>Um die aktuelle Men&uuml;leiste eines Fensters zu entfernen, verwendet <code>Gui Menu</code> (also ohne letzten Parameter).</p>
      <p>Sobald ein Men&uuml; als Men&uuml;leiste verwendet wird, sollte dieses Men&uuml; nicht l&auml;nger als Popup-Men&uuml; oder Untermen&uuml; eingesetzt werden. Denn die Men&uuml;leisten ben&ouml;tigen intern ein anderes Format (allerdings gilt diese Einschr&auml;nkung nur f&uuml;r die Men&uuml;leiste selbst, nicht f&uuml;r die Untermen&uuml;s). Als &Uuml;bergangsl&ouml;sung k&ouml;nnten zwei identische Men&uuml;s erstellt werden, wobei das erste als Men&uuml;leiste und das zweite als etwas anderes verwendet wird.</p>
      <p>Die Verwendung von destruktiven <a href="Menu.htm">Menu-Befehlen</a> wie Delete und DeleteAll bei einem Men&uuml;, das zurzeit als Men&uuml;leiste eingesetzt wird (und in einigen F&auml;llen auch deren Untermen&uuml;s) wird nicht unterst&uuml;tzt und zeigt eine Fehlermeldung an (es sei denn, <a href="Menu.htm">UseErrorLevel</a> ist aktiv). Befolgt folgende Schritte, um solche &Auml;nderungen vornehmen zu k&ouml;nnen: <br>
      </p>
      <ol>
        <li>Die Men&uuml;leiste mit <code>Gui Menu</code> entfernen (also <em>Men&uuml;name</em> weglassen)</li>
        <li>&Auml;nderungen durchf&uuml;hren</li>
        <li>Die Men&uuml;leiste mit <code>Gui, Menu, EigeneMen&uuml;leiste</code> wieder anf&uuml;gen.</li>
      </ol>
      <h2 id="Minimize">Gui, Hide / Minimize / Maximize / Restore</h2>
      <p>"Gui Hide" ist gleichbedeutend mit <a href="#Cancel">Gui Cancel</a>. Die anderen drei Befehle machen das Fenster je nach Bedarf wieder sichtbar und f&uuml;hren dann die entsprechenden Operationen aus. Falls das Fenster nicht vorhanden ist (da es beispielsweise durch <a href="#Destroy">Gui Destroy</a> zerst&ouml;rt wurde), zeigen diese Befehle keine Wirkung.</p>
      <h2 id="Flash">Gui, Flash [, Off]</h2>
      <p>Die Taskleistenschaltfl&auml;che des Fensters f&auml;ngt an zu blinken. Dabei wird die Farbe der Titelleiste und/oder die Farbe der Taskleistenschaltfl&auml;che invertiert. Das optionale Wort "OFF" stellt die urspr&uuml;nglichen Farben der Titelleiste und die Farben der Taskleistenschaltfl&auml;che wieder her (das aber vom Betriebssystem abh&auml;ngig ist). Im folgenden Beispiel blinkt das Fenster dreimal auf, weil jeweils ein Paar von "Gui Flash" die Darstellung invertiert und wiederherstellt:</p>
      <pre>Loop 6
{
    Gui Flash
    Sleep, 500  <em>; Dieser Wert ist ziemlich empfindlich; &Auml;nderungen k&ouml;nnen zu unerwarteten Ergebnissen f&uuml;hren.</em>
}</pre>
      <h2 id="Default">Gui, GuiName:Default</h2>
      <p>&Auml;ndert den <a href="#MultiWin">GUI-Standardfensternamen</a> des <a href="../misc/Threads.htm">aktuellen Threads</a>, der verwendet wird, sobald kein Fenstername f&uuml;r <a href="GuiControl.htm">GuiControl</a>, <a href="GuiControlGet.htm">GuiControlGet</a> und den Gui-Befehl selbst angegeben ist. Im folgenden Beispiel wird der Standardname des Fensters auf "EigenesGui" gesetzt: <code>Gui EigenesGui:Default</code>. In "<a href="#DefaultWin">Standardnummer eines Threads</a>" k&ouml;nnen noch mehr Informationen &uuml;ber das Standardfenster gefunden werden.</p>
      <h2 id="Position">Positionierung und Layout mittels SmartGUI Creator </h2>
      <p>Obwohl die Optionen im n&auml;chsten Abschnitt f&uuml;r einfache Layout ausreichen, k&ouml;nnte der SmartGUI Creator von Rajat als einfacher empfunden werden, da hierbei ein GUI-Fenster komplett visuell erstellt wird. Das hei&szlig;t, es wird das erstellt, was man auch sieht (WYSIWYG). Der SmartGUI Creator ist kostenlos und kann auf <a href="http://www.autohotkey.com/docs/SmartGUI/">www.autohotkey.com/docs/SmartGUI/</a> heruntergeladen werden.</p>
      <h2 id="PosSize">Position und Gr&ouml;&szlig;e von Steuerelementen anpassen</h2>
      <p>Sobald einige Abmessungen oder Koordinaten in den <em>Optionen</em> weggelassen werden, wird das Steuerelement relativ zum vorherigen Steuerelement positioniert und/oder dessen Gr&ouml;&szlig;e abh&auml;ngig vom Inhalt automatisch angepasst.</p>
      <p>Die folgenden Optionen werden unterst&uuml;tzt:</p>
      <p id="R"><strong>R</strong>: Textzeilen (kann eine Flie&szlig;kommazahl wie bei R2.5 enthalten). <strong>R</strong> ist meist besser als <strong>H</strong> (H&ouml;he). Falls sowohl <strong>R</strong> als auch <strong>H</strong> vorhanden ist, hat <strong>R</strong> Vorrang. Bei einer GroupBox wird damit die Menge an Steuerelementen bestimmt, um innerhalb der Box Platz zu schaffen. Bei <a href="GuiControls.htm#DropDownList">DropDownList</a>-, <a href="GuiControls.htm#ComboBox">ComboBox</a>- und <a href="GuiControls.htm#ListBox">ListBox</a>-Steuerelementen wird damit die Anzahl an Eintr&auml;gen bestimmt, die gleichzeitig im Listenbereich sichtbar sind (aber in Windows XP oder h&ouml;her ist es oft besser, bei DropDownList- und ComboBox-Steuerelementen sowohl <strong>R</strong> als auch <strong>H</strong>&nbsp; wegzulassen, damit die aufklappbare Liste automatisch die verf&uuml;gbare H&ouml;he des Desktops ausnutzt). Bei allen anderen Steuerelementen wird damit die Anzahl an Zeilen bestimmt, die sichtbar in den Steuerelement passen.</p>
      <p><strong>W</strong>: Breite in Pixeln. Ohne diese Option wird die Breite bei einigen Steuerelementarten automatisch berechnet, abh&auml;ngig vom Inhalt. Alle anderen Steuerelementarten haben standardm&auml;&szlig;ig folgende Breiten:<br>
        Tab-Steuerelemente: Das 30-fache der aktuellen Schriftgr&ouml;&szlig;e, plus das 3-fache des <a href="#Margin">X-Abstands</a>.<br>
        Vertikaler Fortschrittsbalken: Das 2-fache der aktuellen Schriftgr&ouml;&szlig;e.<br>
        Horizontaler Fortschrittsbalken, horizontaler Schieberegler, DropDownList, ComboBox, ListBox, GroupBox, Edit und Hotkey: Das 15-fache der aktuellen Schriftgr&ouml;&szlig;e (Ausnahme: GroupBox wird mit 18 multipliziert, um  innerhalb der Abst&auml;nde Platz zu schaffen).</p>
      <p><strong>H</strong>: H&ouml;he in Pixeln. Falls sowohl <strong>H</strong> als auch <strong>R</strong> nicht vorhanden ist, haben DropDownList-, ComboBox-, ListBox- und leere mehrzeilige Steuerelemente standardm&auml;&szlig;ig eine H&ouml;he von 3 Zeilen; GroupBox-Steuerelemente standardm&auml;&szlig;ig 2 Zeilen; vertikale Schieberegler und Fortschrittsbalken standardm&auml;&szlig;ig 5 Zeilen; horizontale Schieberegler standardm&auml;&szlig;ig 30 Pixel (au&szlig;er wenn eine Dicke angegeben wurde); horizontale Fortschrittsbalken standardm&auml;&szlig;ig das 2-fache der aktuellen Schriftgr&ouml;&szlig;e; Hotkey-Steuerelemente standardm&auml;&szlig;ig eine Zeile; und Tab-Steuerelemente standardm&auml;&szlig;ig 10 Zeilen. Bei allen anderen Steuerelementen berechnet sich deren H&ouml;he in Abh&auml;ngigkeit der Inhalte. Beachtet, dass sich <strong>H</strong> bei DropDownList- und ComboBox-Steuerelementen aus dem immer sichtbaren Teil und dem dazugeh&ouml;rigen Listenbereich zusammensetzt (selbst wenn die H&ouml;he zu niedrig ist, wird mindestens immer ein Eintrag in der Liste angezeigt). Auch hier gilt, besser <strong>R</strong> anstelle von <strong>H</strong> zu verwenden, um unvollst&auml;ndige Zeilen zu vermeiden.</p>
      <p><strong>wp+n</strong>, <strong>hp+n</strong>, <strong>wp-n</strong> und <strong>hp-n</strong> (wobei <strong>n</strong> eine beliebige Zahl ist) k&ouml;nnen dazu verwendet werden, beim aktuellen Steuerelement die Breite und/oder H&ouml;he des vorherigen Steuerelements zu setzen, optional mit einem Plus- oder Minuszeichen. Mit wp beispielsweise wird die Breite des vorherigen Steuerelements verwendet und mit wp-50 die Breite des vorherigen Steuerelements, subtrahiert mit 50.</p>
      <p id="XY"><strong>X</strong>: X-Position. Zum Beispiel wird mit "x0 y0" das Steuerelement in die obere linke Ecke des Client-Bereichs positioniert (Der Client-Bereich schlie&szlig;t Rahmen, Titelleiste und Men&uuml;leiste des Fensters aus). Wenn <strong>X</strong> weggelassen und <strong>Y</strong> beibehalten wird, wird das Steuerelement auf der rechten Seite der zuvor eingef&uuml;gten Steuerelementen positioniert, sozusagen als neue "Spalte".</p>
      <p><strong>Y</strong>: Y-Position. Wenn <strong>Y</strong> weggelassen und <strong>X</strong> beibehalten wird, wird das Steuerelement unter den zuvor eingef&uuml;gten Steuerelementen positioniert, sozusagen als neue "Zeile".</p>
      <p>Das Weglassen von <strong>X</strong> und/oder <strong>Y</strong> hilft dabei, dass sich ein GUI-Layout automatisch anpasst, falls die Gr&ouml;&szlig;e eines Steuerelements oder die Schriftart zu einem sp&auml;teren Zeitpunkt ge&auml;ndert wird. Sollte dagegen bei jedem Steuerelement ein absoluter Wert angegeben werden, ist man gezwungen, alle darunter- oder danebenliegende Steuerelemente manuell neu zu positionieren.</p>
      <p>Sobald <strong>X</strong> als auch <strong>Y</strong> weggelassen wird, wird das Steuerelement mithilfe des Standard-Innenabstandes unter den zuvor eingef&uuml;gten Steuerelementen positioniert.</p>
      <p id="PosPlus">Optional kann ein Pluszeichen bei <strong>X</strong> und <strong>Y</strong> verwendet werden, um ein Steuerelement relativ zum rechten oder unteren Rand des zuvor eingef&uuml;gten Steuerelements zu positionieren. Zum Beispiel wird mit Y+10 das Steuerelement 10 Pixel unterhalb des vorherigen Steuerelements positioniert, unabh&auml;ngig vom Innenabstand. Mit X+10 wiederum wird das Steuerelement 10 Pixel rechts vom vorherigen Steuerelement positioniert. Da negative Zahlen wie X-10 f&uuml;r die absolute Positionierung vorbehalten sind, ist es notwendig, bei einem negativen Offset ein Pluszeichen voranzustellen. Zum Beispiel: X+-10</p>
      <p><strong>xp+n</strong>, <strong>yp+n</strong>, <strong>xp-n</strong> und <strong>yp-n</strong> (wobei <strong>n</strong> eine beliebige Zahl ist) k&ouml;nnen dazu verwendet werden, Steuerelemente relativ zur linken oberen Ecke des vorherigen Steuerelements zu positionieren, um zum Beispiel Steuerelemente in einer <a href="GuiControls.htm#GroupBox">GroupBox</a> einzuschlie&szlig;en.</p>
      <p><strong>xm</strong> und <strong>ym</strong> k&ouml;nnen dazu verwendet werden, ein Steuerelement jeweils am linken und rechten <a href="#Margin">Abstand</a> des Fensters zu positionieren (nach diesen Optionen kann ein Plus-/Minuszeichen und eine Zahl folgen). Sobald <strong>ym</strong> ohne jegliche X-Position angegeben wird, wird das Steuerelement am oberen Abstand positioniert, aber auf der rechten Seite von zuvor eingef&uuml;gten Steuerelementen, sozusagen als neue "Spalte". Das Gegenteil davon (<strong>xm</strong> ohne Y-Position) funktioniert genauso.</p>
      <p id="xs"><strong>xs</strong> und <strong>ys</strong> bewirken das &auml;hnliche wie <strong>xm</strong> und <strong>ym</strong>, nur dass sie sich auf Koordinaten beziehen, die vorher bei einem Steuerelement mit der Option <a href="#Section">Section</a> gespeichert wurden (das erste Steuerelement eines Fensters beginnt immer eine neue Sektion, auch wenn dieses Wort nicht direkt angegeben wurde). Sobald <strong>ys</strong> ohne jegliche  X-Position angegeben wird, wird das Steuerelement auf die zuvor gespeicherte Y-Position positioniert, aber auf der rechten Seite von zuvor eingef&uuml;gten Steuerelementen, nachdem <a href="#Section">Section</a> zuletzt verwendet wurde; sozusagen als neue "Spalte" innerhalb der Sektion. Zum Beispiel:</p>
      <pre>Gui, Add, Edit, w600  <em>; F&uuml;gt ein breites Eingabefeld am oberen Rand des Fensters hinzu.</em>
Gui, Add, Text, <strong>Section</strong>, Vorname:  <em>; Speichert die Position des Steuerelements und beginnt eine neue Sektion.</em>
Gui, Add, Text,, Nachname:
Gui, Add, Edit, <strong>ys</strong>  <em>; Beginnt eine neue Spalte innerhalb dieser Sektion.</em>
Gui, Add, Edit
Gui, Show</pre>
      <p>Das Gegenteil davon (<strong>xs</strong> ohne Y-Position) funktioniert genauso.</p>
      <p>Optional kann nach <strong>xs</strong> und <strong>ys</strong> ein Plus-/Minuszeichen und eine Zahl erfolgen. Au&szlig;erdem ist es m&ouml;glich, sowohl das Wort <a href="#Section">Section</a> als auch xs/ys in den Optionen des Steuerelements anzugeben. Das hei&szlig;t, dass das Steuerelement die vorherige Sektion noch f&uuml;r sich selbst verwendet, aber f&uuml;r nachfolgende Steuerelemente eine neue Sektion erstellt.</p>
      <h2 id="Events">Speichern von und Reagieren auf Benutzereingaben</h2>
      <p id="var"><strong>V</strong>: Variable. Verbindet eine Variable mit einem Steuerelement. Nach dem Buchstaben V erfolgt der Name einer globalen Variable (oder auch einer <a href="../Functions.htm#ByRef">lokale ByRef-Variable</a>, die sich auf eine globale Variable bezieht, oder seit v1.0.46.01 auch auf eine <a href="../Functions.htm#static">statische Variable</a>). Zum Beispiel wird mit <em><strong>v</strong>EigenesEdit</em> der Inhalt des Steuerelements in die <em>EigenesEdit</em>-Variable gespeichert, sobald <a href="#Submit">Gui Submit</a> verwendet wird. Falls ein Steuerelement nicht eingabef&auml;hig ist (z. B. Text oder GroupBox), k&ouml;nnte es dennoch mit einer Variable verbunden werden, weil der Variablenname bei <a href="GuiControl.htm">GuiControl</a>, <a href="GuiControlGet.htm">GuiControlGet</a> und <a href="../Variables.htm#GuiControl">A_GuiControl</a> als eindeutige Steuerelement-ID dient. Hinweis: <a href="#Submit">Gui Submit</a> &auml;ndert nicht den Inhalt von Variablen, die mit eingabef&auml;higen (z. B. Text oder GroupBox) oder sonstigen (z. B. <a href="ListView.htm">ListView</a> und <a href="TreeView.htm">TreeView</a>) Steuerelementen verbunden wurden.</p>
      <p id="label"><strong>G</strong>: Gosub (g-Label). Startet automatisch eine Subroutine, sobald ein Steuerelement angeklickt oder ge&auml;ndert wird. Nach dem Buchstaben G erfolgt der Name des <a href="../misc/Labels.htm">Labels</a>, das ausgef&uuml;hrt werden soll. Desweiteren k&ouml;nnte gCancel angegeben werden, um <a href="#Cancel">Gui Cancel</a> indirekt durchzuf&uuml;hren (sobald ein Label namens "Cancel" vorhanden ist, wird dieser stattdessen ausgef&uuml;hrt). Die Subroutine kann auf folgende interne Variablen zur&uuml;ckgreifen: <a href="../Variables.htm#Gui">A_Gui</a>, <a href="../Variables.htm#GuiControl">A_GuiControl</a>, <a href="../Variables.htm#GuiEvent">A_GuiEvent</a> und <a href="../Variables.htm#EventInfo">A_EventInfo</a>.</p>
      <h2 id="OtherOptions">Steuerelemente: Gew&ouml;hnliche Styles und Optionen</h2>
      <p>Hinweis: Vorzeichenlose Eigenschaften werden standardm&auml;&szlig;ig hinzugef&uuml;gt; zum Beispiel ist Wrap das Gleiche wie +Wrap. Mit -Wrap wird hingegen die entsprechende Eigenschaft entfernt.</p>
      <p id="AltSubmit"><strong>AltSubmit</strong>: Verwendet eine alternative Methode von Submit. Sobald der ausgew&auml;hlte Eintrag einer DropDownList, ComboBox oder ListBox mithilfe von <a href="Gui.htm#Submit">Gui Submit</a> ermittelt wird, wird anstelle des Textes die Positionsnummer gespeichert. Falls kein Eintrag ausgew&auml;hlt ist, wird die ComboBox den Text weiterhin in das Eingabefeld speichern; DropDownList oder ListBox machen ihre <a href="#var">Ausgabevariablen</a> weiterhin leer. Hinweis: AltSubmit beeinflusst auch das Verhalten von <a href="GuiControlGet.htm">GuiControlGet,</a> wenn der Inhalt von solchen Steuerelementen abgerufen wird.</p>
      <p><strong>C</strong>: Farbe des Textes (funktioniert nicht bei <a href="GuiControls.htm#Button">Schaltfl&auml;chen</a>). Nach dem Buchstaben C erfolgt der Name einer Farbe (siehe <a href="Progress.htm#colors">Farbtabelle</a>) oder ein RGB-Wert (das 0x-Pr&auml;fix ist optional). Beispiele: cRed, cFF2211, c0xFF2211, cDefault</p>
      <p><strong>Disabled</strong>: Deaktiviert ein eingabef&auml;higes Steuerelement. Das hei&szlig;t, dass der Benutzer es nicht l&auml;nger fokussieren oder dessen Inhalt &auml;ndern kann. Mit <code><a href="GuiControl.htm">GuiControl</a> Enable</code> kann das Steuerelement wieder aktiviert werden. Hinweis: Um ein Eingabefeld stattdessen in den Schreibschutzmodus zu versetzen, verwendet den String ReadOnly. Nach dem Wort Disabled kann auch eine 0 oder 1 f&uuml;r den Anfangsstatus erfolgen (0 f&uuml;r Aktivieren, 1 f&uuml;r Deaktivieren). Das hei&szlig;t, dass <em>Disabled</em> und <em>Disabled%VarMitEins%</em> identisch sind.</p>
      <p><strong>Hidden</strong>: Das Steuerelement wird sofort versteckt. Mit <code><a href="GuiControl.htm">GuiControl</a> Show</code> kann das Steuerelement wieder sichtbar gemacht werden. Nach dem Wort Hidden kann auch eine 0 oder 1 f&uuml;r den Anfangsstatus erfolgen (0 f&uuml;r sichtbar, 1 f&uuml;r versteckt).  Das hei&szlig;t, dass <em>Hidden</em> und <em>Hidden%VarMitEins%</em> identisch sind.</p>
      <p><strong>Left</strong>: Der Text im Steuerelement wird linksb&uuml;ndig ausgerichtet.</p>
      <p><strong>Right</strong>: Der Text im Steuerelement wird rechtsb&uuml;ndig ausgerichtet. Bei Kontrollk&auml;stchen und Optionsfelder wird die Box auf die rechte Seite verlegt.</p>
      <p><strong>Center</strong>: Der Text im Steuerelement wird horizontal zentriert.</p>
      <p id="Section"><strong>Section</strong>: Beginnt eine neue Sektion und speichert die Position des Steuerelements, damit sie danach mit xs und ys weiterverwendet werden kann (siehe <a href="#xs">oben</a>).</p>
      <p id="Tabstop"><strong>Tabstop</strong>: Mit -Tabstop wird ein eingabef&auml;higes Steuerelement &uuml;bersprungen, sobald der Benutzer die Tabulatortaste dr&uuml;ckt.</p>
      <p id="Wrap"><strong>Wrap</strong>: Aktiviert den automatischen Zeilenumbruch im Steuerelement. Da nahezu alle Steuerelemente den automatischen Zeilenumbruch aktiv haben, ist eher Wrap mit einem Minuszeichen n&ouml;tig, um den automatischen Zeilenumbruch zu deaktivieren.</p>
      <p><strong>VScroll</strong>: Aktiviert die vertikale Bildlaufleiste in einem Steuerelement, wenn m&ouml;glich.</p>
      <p><strong>HScroll</strong>: Aktiviert die horizontale Bildlaufleiste in einem Steuerelement, wenn m&ouml;glich. Der Rest des Abschnitts gilt nur f&uuml;r <a href="GuiControls.htm#ListBox">ListBox</a>-Steuerelemente. Die horizontale Bildlaufbreite ist standardm&auml;&szlig;ig das 3-fache der ListBox-Breite. F&uuml;r eine benutzerdefinierte Bildlaufbreite muss eine Zahl nach dem Wort HScroll erfolgen. Zum Beispiel erm&ouml;glicht HScroll500, innerhalb der ListBox mit 500 Pixel zu scrollen. Ist die Bildlaufbreite allerdings kleiner als die Breite der ListBox, dann wird keine Bildlaufleiste angezeigt (nur mit <em>HScroll</em> ist es sp&auml;ter m&ouml;glich, die horizontale Bildlaufleiste mittels <code><a href="GuiControl.htm">GuiControl</a>, +HScroll500, EigeneBildlaufleiste</code> einzuf&uuml;gen).</p>
      <h2>Steuerelemente: Ungew&ouml;hnliche Styles und Optionen</h2>
      <p id="BackgroundTrans"><strong>BackgroundTrans</strong>: Verwendet einen transparenten Hintergrund. Dadurch k&ouml;nnen Steuerelemente, die sich hinter einem Text-, Picture- oder GroupBox-Steuerelement befinden, durchscheinen. Wenn zum Beispiel ein transparentes Text-Steuerelement auf ein Picture-Steuerelement gesetzt wird, dann sieht es so aus, als w&uuml;rde der Text zum Bild geh&ouml;ren. Danach kann diese Option mit <code><a href="GuiControl.htm">GuiControl</a>, +Background</code> r&uuml;ckg&auml;ngig gemacht werden. Im <a href="GuiControls.htm#PicAltSubmit">AltSubmit-Abschnitt des Picture-Steuerelements</a> befinden sich weitere Informationen &uuml;ber transparente Bilder. Bekannte Einschr&auml;nkung: BackgroundTrans funktioniert m&ouml;glicherweise nicht richtig bei Steuerelementen, die sich in einem <a href="GuiControls.htm#Tab">Tab-Steuerelement</a> befinden, das eine <a href="ListView.htm">ListView</a> enth&auml;lt.</p>
      <p><strong>-Background</strong>: Erzwingt die Hintergrundfarbe, welche vom Steuerelement standardm&auml;&szlig;ig verwendet wird. Diese Option wird h&auml;ufig eingesetzt, um einem Tab-Steuerelement seine Standardfarbe anstelle der Fensterfarbe zu verabreichen. Danach kann das mit <code><a href="GuiControl.htm">GuiControl</a>, +Background</code> r&uuml;ckg&auml;ngig gemacht werden.</p>
      <p><strong>Border</strong>: Das Steuerelement erh&auml;lt einen d&uuml;nnen Rahmen. Die meisten Steuerelemente ben&ouml;tigen diese Option nicht, da sie bereits einen typenspezifischen Rahmen haben. Sobald der Rahmen an ein <em>vorhandenes</em> Steuerelement angef&uuml;gt wird, ist es wahrscheinlich notwendig, die Breite und H&ouml;he um einen Pixel zu vergr&ouml;&szlig;ern.</p>
      <p id="HwndOutputVar"><strong>Hwnd</strong><em>Ausgabevariable</em> <span class="ver">[v1.0.46.01+]:</span> Beim Verwenden dieser Option in <a href="#Add">Gui Add</a> wird das Fenster-Handle (HWND) des neu erstellten Steuerelements in die <em>Ausgabevariable</em> gespeichert. Zum Beispiel: <code>Gui, Add, Edit, vEigenesEdit HwndEigenesEditHwnd</code>. Befindet sich dieses Beispiel in einer Funktion, wird <em>EigenesEditHwnd</em> als eine <a href="../Functions.htm#DynVar">dynamische Variable</a> behandelt. Das HWND eines Steuerelements wird oft mit <a href="PostMessage.htm">PostMessage</a>, <a href="PostMessage.htm">SendMessage</a> und <a href="DllCall.htm">DllCall</a> verwendet. Es kann direkt als <a href="../misc/WinTitle.htm#ahk_id">ahk_id-Fenstertitel</a> (das auch bei versteckten Steuerelementen funktioniert, selbst wenn <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> deaktiviert ist) oder <span class="ver">[seit v1.1.04+]</span> bei GuiControl und GuiControlGet als <em>SteuerelementID</em>-Parameter verwendet werden. Beachtet zudem, dass das HWND eines &uuml;bergeordneten Fensters mit <code><a href="#LastFoundExist">Gui EigenesGui:+HwndAusgabevariable</a></code> abgerufen werden kann.</p>
      <p><strong>Theme</strong>: Diese Option kann dazu verwendet werden, das aktuelle Fenster-Design des neu erstellten Steuerelements zu &uuml;berschreiben. Bei bereits vorhandenen Steuerelementen hat diese Option keinen Effekt; allerdings wird das m&ouml;glicherweise in einer zuk&uuml;nftigen Version ge&auml;ndert. Siehe <a href="#Theme">Gui +/-Theme</a> f&uuml;r Details.</p>
      <p><strong>(Unbenannter Style)</strong>: Verwendet ein Plus- oder Minuszeichen, gefolgt von einer dezimalen oder hexadezimalen <a href="../misc/Styles.htm">Style-Nummer</a>. Vorzeichenlose Styles werden standardm&auml;&szlig;ig hinzugef&uuml;gt.</p>
      <p><strong>(Unbenannter ExStyle)</strong>: Verwendet ein Plus- oder Minuszeichen, gefolgt von dem Buchstaben "E" 
        und einer dezimalen oder hexadezimalen erweiterten Style-Nummer. Vorzeichenlose Styles werden standardm&auml;&szlig;ig hinzugef&uuml;gt. Zum Beispiel w&uuml;rde E0x200 den WS_EX_CLIENTEDGE-Style hinzuf&uuml;gen, der einen Rahmen mit abgesenktem Rand bereitstellt, gut geeignet f&uuml;r Picture-Steuerelemente und &Auml;hnliches. Weitere nicht-dokumentierte Styles findet man auf <a href="http://www.microsoft.com">www.microsoft.com</a>, z. B. mit der Suche nach WS_EX_CLIENTEDGE.</p>
      <h2 id="Labels">Fensterereignisse</h2>
      <p>Die folgenden Label (Subroutinen) werden automatisch mit einem GUI-Fenster verbunden, falls diese im Script vorhanden sind:</p>
      <p id="GuiClose"><strong>GuiClose</strong>: Wird ausgef&uuml;hrt, sobald entweder die X-Schaltfl&auml;che in der Titelleiste gedr&uuml;ckt, "Schlie&szlig;en" im Systemmen&uuml; ausgew&auml;hlt oder <a href="WinClose.htm">WinClose</a> verwendet wird, um das Fenster zu schlie&szlig;en. Falls dieses Label weggelassen wird, wird das Fenster einfach versteckt, was den gleichen Effekt wie <a href="#Cancel">Gui Cancel</a> hat. Einer der h&auml;ufigsten Ma&szlig;nahmen f&uuml;r GuiClose ist <a href="ExitApp.htm">ExitApp</a>. Zum Beispiel:</p>
      <pre>GuiClose:
ExitApp</pre>
      <p id="GuiEscape"><strong>GuiEscape</strong>: Wird ausgef&uuml;hrt, sobald <kbd>Esc</kbd> im aktiven Fenster gedr&uuml;ckt wird. Falls dieses Label weggelassen wird, passiert nichts beim Dr&uuml;cken dieser Taste. Bekannte Einschr&auml;nkung: Sollte das erste Steuerelement im Fenster deaktiviert sein (wahrscheinlich abh&auml;ngig vom Typ des Steuerelements), wird das GuiEscape-Label nicht ausgef&uuml;hrt. Dieser Effekt k&ouml;nnte auch durch andere Umst&auml;nde ausgel&ouml;st werden.</p>
      <p id="GuiSize"><strong>GuiSize</strong>: Wird ausgef&uuml;hrt, sobald das Fenster skaliert, minimiert, maximiert oder wiederhergestellt wird. Die internen Variablen A_GuiWidth und A_GuiHeight enthalten jeweils die neue Breite und H&ouml;he des Client-Bereichs (Der Client-Bereich schlie&szlig;t Rahmen, Titelleiste und Men&uuml;leiste des Fensters aus). Au&szlig;erdem enthalten <a href="../Variables.htm#EventInfo">A_EventInfo</a> und <a href="../misc/ErrorLevel.htm">ErrorLevel</a> jeweils eine der folgenden Zahlen:</p>
      <p>0: Das Fenster wurde wiederhergestellt oder dessen Gr&ouml;&szlig;e durch Ziehen des Rahmens ge&auml;ndert.<br>
        1: Das Fenster wurde minimiert.<br>
        2: Das Fenster wurde maximiert.</p>
      <p>GuiSize kann dazu verwendet werden, die Position und Gr&ouml;&szlig;e der Steuerelemente neu anzupassen, falls der Benutzer die Gr&ouml;&szlig;e des Fensters &auml;ndert. Dieser Prozess kann z. B. mit dem <a href="http://www.autohotkey.net/%7ETitan/anchor.html">"Anchor"-Script von Titan</a> via <a href="_Include.htm">#Include</a> vereinfacht werden.</p>
      <p id="GuiContextMenu"><strong>GuiContextMenu</strong>: Wird ausgef&uuml;hrt, sobald das Fenster mit der rechten Maustaste angeklickt wird (au&szlig;er Titelleiste und Men&uuml;leiste).  Zudem wird es ausgef&uuml;hrt, sobald <kbd>Men&uuml;</kbd> oder <kbd>Umschalt</kbd>+<kbd>F10</kbd> gedr&uuml;ckt wird. Im Gegensatz zu den meisten anderen GUI-Labels k&ouml;nnen mehrere <a href="../misc/Threads.htm">Threads</a> von diesem Label vorhanden sein. Innerhalb des GuiContextMenu-Labels sind folgende interne Variablen verf&uuml;gbar:</p>
      <ol>
        <li><a href="../Variables.htm#GuiControl">A_GuiControl</a>, die den <a href="../Variables.htm#GuiControl">Text oder Variablennamen</a> des Steuerelements enth&auml;lt, zu dem das Ereignis gesendet wurde (leer, wenn nichts).</li>
        <li><a href="../Variables.htm#EventInfo">A_EventInfo</a>: Falls das Ziel des Kontextmen&uuml;s ein ListBox-, ListView- oder TreeView-Steuerelement ist (kann mit A_GuiControl ermittelt werden), enth&auml;lt A_EventInfo den Eintrag des Steuerelements, der als Ziel dient:<br>
          <a href="GuiControls.htm#ListBox">ListBox</a> oder <a href="ListView.htm">ListView</a>: A_EventInfo enth&auml;lt die Nummer der aktuell fokussierten Zeile (0, wenn keine).<br>
          <a href="TreeView.htm">TreeView</a>: Bei Rechtsklick enth&auml;lt A_EventInfo die ID-Nummer des angeklickten Eintrags (0, wenn der Benutzer keinen Eintrag angeklickt hat). Beim Dr&uuml;cken von <kbd>Men&uuml;</kbd> oder <kbd>Umschalt</kbd>+<kbd>F10</kbd> enth&auml;lt A_EventInfo die ID-Nummer des ausgew&auml;hlten Eintrags.</li>
        <li>A_GuiX und A_GuiY, die die Koordinaten X und Y des ge&ouml;ffneten Kontextmen&uuml;s enthalten (z. B. <code><a href="Menu.htm">Menu</a>, EigenerKontext, Show, %A_GuiX%, %A_GuiY%</code>). Die Koordinaten beziehen sich auf die linke obere Ecke des Fensters. </li>
        <li>A_GuiEvent, die das Wort "RightClick" enth&auml;lt, falls die rechte Maustaste geklickt wurde, oder "Normal", falls das Men&uuml; mit <kbd>Men&uuml;</kbd> oder <kbd>Umschalt</kbd>+<kbd>F10</kbd> ge&ouml;ffnet wurde.</li>
      </ol>
      <p>Hinweis: Da die Steuerelemente <a href="GuiControls.htm#Edit">Edit</a> und <a href="GuiControls.htm#MonthCal">MonthCal</a> ihre eigenen Kontextmen&uuml;s haben, wird das GuiContextMenu-Label bei Rechtsklick nicht ausgef&uuml;hrt.</p>
      <p id="GuiDropFiles"><strong>GuiDropFiles</strong>: Wird ausgef&uuml;hrt, sobald Dateien oder Ordner per Ziehen und Ablegen ins Fenster verschoben werden (falls das Label bereits ausgef&uuml;hrt wird, wird das Ablegen ignoriert). Innerhalb des GuiDropFiles-Labels sind folgende interne Variablen verf&uuml;gbar:</p>
      <ol>
        <li><a href="../Variables.htm#GuiControl">A_GuiControl</a>, die den <a href="../Variables.htm#GuiControl">Text oder Variablennamen</a> des Steuerelements enth&auml;lt, auf dem die Dateien abgelegt wurden (leer, wenn keine).</li>
        <li><a href="../Variables.htm#EventInfo">A_EventInfo</a> und <a href="../misc/ErrorLevel.htm">ErrorLevel</a>, die die Anzahl an abgelegten Dateien enthalten.</li>
        <li>A_GuiX und A_GuiY, die die Koordinaten X und Y der Position enthalten, auf der die Dateien abgelegt wurden (bezogen auf die obere linke Ecke des Fensters). </li>
        <li>A_GuiEvent, die die Namen der abgelegten Dateien enth&auml;lt. Jeder Dateiname mit Ausnahme des Letzten endet mit einem Zeilenumbruchszeichen (`n).</li>
      </ol>
      <p>Verwendet eine <a href="LoopParse.htm">Parsing-Schleife</a> wie folgt, um einzelne Dateien zu extrahieren: </p>
      <pre><em>; BEISPIEL #1:</em>
Loop, parse, A_GuiEvent, `n
{
    MsgBox, 4,, Dateinummer %A_Index% ist:`n%A_LoopField%.`n`nWeiter?
    IfMsgBox, No, Break
}

<em>; BEISPIEL #2: Nur die erste Datei extrahieren:</em>
Loop, parse, A_GuiEvent, `n
{
    FirstFile = %A_LoopField%
    Break
}

<em>; BEISPIEL #3: Dateien alphabetisch sortieren:</em>
FileList = %A_GuiEvent%
Sort, FileList
Loop, parse, FileList, `n
    MsgBox Dateinummer %A_Index% ist:`n%A_LoopField%.</pre>
      <p>Um das Ziehen und Ablegen in einem Fenster vor&uuml;bergehend zu deaktivieren, entfernt den WS_EX_ACCEPTFILES-Style mittels <code>Gui -E0x10</code>. Danach kann es wieder mit <code>Gui +E0x10</code> aktiviert werden.</p>
      <p><strong>Erkennen von und reagieren auf andere Ereignisse</strong>: Mittels <a href="OnMessage.htm">OnMessage()</a> k&ouml;nnen andere Arten von GUI-Ereignissen erkannt und bearbeitet werden. Zum Beispiel ist es m&ouml;glich, eine kontextabh&auml;ngige Hilfe &uuml;ber den ToolTip anzuzeigen, sobald sich der Mauszeiger &uuml;ber ein Steuerelement im Fenster befindet. Siehe dazu das Beispiel mit <a href="#ExToolTip">GUI-ToolTip</a>.</p>
      <h2 id="MultiWin">Mehrere GUI-Fenster erstellen</h2>
      <p>Abgesehen vom ersten Fenster m&uuml;ssen bei anderen Fenstern deren Namen oder Nummern (falls vorhanden) angegeben werden, damit sie die oben genannten Labels verwenden k&ouml;nnen. Zum Beispiel w&uuml;rden 2GuiEscape und 2GuiClose die Standard-Label des zweiten Fensters sein, w&auml;hrend <em>EigenesGui</em>GuiEscape und <em>EigenesGui</em>GuiClose die Standard-Label f&uuml;r <em>EigenesGui</em> sind. Um benutzerdefinierte Labelnamen zu verwenden, siehe <a href="#PlusLabel">Gui +Label</a>.</p>
      <p>Um neben dem <a href="Gui.htm#DefaultWin">Standard</a>-Fenster auch andere Fenster bearbeiten zu k&ouml;nnen, f&uuml;gt dessen Name oder Nummer (oder seit v1.1.03 dessen <a href="#GuiHwndOutputVar">HWND</a>) gefolgt von einem Doppelpunkt vor dem Unterbefehl wie folgt ein:</p>
      <pre>Gui, <strong>EigenesGui:</strong>Add, Text,, Text f&uuml;r das &Uuml;ber-Fenster.
Gui, <strong>EigenesGui:</strong>Show</pre>
      <p>Mit <a href="#Default">Gui EigenesGui:Default</a> kann verhindert werden, dass das oben genannte Pr&auml;fix "EigenesGui:" angegeben werden muss. Innerhalb eines <a href="Gui.htm#DefaultWin">GUI-Threads</a>, der das gleiche Fenster verarbeitet, welches den Thread ausgef&uuml;hrt hat, ist das Pr&auml;fix au&szlig;erdem nicht notwendig.</p>
      <p id="Name"><span class="ver">[v1.1.03+]:</span> F&uuml;r die Gui-Namen gelten die gleichen Regeln wie bei <a href="../Variables.htm#Variable_names">Variablennamen</a>. Jeder Nummer gr&ouml;&szlig;er als 99 oder l&auml;nger als zwei Zeichen (wie z. B. 0x01) muss das HWND eines vorhandenen Gui-Fensters sein, denn ansonsten w&uuml;rde dieser Befehl fehlschlagen. Je nach verf&uuml;gbaren Systemressourcen k&ouml;nnen beliebig viele Fenster erstellt werden.</p>
      <p><span class="ver">[v1.1.04+]:</span> Mit <a href="Gui.htm#New">Gui, New</a> k&ouml;nnen beliebig viele unbenannte GUI-Fenster erstellt werden.</p>
      <h2 id="DefaultWin">GUI-Ereignisse, Threads und Subroutinen</h2>
      <p>Ein <a href="../misc/Threads.htm">GUI-Thread</a> wird wie jeder andere Thread definiert, der aufgrund einer GUI-Aktion gestartet wurde. Zu den GUI-Aktionen geh&ouml;rt beispielsweise das Ausw&auml;hlen eines Men&uuml;punkts oder das Ausf&uuml;hren eines <a href="#label">g-Labels</a> (z. B. beim Dr&uuml;cken einer Schaltfl&auml;che).</p>
      <p>Bei einem GUI-Thread ist der <a href="#MultiWin">Standardfenstername</a> der Name des Fensters, das diesen Thread gestartet hat. Nicht-GUI-Threads verwenden standardm&auml;&szlig;ig eine 1.</p>
      <p>Sobald ein <a href="../misc/Threads.htm">GUI-Thread</a> ausgef&uuml;hrt wird, ist das <a href="../misc/WinTitle.htm#LastFoundWindow">zuletzt gefundene Fenster</a> das GUI-Fenster selbst. Dadurch k&ouml;nnen Fenster- und Steuerelementbefehle (z. B. <a href="WinMove.htm">WinMove</a>, <a href="WinHide.htm">WinHide</a>, <a href="WinSet.htm">WinSet</a>, <a href="WinSetTitle.htm">WinSetTitle</a> und <a href="ControlGetFocus.htm">ControlGetFocus</a>) ihre Fenstertitel- und Fenstertext-Parameter weglassen, wenn das GUI-Fenster selbst bearbeitet wird (selbst wenn es versteckt ist).</p>
      <p>Das Klicken auf ein Steuerelement zeigt keine Wirkung, falls das <a href="#label">g-Label</a> wegen einem vorherigen Klick noch ausgef&uuml;hrt wird. Verwendet bei der Subroutine als erste Zeile <a href="Critical.htm">Critical</a>, um dieses Problem zu umgehen (allerdings werden dadurch auch andere <a href="../misc/Threads.htm">Threads</a> zwischengespeichert/aufgeschoben, wie beispielsweise beim Dr&uuml;cken eines Hotkeys).</p>
      <p>Die internen Variablen A_Gui und A_GuiControl enthalten den Fensternamen und die ID des Steuerelements, das den aktuellen Thread gestartet hat. Siehe <a href="../Variables.htm#Gui">A_Gui</a> und <a href="../Variables.htm#GuiControl">A_GuiControl</a> f&uuml;r mehr Details.</p>
      <p>Es ist m&ouml;glich, dass mehrere Ereignisse jeweils die gleiche Subroutine ausf&uuml;hren - setzt dazu ihre Label einfach &uuml;bereinander. Zum Beispiel:</p>
      <pre>GuiEscape:
GuiClose:
ButtonCancel:
ExitApp  <em>; Alle oberen Labels f&uuml;hren diesen Befehl aus.</em></pre>
      <p>Alle neuen <a href="../misc/Threads.htm">GUI-Threads</a> beginnen mit Standardwerten bei Einstellungen wie <a href="SendMode.htm">SendMode</a>. Diese k&ouml;nnen im <a href="../Scripts.htm#auto">automatischen Ausf&uuml;hrungsbereich</a> ge&auml;ndert werden.</p>
      <h2 id="Navigate">Navigation mit der Tastatur</h2>
      <p>Es ist m&ouml;glich, ein GUI-Fenster mit <kbd>Tab</kbd> zu steuern. Dabei wird der Tastaturfokus auf das n&auml;chste eingabef&auml;hige Steuerelement geschoben (Steuerelemente mit deaktiviertem <a href="#Tabstop">Tabstop</a>-Style werden &uuml;bersprungen). Die Reihenfolge der hinzugef&uuml;gten Steuerelemente bestimmt die Reihenfolge der Navigation. Anfangs befindet sich der Tastaturfokus auf das erste eingabef&auml;hige Steuerelement, das den Tabstop-Style aktiv hat (was die meisten Steuerelemente standardm&auml;&szlig;ig haben).</p>
      <p id="ShortcutKey">Bei einige Steuerelementen kann ein kaufm&auml;nnisches Und (&amp;) angegeben werden, um eine Tastenkombination zu erzeugen, die im Steuerelementtext als unterstrichenes Zeichen dargestellt wird (abh&auml;ngig von den Systemeinstellungen). Der Benutzer kann diese Tastenkombination aktivieren, sobald er <kbd>Alt</kbd> gedr&uuml;ckt h&auml;lt und das entsprechende Zeichen auf der Tastatur dr&uuml;ckt. Bei Schaltfl&auml;chen, Kontrollk&auml;stchen und Optionsfelder entspricht das Dr&uuml;cken der Tastenkombination das Anklicken des Steuerelements. Bei GroupBox- und Text-Steuerelemente bewirkt das Dr&uuml;cken der Tastenkombination, dass der Tastaturfokus auf das erste eingabef&auml;hige <a href="#Tabstop">Tabstop</a>-Steuerelement springt, das danach erstellt wurde. Wenn allerdings mehrere Steuerelemente die gleiche Tastenkombination haben, springt der Tastaturfokus zwischen diesen Steuerelementen abwechselnd hin und her.</p>
      <p>Zur direkten Darstellung eines kaufm&auml;nnischen Und-Zeichens innerhalb der oben genannten Steuerelementarten m&uuml;ssen zwei aufeinanderfolgende kaufm&auml;nnische Und-Zeichen wie folgt angegeben werden: Save &amp;&amp; Exit</p>
      <h2 id="Appear">Fensterdarstellung</h2>
      <p>Ein GUI-Fenster verwendet als Icon das Tray-Icon, das beim Erstellen des Scripts verwendet wurde. F&uuml;r ein anderes Icon muss daher erst das Tray-Icon ge&auml;ndert werden, noch bevor das Fenster erstellt wird. Zum Beispiel: <code><a href="Menu.htm">Menu</a>, Tray, Icon, EigenesIcon.ico</code>. Zudem ist es mit DllCall und SendMessage m&ouml;glich, das gro&szlig;e und kleine Icon unterschiedlich aussehen zu lassen (das gro&szlig;e Icon wird in der Programmumschaltung via Alt+Tab angezeigt):</p>
      <pre>hIcon32 := <a href="DllCall.htm">DllCall</a>("LoadImage", uint, 0
    , str, "Eigenes Icon.ico"  <em>; Dateiname des Icons (diese Datei kann mehrere Icons enthalten).</em>
    , uint, 1  <em>; Bildtyp: IMAGE_ICON</em>
    , int, 32, int, 32  <em>; gew&uuml;nschte Breite und H&ouml;he des Bilds (hilft LoadImage zu entscheiden, welches Icon am besten geeignet ist).</em>
    , uint, 0x10)  <em>; Flags: LR_LOADFROMFILE</em>
Gui +LastFound
<a href="PostMessage.htm">SendMessage</a>, 0x80, 1, hIcon32  <em>; 0x80 ist WM_SETICON; und 1 bedeutet ICON_BIG (0 f&uuml;r ICON_SMALL).</em>
Gui Show</pre>
      <p>Aufgrund von Einschr&auml;nkungen in Windows XP und h&ouml;her &uuml;bernehmen Kontrollk&auml;stchen, Optionsfelder und GroupBox-Steuerelemente mit einer benutzerdefinierten Textfarbe die klassische Design-Darstellung.</p>
      <p>Verwandtes Thema: <a href="#Margin">Abstand im Fenster</a>.</p>
      <h2 id="GenRemarks">Allgemeine Bemerkungen</h2>
      <p>Mit <a href="GuiControl.htm">GuiControl</a> und <a href="GuiControlGet.htm">GuiControlGet</a> k&ouml;nnen beliebige Steuerelemente in einem GUI-Fenster bearbeitet werden.</p>
      <p>Jedes GUI-Fenster kann ca. 11000 Steuerelemente enthalten. Allerdings kann das System schon bei 5000 Steuerelementen instabil werden.</p>
      <p>Scripts, die den GUI-Befehl verwenden, sind automatisch <a href="_Persistent.htm">persistent</a> (selbst wenn der GUI-Befehl nie ausgef&uuml;hrt wird). Es kommt auch erst einzeln vor, wenn <a href="_SingleInstance.htm">#SingleInstance</a> verwendet wird.</p>
      <h2>Verwandte Befehle</h2>
      <p><a href="GuiControl.htm">GuiControl</a>, <a href="GuiControlGet.htm">GuiControlGet</a>, <a href="Menu.htm">Menu</a>, <a href="GuiControls.htm">Steuerelemente</a>, <a href="ListView.htm">ListView</a>, <a href="TreeView.htm">TreeView</a>, <a href="Control.htm">Control</a>, <a href="ControlGet.htm">ControlGet</a>, <a href="Progress.htm">SplashImage</a>, <a href="MsgBox.htm">MsgBox</a>, <a href="FileSelectFile.htm">FileSelectFile</a>, <a href="FileSelectFolder.htm">FileSelectFolder</a></p>
      <h2 id="Examples">Beispiele</h2>
      <pre class="NoIndent"><em>; Beispiel: Erzielt einen &auml;hnlichen Effekt wie SplashTextOn:</em>

Gui, +AlwaysOnTop +Disabled -SysMenu +Owner  <em>; +Owner verhindert eine Schaltfl&auml;che in der Taskleiste.</em>
Gui, Add, Text,, Beliebiger Text.
Gui, Show, NoActivate, Fenstertitel  <em>; NoActivate verhindert das Deaktivieren des derzeit aktiven Fensters.</em></pre>
      <p>&nbsp;</p>
      <pre class="NoIndent"><em>; Beispiel: Ein einfaches Eingabefenster zur Abfrage des Vor- und Nachnamens:</em>

Gui, Add, Text,, Vorname:
Gui, Add, Text,, Nachname:
Gui, Add, Edit, vVorname ym  <em>; Die ym-Option beginnt eine neue Spalte f&uuml;r Steuerelemente.</em>
Gui, Add, Edit, vNachname
Gui, Add, Button, default, OK  <em>; ButtonOK-</em><em>Label </em><em>(wenn vorhanden) wird ausgef&uuml;hrt, wenn die Schaltfl&auml;che gedr&uuml;ckt wird.</em>
Gui, Show,, Einfaches Eingabebeispiel
Return  <em>; Ende des automatischen Ausf&uuml;hrungsbereichs. Das Script ist solange im Leerlauf, bis der Benutzer irgendetwas macht.</em>

GuiClose:
ButtonOK:
Gui, Submit  <em>; Speichert die Benutzereingaben in die jeweils zugewiesene Variable.</em>
MsgBox Sie haben "%Vorname% %Nachname%" eingegeben.
ExitApp</pre>
      <p>&nbsp;</p>
      <pre class="NoIndent"><em>; Beispiel: Tab-Steuerelement:</em>

Gui, Add, Tab2,, Erster Tab|Zweiter Tab|Dritter Tab  <em>; Tab2 ben&ouml;tigt v1.0.47.05.</em>
Gui, Add, Checkbox, vEigeneCheckBox, Kontrollk&auml;stchen
Gui, Tab, 2
Gui, Add, Radio, vEigenesRadio, Optionsfeld 1
Gui, Add, Radio,, Optionsfeld 2
Gui, Tab, 3
Gui, Add, Edit, vEigenesEdit r5  <em>; r5 bedeutet 5 Reihen hoch.</em>
Gui, Tab  <em>; das hei&szlig;t, dass danach hinzugef&uuml;gte Steuerelemente nicht zum Tab-Steuerelement geh&ouml;ren.</em>
Gui, Add, Button, default xm, OK  <em>; xm positioniert die Schaltfl&auml;che in die untere linke Ecke.</em>
Gui, Show
Return

ButtonOK:
GuiClose:
GuiEscape:
Gui, Submit  <em>; Speichert die </em><em>Benutzereingaben</em><em> in die jeweils zugewiesene Variable.</em>
MsgBox Ihre Eingabe:`n%EigeneCheckBox%`n%EigenesRadio%`n%EigenesEdit%
ExitApp</pre>
      <p>&nbsp;</p>
      <pre class="NoIndent"><em>; Beispiel: ListBox mit Dateien aus einem Verzeichnis:</em>

Gui, Add, Text,, Eine Datei zum Ausf&uuml;hren ausw&auml;hlen.`nDr&uuml;cken Sie ESCAPE oder schlie&szlig;en Sie das Fenster, um den Vorgang abzubrechen.
Gui, Add, ListBox, vEigeneListBox gEigeneListBox w640 r10
Gui, Add, Button, Default, OK
Loop, C:\*.*  <em>; Ordner und musterbasierte Suche je nach Bedarf anpassen.</em>
{
    GuiControl,, EigeneListBox, %A_LoopFileFullPath%
}
Gui, Show
Return

EigeneListBox:
If A_GuiEvent &lt;&gt; DoubleClick
    Return
<em>; Ansonsten ist das Doppelklicken auf einem Listeneintrag das gleiche wie das Dr&uuml;cken der OK-Schaltfl&auml;che.
; Also zum n&auml;chsten Label springen.</em>
ButtonOK:
GuiControlGet, EigeneListBox  <em>; Ermittelt die aktuelle Auswahl in der ListBox.</em>
MsgBox, 4,, Wollen Sie die Datei oder das Dokument ausf&uuml;hren?`n`n%EigeneListBox%
IfMsgBox, No
    Return
<em>; Ansonsten versuchen, zu starten:</em>
Run, %EigeneListBox%,, UseErrorLevel
If ErrorLevel = ERROR
    MsgBox Die angegebene Datei konnte nicht ausgef&uuml;hrt werden.  Vielleicht ist die Datei mit keinem Programm verkn&uuml;pft.
Return

GuiClose:
GuiEscape:
ExitApp</pre>
      <p>&nbsp;</p>
      <pre class="NoIndent" id="ExToolTip"><em>; Beispiel: Eine kontextabh&auml;ngige Hilfe (mittels ToolTip) anzeigen, sobald der Benutzer die Maus &uuml;ber ein bestimmtes Steuerelement h&auml;lt:</em>

Gui, Add, Edit, v<strong>EigenesEdit</strong>
<strong>EigenesEdit</strong>_TT := "Das ist ein Tooltip f&uuml;r das Steuerelement mit dem Variablennamen EigenesEdit."
Gui, Add, DropDownList, v<strong>EigeneDDL</strong>, Rot|Gr&uuml;n|Blau
<strong>EigeneDDL</strong>_TT := "W&auml;hlen Sie eine Farbe aus der Liste."
Gui, Add, Checkbox, vEigeneCheckBox, Dieses Steuerelement hat keinen ToolTip.
Gui, Show
<a href="OnMessage.htm">OnMessage</a>(0x200, "WM_MOUSEMOVE")
Return

WM_MOUSEMOVE()
{
    static CurrControl, PrevControl, _TT  <em>; _TT bleibt f&uuml;r den unteren ToolTip-Befehl leer.</em>
    CurrControl := A_GuiControl
    If (CurrControl &lt;&gt; PrevControl and not InStr(CurrControl, " "))
    {
        ToolTip  <em>; Schlie&szlig;t alle offenen ToolTips.</em>
        SetTimer, DisplayToolTip, 1000
        PrevControl := CurrControl
    }
    Return

    DisplayToolTip:
    SetTimer, DisplayToolTip, Off
    <a href="ToolTip.htm">ToolTip</a> % %CurrControl%_TT  <em>; Das Prozentzeichen erm&ouml;glicht einen Ausdruck.</em>
    SetTimer, RemoveToolTip, 3000
    Return

    RemoveToolTip:
    SetTimer, RemoveToolTip, Off
    ToolTip
    Return
}


GuiClose:
ExitApp</pre>
      <p>&nbsp;</p>
      <pre class="NoIndent" id="OSD"><em>; Beispiel: Bildschirmanzeige (OSD) mittels transparentem Fenster:</em>

IndividualFarbe = EEAA99  <em>; Kann eine beliebige RGB-Farbe sein (wird weiter unten transparent gemacht).</em>
Gui +LastFound +AlwaysOnTop -Caption +ToolWindow  <em>; +ToolWindow verhindert eine Schaltfl&auml;che in der Taskleiste und einen Eintrag in der Programmumschaltung via Alt+Tab.</em>
Gui, Color, %IndividualFarbe%
Gui, Font, s32  <em>; Erm&ouml;glicht eine gro&szlig;e Schriftgr&ouml;&szlig;e (32 Punkte).</em>
Gui, Add, Text, vEigenerText cLime, XXXXX YYYYY  <em>; XX &amp; YY passt die Gr&ouml;&szlig;e des Fensters automatisch an.
; Macht alle Pixel dieser Farbe transparent und den Text selbst durchsichtig (150):</em>
WinSet, TransColor, %IndividualFarbe% 150
SetTimer, OSDAktualisieren, 200
Gosub, OSDAktualisieren  <em>; Aktualisierung sofort durchzuf&uuml;hren, anstatt auf den Timer zu warten.</em>
Gui, Show, x0 y400 NoActivate  <em>; NoActivate verhindert das Deaktivieren des aktiven Fensters.</em>
Return

OSDAktualisieren:
MouseGetPos, MausX, MausY
GuiControl,, EigenerText, X%MausX%, Y%MausY%
Return</pre>
      <p>&nbsp;</p>
      <pre class="NoIndent"><em>; Beispiel: Eine animierte Fortschrittsleiste auf einem Hintergrundbild.</em>

Gui, Color, White
Gui, Add, Picture, x0 y0 h350 w450, %A_WinDir%\system32\ntimage.gif
Gui, Add, Button, Default xp+20 yp+250, Animation starten
Gui, Add, Progress, vEigenesProgress w416
Gui, Add, Text, vEigenerText wp  <em>; wp bedeutet "vorherige Breite verwenden".</em>
Gui, Show
Return

ButtonStartTheBarMoving:
Loop, %A_WinDir%\*.*
{
    If A_Index &gt; 100
        break
    GuiControl,, EigenesProgress, %A_Index%
    GuiControl,, EigenerText, %A_LoopFileName%
    Sleep 50
}
GuiControl,, EigenerText, Animation beendet.
Return

GuiClose:
ExitApp</pre>
      <p>&nbsp;</p>
      <pre class="NoIndent"><em>; Beispiel: Einfacher Bildbetrachter:</em>

Gui, +Resize
Gui, Add, Button, default, Neues Bild &amp;laden
Gui, Add, Radio, ym+5 x+10 vRadio checked, &amp;Aktuelle Gr&ouml;&szlig;e laden
Gui, Add, Radio, ym+5 x+10, Bild &amp;passend laden
Gui, Add, Pic, xm vPic
Gui, Show
Return

ButtonLoadNewImage:
FileSelectFile, file,,, Bild ausw&auml;hlen:, Bilder (*.gif; *.jpg; *.bmp; *.png; *.tif; *.ico; *.cur; *.ani; *.exe; *.dll)
If file =
    Return
Gui, Submit, NoHide <em>; Speichert die Werte der Optionsfelder.</em>
If Radio = 1  <em>; Bild mit aktueller Gr&ouml;&szlig;e anzeigen.</em>
{
    Width = 0
    Height = 0
}
Else <em>; Zweites Optionsfeld ausgew&auml;hlt: Gr&ouml;&szlig;e des Bildes anpassen, damit es auf dem Bildschirm passt.</em>
{
    Width := A_ScreenWidth - 28  <em>; Minus 28, um einen Raum f&uuml;r Rahmen und Abst&auml;nde zu gew&auml;hrleisten.</em>
    Height = -1  <em>; "Seitenverh&auml;ltnis beibehalten" ist scheinbar die beste L&ouml;sung.</em>
}
GuiControl,, Pic, *w%width% *h%height% %file%  <em>; Bild laden.</em>
Gui, Show, xCenter y0 AutoSize, %file%  <em>; Die Fenstergr&ouml;&szlig;e auf die Bildgr&ouml;&szlig;e anpassen.</em>
Return

GuiClose:
ExitApp</pre>
      <p>&nbsp;</p>
      <pre class="NoIndent"><em>; Beispiel: Einfacher Texteditor mit Men&uuml;leiste.</em>

<em>; Untermen&uuml;s f&uuml;r die Men&uuml;leiste erstellen:</em>
Menu, Dateimen&uuml;, Add, &amp;Neu, DateiNeu
Menu, Dateimen&uuml;, Add, &amp;&Ouml;ffnen, Datei&Ouml;ffnen
Menu, Dateimen&uuml;, Add, &amp;Speichern, DateiSpeichern
Menu, Dateimen&uuml;, Add, Speichern &amp;unter..., DateiSpeichernAls
Menu, Dateimen&uuml;, Add  <em>; Trennlinie.</em>
Menu, Dateimen&uuml;, Add, E&amp;xit, DateiBeenden
Menu, Hilfsmen&uuml;, Add, &amp;&Uuml;ber, Hilfe&Uuml;ber

<em>; Erstellt die Men&uuml;leiste, indem ihr Untermen&uuml;s hinzugef&uuml;gt werden:</em>
Menu, EigeneMen&uuml;leiste, Add, &amp;Datei, :Dateimen&uuml;
Menu, EigeneMen&uuml;leiste, Add, &amp;Hilfe, :Hilfsmen&uuml;

<em>; Men&uuml;leiste an das Fenster anf&uuml;gen:</em>
Gui, Menu, EigeneMen&uuml;leiste

<em>; Erstellt das Haupt-Eingabefeld und zeigt das Fenster an:</em>
Gui, +Resize  <em>; Gr&ouml;&szlig;e des Fensters kann angepasst werden.</em>
Gui, Add, Edit, vHauptEdit WantTab W600 R20
Gui, Show,, Unbenannt
AktuellerDateiname =  <em>; Keine aktuelle Datei vorhanden.</em>
Return

DateiNeu:
GuiControl,, HauptEdit  <em>; Eingabefeld leeren.</em>
Return

Datei&Ouml;ffnen:
Gui +OwnDialogs  <em>; Zwingt den Benutzer, das FileSelectFile-Dialogfenster zu schlie&szlig;en, bevor er zum Hauptfenster zur&uuml;ckkehren kann.</em>
FileSelectFile, Ausgew&auml;hlterDateiname, 3,, Datei &ouml;ffnen, Text-Dokumente (*.txt)
If Ausgew&auml;hlterDateiname =  <em>; Keine Datei ausgew&auml;hlt.</em>
    Return
Gosub DateiLesen
Return

DateiLesen:  <em>; Die Variable Ausgew&auml;hlterDateiname wurde vorher gesetzt.</em>
FileRead, HauptEdit, %Ausgew&auml;hlterDateiname%  <em>; Liest den Inhalt der Datei in die Variable.</em>
If ErrorLevel
{
    MsgBox "%Ausgew&auml;hlterDateiname%" konnte nicht ge&ouml;ffnet werden.
    Return
}
GuiControl,, HauptEdit, %HauptEdit%  <em>; F&uuml;gt den Text in das Steuerelement ein.</em>
AktuellerDateiname = %Ausgew&auml;hlterDateiname%
Gui, Show,, %AktuellerDateiname%   <em>; Zeigt den Dateinamen in der Titelleiste an.</em>
Return

DateiSpeichern:
If AktuellerDateiname =   <em>; Keinen Dateinamen ausgew&auml;hlt, daher "Speichern unter...".</em>
    Goto DateiSpeichernAls
Gosub AktuelleDateiSpeichern
Return

DateiSpeichernAls:
Gui +OwnDialogs  <em>; Zwingt den Benutzer, das FileSelectFile-Dialogfenster zu schlie&szlig;en, bevor er zum Hauptfenster zur&uuml;ckkehren kann.</em>
FileSelectFile, Ausgew&auml;hlterDateiname, S16,, Datei speichern, Text-Dokumente (*.txt)
If Ausgew&auml;hlterDateiname =  <em>; Keine Datei ausgew&auml;hlt.</em>
    Return
AktuellerDateiname = %Ausgew&auml;hlterDateiname%
Gosub AktuelleDateiSpeichern
Return

AktuelleDateiSpeichern:  <em>; Es ist sichergestellt, dass AktuellerDateiname nicht leer ist.</em>
IfExist %AktuellerDateiname%
{
    FileDelete %AktuellerDateiname%
    If ErrorLevel
    {
        MsgBox &Uuml;berschreiben der Datei "%AktuellerDateiname%" fehlgeschlagen.
        Return
    }
}
GuiControlGet, HauptEdit  <em>; Ermittelt den Inhalt des Eingabefeldes.</em>
FileAppend, %HauptEdit%, %AktuellerDateiname%  <em>; Speichert den Inhalt der Datei.
; Bei Erfolg den Dateinamen in der Titelleiste anzeigen (falls es mit DateiSpeichernAls aufgerufen wurde):</em>
Gui, Show,, %AktuellerDateiname%
Return

Hilfe&Uuml;ber:
Gui, &Uuml;ber:+owner1  <em>; Das Hauptfenster (Gui #1) wird dem Fenster "&Uuml;ber" &uuml;bergeordnet.</em>
Gui +Disabled  <em>; Deaktiviert das Hauptfenster.</em>
Gui, &Uuml;ber:Add, Text,, Beliebiger Text.
Gui, &Uuml;ber:Add, Button, Default, OK
Gui, &Uuml;ber:Show
Return

&Uuml;berButtonOK:  <em>; Dieser Bereich wird vom Fenster "&Uuml;ber" benutzt.</em>
&Uuml;berGuiClose:
&Uuml;berGuiEscape:
Gui, 1:-Disabled  <em>; Reaktiviert das Hauptfenster (muss vor dem n&auml;chsten Schritt getan werden).</em>
Gui Destroy  <em>; Das Fenster "&Uuml;ber" zerst&ouml;ren.</em>
Return

GuiDropFiles:  <em>; Unterst&uuml;tzt Ziehen &amp; Ablegen.</em>
Loop, Parse, A_GuiEvent, `n
{
    Ausgew&auml;hlterDateiname = %A_LoopField%  <em>; Nur die erste Datei nehmen (falls mehrere Dateien vorhanden sind).</em>
    break
}
Gosub DateiLesen
Return

GuiSize:
If ErrorLevel = 1  <em>; Das Fenster wurde minimiert. Keine Aktion notwendig.</em>
    Return
<em>; Ansonsten wurde die Gr&ouml;&szlig;e des Fensters ge&auml;ndert oder maximiert. Die Gr&ouml;&szlig;e des Eingabefeldes anpassen.</em>
NeueBreite := A_GuiWidth - 20
NeueH&ouml;he := A_GuiHeight - 20
GuiControl, Move, HauptEdit, W%NeueBreite% H%NeueH&ouml;he%
Return

DateiBeenden:     <em>; Benutzer hat "Exit" im Dateimen&uuml; ausgew&auml;hlt.</em>
GuiClose:  <em>; Benutzer hat das Fenster geschlossen.</em>
ExitApp</pre>
    </article>
  </section>
</div>
<script type="text/javascript">WriteFooter(1);</script>
</body>
</html>