<!DOCTYPE HTML>
<html>
<head>
<title>StringSplit / StrSplit()</title>
<meta name="keywords" content="Befehl, String">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/ga.js" type="text/javascript"></script>
<!--[if lt IE 9]>
<script src="../static/html5.js"></script>
<![endif]-->
<script src="../navbar/NavScript.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <div id="article">
      <h1>StringSplit / StrSplit()</h1>
      <p>Teilt einen String in mehrere Teilstrings auf, basierend auf die angegebenen Trennzeichen.</p>
      <pre class="Syntax">StringSplit, AusgabeArray, EingabeVar [, Trennzeichen, ZeichenAuslassen]
Array := StrSplit(String [, Trennzeichen, ZeichenAuslassen])  <em>; [v1.1.13+]</em></pre>
      <h3>Parameter</h3>
      <table class="info">
        <tr>
          <th colspan="2">StringSplit</th>
        </tr>
        <tr>
          <td>AusgabeArray</td>
          <td><p>Name des <a href="../misc/Arrays.htm">Arrays</a>, in dem jeder extrahierte Teilstring von <em>EingabeVar</em> gespeichert werden soll. Wenn zum Beispiel EigenesArray angegeben ist, wird der Befehl die Anzahl der erzeugten Teilstrings (0, wenn keine) in EigenesArray0 speichern, den ersten Teilstring in EigenesArray1, den zweiten in EigenesArray2 und so weiter.</p>
            <p>Um innerhalb einer <a href="../Functions.htm">Funktion</a> einen Array zu erstellen, das global anstatt lokal ist, muss EigenesArray0 innerhalb der Funktion als globale Variable <a href="../Functions.htm#Global">deklariert</a> werden, bevor dieser Befehl verwendet wird (Das Gegenteil davon gilt für <a href="../Functions.htm#AssumeGlobal">global-angesehene</a> Funktionen).</p></td>
        </tr>
        <tr>
          <td style="width: 15%;">EingabeVar</td>
          <td style="width: 85%;">Name der Variable, deren Inhalt geparst werden soll. Der Name sollte nicht mit Prozentzeichen umschlossen werden, sofern nicht die Absicht besteht, den <em>Inhalt</em> der Variable als Namen zu verwenden. HINWEIS: <em>EingabeVar</em> darf keine Variable von <em>AusgabeArray</em> sein.</td>
        </tr>
        <tr>
          <td>Trennzeichen</td>
          <td><p>Ist dieser Parameter leer oder nicht vorhanden, wird jedes Zeichen von <em>EingabeVar</em> als einzelner Teilstring behandelt.</p>
            <p>Ansonsten kann <em>Trennzeichen</em> ein oder mehr Zeichen enthalten (Unterscheidung zwischen Groß- und Kleinschreibung), die als Abgrenzungen zwischen den Teilstrings innerhalb von <em>EingabeVar</em> dienen sollen. Da die Trennzeichen nicht zu den Teilstrings gehören, werden sie nie in <em>AusgabeArray</em> kopiert. Befindet sich außerdem nichts zwischen einem Paar von Trennzeichen innerhalb von <em>EingabeVar</em>, wird das entsprechende Array-Element leer sein.</p>
            <p>Zum Beispiel würde <code>`,</code> (ein geschütztes Komma) den String jeweils bei einem Komma teilen. Ebenso würde %A_Tab%%A_Space% jedesmal ein neues Array-Element erstellen, wenn ein Leer- oder Tabulatorzeichen in <em>EingabeVar</em> vorkommt.</p>
            <p>Es ist möglich, auch einen String als Trennung zu verwenden. Dazu ist es erforderlich, mithilfe von <a href="StringReplace.htm">StringReplace</a> alle Vorkommen des Strings mit einem Zeichen zu ersetzen, das im Text niemals vorkommen wird. Im folgenden Beispiel wird der String &lt;br&gt; als Trennung verwendet:</p>
            <pre>StringReplace, NeueHTML, HTMLString, &lt;br&gt;, ``, All  <em>; Ersetzt jedes &lt;br&gt; mit einem Akzent.</em>
StringSplit, EigenesArray, NeueHTML, ``  <em>; Teilt den String jeweils bei einem Akzentbuchstaben.</em></pre></td>
        </tr>
        <tr>
          <th colspan="2">StrSplit() <span class="ver">[v1.1.13+]</span></th>
        </tr>
        <tr>
          <td>Array<br>
            (Rückgabewert)</td>
          <td>Ein <a href="../Objects.htm#Usage_Simple_Arrays">Array</a> (Objekt) mit Strings.</td>
        </tr>
        <tr>
          <td>String</td>
          <td>Ein String, der aufgeteilt werden soll.</td>
        </tr>
        <tr>
          <td>Trennzeichen</td>
          <td><p>Ist dieser Parameter leer oder nicht vorhanden, wird jedes Zeichen des Eingabestrings als einzelner Teilstring behandelt.</p>
            <p>Ansonsten kann <em>Trennzeichen</em> entweder ein einzelner String oder ein Array mit Strings sein, die als Abgrenzungen zwischen den Teilstrings dienen sollen. Da die Trennzeichen nicht zu den Teilstrings gehören, sind sie nie im Rückgabewert enthalten. Befindet sich außerdem nichts zwischen einem Paar von Trennzeichen innerhalb des Eingabestrings, wird das entsprechende Array-Element leer sein.</p>
            <p>Zum Beispiel würde <code>"`,"</code> den String jeweils bei einem Komma teilen. Ebenso würde <code>[A_Tab, A_Space]</code> jedesmal ein neues Array-Element erstellen, wenn ein Leer- oder Tabulatorzeichen im Eingabestring vorkommt.</p></td>
        </tr>
        <tr>
          <th colspan="2">Beides</th>
        </tr>
        <tr>
          <td>ZeichenAuslassen</td>
          <td><p>Eine optionale Liste von Zeichen (Unterscheidung zwischen Groß- und Kleinschreibung), die jeweils am Anfang und Ende eines Array-Elements weggelassen werden sollen. Wenn <em>ZeichenAuslassen</em> zum Beispiel <code>%A_Space%%A_Tab%</code> (StringSplit) oder <code>" `t"</code> (StrSplit) ist, werden Leer- oder Tabulatorzeichen jeweils am Anfang und Ende (aber nicht in der Mitte) eines Elements entfernt.</p>
            <p>Falls <em>Trennzeichen</em> leer ist, kennzeichnet <em>ZeichenAuslassen</em>, welche Zeichen im Array weggelassen werden sollen.</p>
            <p>Im Gegensatz zum letzten Parameter anderer Befehle müssen in <em>ZeichenAuslassen</em> bei StringSplit Kommas geschützt werden (`,).</p></td>
        </tr>
      </table>
      <h3>Bemerkungen</h3>
      <p>Falls die Array-Elemente bereits vorhanden sind, wird der StringSplit-Befehl die Werte nur von den ersten N Elementen ändern - N ist dabei die Anzahl der Teilstrings in <em>EingabeVar</em>. Alle bereits vorhandenen Elemente über N bleiben unverändert. Daher sollte man am besten das 0-Element (EigenesArray0) verwenden, um festzustellen, wie viele Elemente tatsächlich mit diesem Befehl erstellt worden sind.</p>
      <p>Unsichtbare Zeichen wie Leer- und Tabulatorzeichen werden beibehalten, sofern sie selbst keine Trennzeichen sind oder in <em>ZeichenAuslassen</em> vorkommen. Tabulator- und Leerzeichen können durch Aufrufen der <a href="Trim.htm">Trim</a>-Funktion an beiden Enden jeder Variable entfernt werden. Zum Beispiel: <code>EigenesArray1 := Trim(EigenesArray1)</code>.</p>
      <p>Um einen String mit kommagetrennten Werten (CSV-Format) aufzuteilen, ist es sinnvoll, stattdessen eine <a href="LoopParse.htm">Parsing-Schleife</a> zu verwenden, da sie über eine interne CSV-Handhabung verfügt.</p>
      <p>Bevor die Felder aufgeteilt werden, können sie mit dem <a href="Sort.htm">Sort</a>-Befehl neu angeordnet werden.</p>
      <p>Wenn du nicht möchtest, dass die Teilstrings dauerhaft im Speicher vorhanden sind, verwende eine <a href="LoopParse.htm">Parsing-Schleife</a> - besonders wenn <em>EingabeVar</em> sehr groß ist, in diesem Fall würde man viel Speicherplatz sparen. Zum Beispiel:</p>
      <pre>Farben = rot,grün,blau
Loop, parse, Farben, `,
    MsgBox Farbnummer %A_Index% ist %A_LoopField%.</pre>
      <h3>Verwandte Befehle</h3>
      <p><a href="LoopParse.htm">Parsing-Schleife</a>, <a href="../misc/Arrays.htm">Arrays</a>, <a href="Sort.htm">Sort</a>, <a href="SplitPath.htm">SplitPath</a>, <a href="IfInString.htm">IfInString</a>, <a href="StringGetPos.htm">StringGetPos</a>, <a href="StringMid.htm">StringMid</a>, <a href="StringTrimLeft.htm">StringTrimLeft</a>, <a href="StringTrimLeft.htm">StringTrimRight</a>, <a href="StringLen.htm">StringLen</a>, <a href="StringLower.htm">StringLower</a>, <a href="StringLower.htm">StringUpper</a>, <a href="StringReplace.htm">StringReplace</a></p>
      <h3>Beispiele</h3>
      <pre class="NoIndent">TestString = Das ist ein Test.
StringSplit, wort_array, TestString, %A_Space%, .  <em>; Punkte weglassen.</em>
MsgBox, Das vierte Wort ist %wort_array4%.

Farben = rot,grün,blau
StringSplit, FarbArray, Farben, `,
Loop, %FarbArray0%
{
    diese_Farbe := FarbArray%a_index%
    MsgBox, Farbnummer %a_index% ist %diese_Farbe%.
}</pre>
      <pre class="NoIndent">TestString := "Das ist ein Test."
wort_array := StrSplit(TestString, A_Space, ".")  <em>; Punkte weglassen.</em>
MsgBox % "Das vierte Wort ist " wort_array[4]

Farben := "rot,grün,blau"
FarbArray := StrSplit(Farben, ",")
Loop % FarbArray.MaxIndex()
{
    diese_Farbe := FarbArray[a_index]
    MsgBox, Farbnummer %a_index% ist %diese_Farbe%.
}</pre>
    </div>
  </section>
</div>
<script type="text/javascript">WriteFooter(1);</script>
</body>
</html>