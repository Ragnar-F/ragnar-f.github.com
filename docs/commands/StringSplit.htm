<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>StringSplit</title>
<meta name="keywords" content="Befehl, String">
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<link href="../css/default.css" rel="stylesheet" type="text/css">
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-28224374-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
</head>
<body>
<div id="wrapper">
<div id="content">
<script src="../navbar/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(1);</script>


<h1>StringSplit</h1>

<p>Teilt einen String in mehrere Teilstrings (Array) mithilfe der angegebenen Trennzeichen auf.</p>

<pre class="Syntax">StringSplit, AusgabeArray, Eingabevariable [, Trennzeichen, ZeichenAuslassen]</pre>
<h3>Parameter</h3>
<table class="info">
  <tr>
    <td>AusgabeArray</td>
    <td><p>Der Name des <a href="../misc/Arrays.htm">Arrays</a>, in dem jeder extrahierte Teilstring aus der <em>Eingabevariable</em> gespeichert wird. Wenn zum Beispiel EigenesArray angegeben wird, dann wird der Befehl die Anzahl der Teilstrings (0 wenn keine) in EigenesArray0 speichern, den ersten Teilstring in EigenesArray1, den Zweiten in EigenesArray2 und so weiter.</p>
    <p>Um einen globalen anstelle eines lokalen Arrays innerhalb einer <a href="../Functions.htm">Funktion</a> zu erstellen, <a href="../Functions.htm#Global">deklariert</a> EigenesArray0 als globale Variable, bevor dieser Befehl verwendet wird (Das Gegenteil davon gilt f&uuml;r <a href="../Functions.htm#AssumeGlobal">global-angesehene</a> Funktionen).</p></td>
  </tr>
  <tr>
    <td width="15%">Eingabevariable</td>
    <td width="85%">Name der Variable, dessen Inhalt analysiert wird.  Umschlie&szlig;t den Namen erst mit Prozentzeichen, wenn der <em>Inhalt</em> der Variable als Name verwendet werden soll. HINWEIS: Die <em>Eingabevariable</em> darf keine Variable vom <em>AusgabeArray</em> sein.</td>
  </tr>
  <tr>
    <td>Trennzeichen</td>
    <td><p>Ist dieser Parameter leer oder nicht vorhanden, wird jedes Zeichen in der <em>Eingabevariable</em> als Teilstring angesehen.</p>
      <p>Andernfalls enth&auml;lt das <em>Trennzeichen</em> beliebig viele Zeichen (abh&auml;ngig von Gro&szlig;- und Kleinschreibung), die als Abgrenzungen zwischen den Teilstrings in der <em>Eingabevariable</em> dienen. Da die Trennzeichen nicht zu den Teilstrings geh&ouml;ren, werden sie nie ins <em>AusgabeArray</em> kopiert. Wenn dar&uuml;ber hinaus nichts zwischen einem Paar von Trennzeichen innerhalb der <em>Eingabevariable</em> liegt, dann ist das entsprechende Array-Element leer.</p>
      <p>Zum Beispiel: Mit `, (ein gesch&uuml;tztes Komma) wird der String jeweils bei einem Komma geteilt. Mit %A_Tab%%A_Space% wird jeweils ein neues Array-Element erstellt, wenn sich Leer- oder Tab-Zeichen in der <em>Eingabevariable</em> befinden.</p>
      <p>Um ein String als Trennung zu verwenden, benutzt zuerst <a href="StringReplace.htm">StringReplace</a>, um alle Vorkommnisse des Strings mit einem Zeichen zu ersetzen, welches nie direkt im Text gebraucht wird. Ein Beispiel, das den String &lt;br&gt; als Trennung verwendet:</p>
<pre>StringReplace, NeueHTML, HTMLString, &lt;br&gt;, ``, All  <em>; Ersetzt jedes &lt;br&gt; mit einem Akzent.</em>
StringSplit, EigenesArray, NeueHTML, ``  <em>; Teilt den String, basierend auf dem Akzentbuchstaben.</em></pre></td>
  </tr>
  <tr>
    <td>ZeichenAuslassen</td>
    <td><p>Eine optionale Liste von Zeichen (abh&auml;ngig von Gro&szlig;- und Kleinschreibung), die am Anfang und Ende jedes Array-Elements ausgeschlossen werden. Wenn <em>ZeichenAuslassen</em> zum Beispiel %A_Space%%A_Tab% enth&auml;lt, dann werden Leer- oder Tabulatorzeichen am Anfang und Ende (aber nicht in der Mitte) jeden Elements entfernt.</p>
    <p>Wenn das <em>Trennzeichen</em> leer ist, dann wird mit <em>ZeichenAuslassen</em> gekennzeichnet, welche Zeichen im Array ausgelassen werden.</p>
    <p>Im Gegensatz zum letzten Parameter der meisten anderen Befehle m&uuml;ssen Kommas in <em>ZeichenAuslassen</em> gesch&uuml;tzt werden (`,).</p></td>
  </tr>
</table>

<h3>Bemerkungen</h3>
<p>Wenn die Array-Elemente bereits vorhanden sind, dann wird der Befehl die Werte der ersten N Elemente &auml;ndern, wobei N die Anzahl der Teilstrings in der <em>Eingabevariable</em> ist. Alle Elemente &uuml;ber N, die schon vorhanden sind, bleiben unver&auml;ndert. Daher ist es am sichersten, das 0-Element (EigenesArray0) zu verwenden, um festzustellen, wie viele Elemente tats&auml;chlich mit diesem Befehl erstellt wurden.</p>
<p>Unsichtbare Zeichen wie Leerzeichen und Tabulatoren werden nur beibehalten, wenn sie selbst keine Trennzeichen sind. Tabulatoren und Leerzeichen k&ouml;nnen an beiden Enden jeder Variable entfernt werden, indem sie sich selbst zuweisen, w&auml;hrend <a href="AutoTrim.htm">AutoTrim</a> aktiv ist (Standardeinstellung). Zum Beispiel: EigenesArray1 = %EigenesArray1%</p>
<p>Um einen String im CSV-Format (kommagetrennten Werte) aufzuteilen, verwendet eine <a href="LoopParse.htm">Parsing-Schleife</a>, da sie &uuml;ber eine interne CSV-Handhabung verf&uuml;gt.</p>
<p>Um die Felder vor dem Aufteilen neu anzuordnen, verwendet den Befehl <a href="Sort.htm">Sort</a>.</p>
<p>Wenn es unn&ouml;tig ist, Teilstrings dauerhaft im Speicher abzulegen, zieht eine <a href="LoopParse.htm">Parsing-Schleife</a> in Betracht, besonders wenn die <em>Eingabevariable</em> sehr gro&szlig; ist, um viel Speicherplatz zu sparen. Zum Beispiel:</p>
<pre>Farben = rot,gr&uuml;n,blau
Loop, parse, Farben, `,
    MsgBox Farbnummer %A_Index% ist %A_LoopField%.</pre>
<h3>Verwandte Befehle</h3>
<p><a href="LoopParse.htm">Parsing-Schleife</a>, <a href="../misc/Arrays.htm">Arrays</a>, <a href="Sort.htm">Sort</a>, <a href="SplitPath.htm">SplitPath</a>, <a href="IfInString.htm">IfInString</a>, <a href="StringGetPos.htm">StringGetPos</a>, <a href="StringMid.htm">StringMid</a>, <a href="StringTrimLeft.htm">StringTrimLeft</a>, <a href="StringTrimLeft.htm">StringTrimRight</a>, <a href="StringLen.htm">StringLen</a>, <a href="StringLower.htm">StringLower</a>, <a href="StringLower.htm">StringUpper</a>, <a href="StringReplace.htm">StringReplace</a></p>
<h3>Beispiele</h3>
<pre class="NoIndent">TestString = Das ist ein Test.
StringSplit, W&ouml;rterArray, TestString, %A_Space%, .  <em>; Punkte weglassen.</em>
MsgBox, Das vierte Wort ist %W&ouml;rterArray4%.

Farben = rot,gr&uuml;n,blau
StringSplit, FarbArray, Farben, `,
Loop, %FarbArray0%
{
    Farbe := FarbArray%a_index%
    MsgBox, Farbnummer %a_index% ist %Farbe%.
}</pre>
</div>
</div>
</body>
</html>