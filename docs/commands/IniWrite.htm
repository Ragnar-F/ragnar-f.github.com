<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>IniWrite</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<link href="../css/default.css" rel="stylesheet" type="text/css">
</head>
<body>
<script src="../NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<h1>IniWrite</h1>

<p>Schreibt einen Wert in eine INI-Datei im Standardformat.</p>

<pre class="Syntax">IniWrite, Wert, Dateiname, Sektion [, Schl&uuml;ssel] </pre>
<h3>Parameter</h3>
<dl>
  
    <dt>Wert</dt>
    <dd><p>String oder Nummer, rechts vom Gleichheitszeichen (=) des <em>Schl&uuml;ssels</em> stehen. Wenn der Text lang ist, dann kann dieser in mehreren kurzen Zeilen aufgeteilt werden (<a href="../Scripts.htm#continuation">Fortsetzungsbereich</a>), die die Lesbarkeit und Wartbarkeit verbessern k&ouml;nnten.</p>
      <p><span class="ver">[AHK_L 57+]:</span> Wenn der <i>Schl&uuml;ssel</i> weggelassen wird, dann sollte dieser Parameter den kompletten Inhalt einer Sektion enthalten (ohne [Sektionsname]-Kopf), damit dieser in die INI-Datei geschrieben werden kann.</p></dd>
 
    <dt>Dateiname</dt>
    <dd><p>Der Name der Datei, die sich im <a href="../Variables.htm#WorkingDir">A_WorkingDir</a>-Verzeichnis befindet, solange kein absoluter Pfad angegeben ist.</p></dd>
 
    <dt>Sektion</dt>
    <dd><p>Name der Sektion in der INI-Datei. Solche Sektionen werden mit eckigen Klammern dargestellt (die Klammern d&uuml;rfen nicht in diesem Parameter stehen).</p></dd>
 
    <dt>Schl&uuml;ssel</dt>
    <dd><p>Name des Schl&uuml;ssels in der INI-Datei.</p></dd>
  
</dl>
<h3>ErrorLevel</h3>
<p><span class="ver">[v1.1.04+]</span> Dieser Befehl ist in der Lage, bei Misserfolg eine Ausnahme auszul&ouml;sen. F&uuml;r mehr Informationen, siehe <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird bei Misserfolg auf 1 und bei Erfolg auf 0 gesetzt.<br></p>
<h3>Bemerkungen</h3>
<p>Eine typische INI-Datei sieht wie folgt aus:</p>
<pre>[Sektionsname]
Schl&uuml;ssel=Wert</pre>
<p><b>Unicode:</b> IniRead und IniWrite verlassen sich auf die externen Funktionen <a href="http://msdn.microsoft.com/en-us/library/ms724353.aspx">GetPrivateProfileString</a> und <a href="http://msdn.microsoft.com/en-us/library/ms725501.aspx">WritePrivateProfileString</a>, um Werte zu lesen oder zu schreiben. Diese Funktionen unterst&uuml;tzen nur Unicode in UTF-16-Dateien, alle anderen Dateien verwenden den Standard-ANSI-Zeichensatz des Systems. In <a href="../Variables.htm#IsUnicode">Unicode-Scripts</a> verwendet IniWrite UTF-16 f&uuml;r jede neue Datei. Wenn das unerw&uuml;nscht ist, dann stellt sicher, dass die Datei existiert, bevor IniWrite aufgerufen wird. Zum Beispiel:</p>
<pre>FileAppend,, NichtUnicode.ini, CP0 <em>; Der letzte Parameter ist in den meisten F&auml;llen optional.</em></pre>
<h3>Verwandte Befehle</h3>
<p><a href="IniDelete.htm">IniDelete</a>, <a href="IniRead.htm">IniRead</a>, <a href="RegWrite.htm">RegWrite</a></p>
<h3>Beispiel</h3>
<pre class="NoIndent">IniWrite, Das ist ein neuer Wert, C:\Temp\EigeneDatei.ini, Sektion2, Schl&uuml;ssel</pre>


</body></html>