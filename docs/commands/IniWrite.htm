<!DOCTYPE HTML>
<html>
<head>
<title>IniWrite</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/jquery.js" type="text/javascript"></script>
<script src="../static/tree.jquery.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>IniWrite</h1>

<p>Schreibt einen Wert in eine normale INI-Datei.</p>

<pre class="Syntax">IniWrite, Wert, Dateiname, Sektion [, Key]</pre>
<h3>Parameter</h3>
<dl>

  <dt>Value</dt>
  <dd>
      <p>String oder Nummer, der auf der rechten Seite des Gleichheitszeichens (=) neben dem <em>Key</em> geschrieben wird. Falls der Text zu lang ist, kann er in mehreren kurzen Zeilen aufgeteilt werden (<a href="../Scripts.htm#continuation">Fortsetzungsbereich</a>), um ihn besser lesbar und verwaltbar zu machen.</p>
      <p><span class="ver">[AHK_L 57+]:</span> Ist <i>Key</i> nicht vorhanden, muss dieser Parameter den kompletten Inhalt einer Sektion enthalten (ohne [Sektionsname]-Kopf), die in die INI-Datei geschrieben werden soll.</p>
    </dd>

  <dt>Dateiname</dt>
  <dd><p>Der Name der Datei, die sich im <a href="../Variables.htm#WorkingDir">A_WorkingDir</a>-Verzeichnis befindet, solange kein absoluter Pfad angegeben ist.</p></dd>

  <dt>Sektion</dt>
  <dd><p>Name der Sektion aus der INI-Datei. Solche Sektionen werden mit eckigen Klammern dargestellt (die Klammern dürfen nicht in diesem Parameter stehen).</p></dd>

  <dt>Key</dt>
  <dd><p>Der Key-Name in der INI-Datei.</p></dd>

</dl>
<h3>ErrorLevel</h3>
<p><span class="ver">[v1.1.04+]</span> Dieser Befehl ist in der Lage, bei Misserfolg eine Ausnahme auszulösen. Für mehr Informationen, siehe <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird bei Misserfolg auf 1 und bei Erfolg auf 0 gesetzt.</p>
<h3>Bemerkungen</h3>
<p>Werte über 65.535 Zeichen verursachen wahrscheinlich widersprüchliche Ergebnisse.</p>
<p>Eine typische INI-Datei sieht wie folgt aus:</p>
<pre>[Sektionsname]
Key=Value</pre>
<p><b>Unicode</b>: IniRead und IniWrite sind auf die externen Funktionen <a href="http://msdn.microsoft.com/en-us/library/ms724353.aspx">GetPrivateProfileString</a> und <a href="http://msdn.microsoft.com/en-us/library/ms725501.aspx">WritePrivateProfileString</a> angewiesen, um Werte lesen oder schreiben zu können. Diese Funktionen unterstützen Unicode nur in UTF-16-Dateien; alle anderen Dateien verwenden den Standard-ANSI-Zeichensatz des Systems. In <a href="../Variables.htm#IsUnicode">Unicode-Scripts</a> verwendet IniWrite das UTF-16-Format bei jeder neuen Datei. Wenn das unerwünscht ist, muss man sicherstellen, dass die Datei existiert, bevor IniWrite aufgerufen wird. Zum Beispiel:</p>
<pre>FileAppend,, KeinUnicode.ini, CP0 <em>; Der letzte Parameter kann meistens weggelassen werden.</em></pre>
<h3>Siehe auch</h3>
<p><a href="IniDelete.htm">IniDelete</a>, <a href="IniRead.htm">IniRead</a>, <a href="RegWrite.htm">RegWrite</a></p>
<h3>Beispiel</h3>
<pre class="NoIndent">IniWrite, Das ist ein neuer Wert, C:\Temp\MeineDatei.ini, Sektion2, Key</pre>

</body>
</html>
