<!DOCTYPE HTML>
<html>
<head>
<title>#If</title>
<meta name="keywords" content="Befehl, Direktive, Hotkey, Hotstring">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../navbar/NavScript.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <article>
      <h1>#If <span class="ver">[AHK_L]</span></h1>
      <p>Erstellt kontextabhängige <a href="../Hotkeys.htm">Hotkeys</a> und <a href="../Hotstrings.htm">Hotstrings</a>. Solche Hotkeys können je nach Ergebnis des Ausdrucks unterschiedliche (oder gar keine) Aktionen ausführen.</p>
      <pre class="Syntax">#If [, Ausdruck]</pre>
      <h3>Parameter</h3>
      <table class="info">
        <tr>
          <td>Ausdruck</td>
          <td>Beliebiger gültiger <a href="../Variables.htm#Expressions">Ausdruck</a>.</td>
        </tr>
      </table>
      <h3>Grundlagen zur Bedienung</h3>
      <p>Es kann ein beliebiger gültiger Ausdruck verwendet werden, um den Kontext zu definieren, bei dem ein Hotkey aktiv sein soll. Zum Beispiel:</p>
      <pre>#If WinActive("ahk_class Notepad") or WinActive(Fenstertitel)
#Space::MsgBox Sie haben WIN+LEERTASTE im Editor oder %Fenstertitel% gedrückt.</pre>
      <p>Die #If-Direktive ist wie die #IfWin-Direktive von der Position abhängig: sie beeinflusst nur Hotkeys und Hotstrings, die sich im Script physisch darunter befinden. Zudem schließen sich #If und #IfWin gegenseitig aus; das heißt, dass nur das aktuellste #If oder #IfWin wirksam sein wird.</p>
      <p>Um die Kontextabhängigkeit zu deaktivieren, muss #If oder #IfWin ohne Parameter angegeben werden. Zum Beispiel:</p>
      <pre>#If</pre>
      <h3>Allgemeine Bemerkungen</h3>
      <p>Sobald ein Hotkey gedrückt wird, wird der #If-Ausdruck ausgewertet, um zu überprüfen, ob der Hotkey aktiviert werden soll. Das Betriebsystem reagiert möglicherweise nicht auf Tastatur- oder Mauseingaben, bis die Auswertung des Ausdrucks durchgeführt oder die <a href="_IfTimeout.htm">Zeit überschritten</a> wurde. Sendet man Tastatureingaben oder Mausklicks während der Auswertung des Ausdrucks (z. B. von einer per Direktive aufgerufene Funktion), kann es zu Problemen kommen, die unbedingt verhindert werden sollten.</p>
      <p>Aufgrund eines Designfehlers in AutoHotkey kann es vorkommen, dass der Ausdruck zweimal ausgewertet wird, wenn ein einzelnes Tastatur- oder Mausereignis erfolgt.</p>
      <p>Aus diesen Gründen sollte der Ausdruck kurz gehalten werden, so dass er schnell und ohne Nebeneffekte durchgeführt werden kann.</p>
      <p><span class="ver">[AHK_L 53+]:</span> Das Setzen der internen Variablen <a href="../Variables.htm#ThisHotkey">A_ThisHotkey</a> und <a href="../Variables.htm#TimeSinceThisHotkey">A_TimeSinceThisHotkey</a> basiert auf den Hotkey, den der aktuelle #If-Ausdruck ausgewertet hat.</p>
      <p><span class="ver">[v1.0.95.00+]:</span> <a href="../Variables.htm#PriorHotkey">A_PriorHotkey</a> und <a href="../Variables.htm#TimeSincePriorHotkey">A_TimeSincePriorHotkey</a> enthalten die vorherigen Werte von den "This"-Variablen.</p>
      <h3>Verwandte Befehle</h3>
      <p>Die meisten Verhaltenseigenschaften von <a href="_IfWinActive.htm">#IfWin</a>-Direktiven gelten auch für #If.</p>
      <p>Mit <a href="_IfTimeout.htm">#IfTimeout</a> kann der Standardwert des Timeouts überschrieben werden.</p>
      <h3 id="Examples">Beispiele</h3>
      <pre class="NoIndent">
<em>; Beispiel #1: Anpassen der Lautstärke durch Drehen des Mausrades innerhalb der Taskleiste.</em>
#If MausIstÜber("ahk_class Shell_TrayWnd")
WheelUp::Send {Volume_Up}
WheelDown::Send {Volume_Down}

MausIstÜber(Fenstertitel) {
    MouseGetPos,,, Fenster
    Return WinExist(Fenstertitel . " ahk_id " . Fenster)
}

<em>; Beispiel #2: Einfaches wort-löschendes Tastenkürzel für alle Eingabefelder.</em>
#If AktivesSteuerelementIstKlasse("Edit")
^BS::Send ^+{Left}{Del}
^Del::Send ^+{Right}{Del}

AktivesSteuerelementIstKlasse(Klasse) {
    ControlGetFocus, FokusSteuerelement, A
    ControlGet, FokusSteuerelementHwnd, Hwnd,, %FokusSteuerelement%, A
    WinGetClass, FokusSteuerelementKlasse, ahk_id %FokusSteuerelementHwnd%
    Return (FokusSteuerelementKlasse=Klasse)
}

<em>; Beispiel #3: Kontextunabhängiger Hotkey.</em>
#If
Esc::ExitApp

<em id="ex4">; Beispiel #4: Dynamische Hotkeys. <b>Benötigt Beispiel #1.</b></em>
NumpadAdd::
Hotkey, If, MausIstÜber("ahk_class Shell_TrayWnd")
If (zweimalhoch := !zweimalhoch)
    Hotkey, WheelUp, ZweimalHoch
Else
    Hotkey, WheelUp, WheelUp
Return

ZweimalHoch:
Send {Volume_Up 2}
Return

</pre>
    </article>
  </section>
</div>
<script type="text/javascript">WriteFooter(1);</script>
</body>
</html>
