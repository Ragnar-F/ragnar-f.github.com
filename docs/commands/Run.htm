<!DOCTYPE HTML>
<html>
<head>
<title>Run / RunWait</title>
<meta name="keywords" content="Befehl, Prozess">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/jquery-1.11.0.min.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../navbar/NavScript.js" type="text/javascript"></script>
<script src="../static/content.js" type="text/javascript"></script>
<style type="text/css">
<!--
.style3 {
	color: #FF0000;
	font-weight: bold;
}
-->
</style>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <article>
      <h1>Run / RunWait</h1>
      <p>Führt ein externes Programm aus. Im Gegensatz zu Run wird RunWait warten, bis das Programm beendet wird.</p>
      <pre class="Syntax">Run, Ziel [, Arbeitsverzeichnis, Max|Min|Hide|UseErrorLevel, AusgabeVarPID]</pre>
      <h3>Parameter</h3>
      <table class="info">
        <tr>
          <td style="width: 15%;">Ziel</td>
          <td style="width: 85%;">
          <p>Ein Dokument, eine URL, eine ausführbare Datei (.exe, .com, .bat und so weiter), eine Verknüpfung (.lnk) oder ein <a href="#verbs">Systemverb</a> (siehe Bemerkungen). Wenn das <em>Ziel</em> eine lokale Datei ohne Pfad ist, wird <a href="../Variables.htm#WorkingDir">A_WorkingDir</a> zuerst durchsucht. Ist sie dort nicht auffindbar, wird die Datei im System gesucht und gegebenenfalls ausgeführt, wenn sie integriert ("bekannt") ist. Zum Beispiel könnte sich die Datei in einem der Ordner von der PATH-Umgebungsvariable befinden.</p>
          <p>Parameter, die übergeben werden sollen, müssen unmittelbar nach dem Programm- oder Dokumentnamen erfolgen. Falls ein Parameter Leerzeichen enthält, ist es am sichersten, diesen in Anführungszeichen zu setzen (selbst wenn es in einigen Fällen auch ohne geht).</p>
          </td>
        </tr>
        <tr>
          <td>Arbeitsverzeichnis</td>
          <td>Das Arbeitsverzeichnis, in dem <em>Ziel</em> ausgeführt wird. Auch wenn der Name Leerzeichen enthält, sollte dieser nicht in Anführungszeichen gesetzt werden. Ist dieser Parameter nicht vorhanden, wird das Arbeitsverzeichnis vom Script selbst verwendet (<a href="../Variables.htm#WorkingDir">A_WorkingDir</a>). </td>
        </tr>
        <tr>
          <td>Max|Min|Hide<br>UseErrorLevel</td>
          <td>
          <p>Ist dieser Parameter nicht vorhanden, wird <em>Ziel</em> normal ausgeführt. Ansonsten können ein oder mehr der folgenden Wörter angegeben werden:</p>
          <p><strong>Max</strong>: maximiert ausführen</p>
          <p><strong>Min</strong>: minimiert ausführen</p>
          <p><strong>Hide</strong>: versteckt ausführen (kann nicht in Kombination mit den oben genannten Wörtern verwenden werden)</p>
          <p>Hinweis: Einige Anwendungen (z. B. Calc.exe) ignorieren den angeforderten Anfangsstatus.</p>
          <p id="UseErrorLevel"><strong>UseErrorLevel</strong>: UseErrorLevel kann einzeln oder in Kombination mit einem oben genannten Wort verwendet werden (jeweils durch Leerzeichen getrennt). Falls der Start fehlschlägt, wird die Warnmeldung übersprungen, <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf ERROR gesetzt und der <a href="../misc/Threads.htm">aktuelle Thread</a> fortgesetzt. War der Start erfolgreich, wird RunWait den <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf den Exitcode des Programms setzen und Run den ErrorLevel auf 0 setzen.</p>
          <p id="LastError">Wenn UseErrorLevel angegeben ist, enthält <strong>A_LastError</strong> den Rückgabewert der Systemfunktion GetLastError() - eine Zahl zwischen 0 und 4294967295 (immer im Dezimalformat). Eine 0 signalisiert Erfolg, jede andere Zahl Misserfolg. Jede Zahl entspricht dabei einen bestimmten Fehlerzustand (eine ensprechende Liste dazu befindet sich auf <a href="http://www.google.de/search?q=site%3Amsdn.microsoft.com+%22System+Error+Codes%22">msdn.microsoft.com</a>). Wie <a href="../misc/ErrorLevel.htm">ErrorLevel</a> gilt A_LastError jeweils nur für einen Thread. Das heißt, dass Unterbrechungen durch andere <a href="../misc/Threads.htm">Threads</a> den Wert nicht ändern können. Allerdings wird A_LastError auch von <a href="DllCall.htm#LastError">DllCall</a> gesetzt.</p>
          </td>
        </tr>
        <tr>
          <td>AusgabeVarPID</td>
          <td>
          <p>Name der Variable, in der die eindeutige <a href="Process.htm">Prozess-ID (PID)</a> des neu gestarteten Programms gespeichert werden soll. Die Variable wird leer gemacht, wenn die PID nicht ermittelt werden kann, dass normalerweise nur passiert, wenn ein Systemverb, ein Dokument oder eine Verknüpfung gestartet wird, anstatt eine ausführbare Datei. RunWait unterstützt auch diesen Parameter, obwohl dessen <em>AusgabeVarPID</em> in einem <a href="../misc/Threads.htm">anderen Thread</a> überprüft werden muss (ansonsten wird die PID ungültig sein, weil der Prozess beendet ist, sobald die Ausführung auf die nachfolgende Zeile springt).</p>
          <p>Nachdem der Run-Befehl eine PID ermittelt hat, kann es sein, dass das vom Prozess zu erstellende Fenster noch nicht vorhanden ist. Daher ist es sinnvoll, mit <code><a href="WinWait.htm">WinWait</a> ahk_pid %AusgabeVarPID%</code> zuerst auf die Erstellung eines Fensters zu warten, bevor weiter gemacht wird.</p>
          </td>
        </tr>
      </table>
      <h3>ErrorLevel</h3>
      <p><span class="ver">[v1.1.04+]</span> Dieser Befehl ist in der Lage, bei Misserfolg eine Ausnahme auszulösen. Für mehr Informationen, siehe <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
      <p>Run: <a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird nicht gesetzt. Wenn UseErrorLevel (oben) aktiv ist, wird ErrorLevel bei Misserfolg auf ERROR und bei Erfolg auf 0 gesetzt.</p>
      <p>RunWait: ErrorLevel wird auf den Exitcode des Programms gesetzt (ein vorzeichenbehafteter 32-Bit-Integer). Wenn UseErrorLevel aktiv ist und der Start fehlgeschlägt, wird ErrorLevel auf ERROR gesetzt.</p>
      <h3>Bemerkungen</h3>
      <p>Im Gegensatz zu Run wird RunWait darauf warten, bis <em>Ziel</em> geschlossen oder beendet wird, dabei wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf den Exitcode des Programms gesetzt (ein vorzeichenbehafteter 32-Bit-Integer). Einige Programme geben scheinbar sofort einen Exitcode zurück, während sie noch laufen. Diese Programme erschaffen einen weiteren Prozess.</p>
      <p>Falls <em>Ziel</em> Kommas enthält, müssen diese wie folgt mit einem <a href="_EscapeChar.htm">Escapezeichen</a> versehen werden:</p>
      <pre>Run rundll32.exe shell32.dll<span class="style3">`,</span>Control_RunDLL desk.cpl<span class="style3">`,`,</span> 3  <em>; Öffnet Systemsteuerung &gt; Anzeige &gt; Einstellungen</em></pre>
      <p>Wenn ein Programm mit <a href="../Variables.htm#ComSpec">Comspec</a> (cmd.exe) ausgeführt wird, um z. B. die Ein- oder Ausgabe des Programms umzuleiten, sollte, wenn Leerzeichen im Pfad oder Namen enthalten sind, der ganze String mit äußeren Anführungszeichen umschlossen werden. Im folgenden Beispiel werden die äußeren Anführungszeichen in Rot und alle inneren Anführungszeichen in Schwarz dargestellt:</p>
      <pre>Run %comspec% /c <span class="style3">"</span>"C:\Eigenes Tool.exe" "param 1" "zweiter param" &gt;"C:\Eigene Datei.txt"<span class="style3">"</span></pre>
      <p>Falls <em>Ziel</em> nicht gestartet werden kann, wird ein Fenster mit einer Fehlermeldung angezeigt, danach verhält sich das Script so, als hätte es den <a href="Exit.htm">Exit</a>-Befehl erreicht. Um das zu verhindern, kann im dritten Parameter der String <strong>UseErrorLevel</strong> eingefügt werden.</p>
      <p>Die Performance kann ein wenig verbessert werden, wenn <em>Ziel</em> ein genauer Pfad ist, z. B. <code>Run, C:\Windows\Notepad.exe "C:\Eigene Dokumente\Test.txt"</code> anstelle von <code>Run, C:\Eigene Dokumente\Test.txt</code>.</p>
      <p>Es ist möglich, mit Run spezielle <a href="../misc/CLSID-List.htm">CLSID-Ordner</a> zu öffnen. Zum Beispiel:</p>
      <pre>Run ::{20d04fe0-3aea-1069-a2d8-08002b30309d}  <em>; Öffnet den Arbeitsplatz/Computer.</em>
Run ::{645ff040-5081-101b-9f08-00aa002f954e}  <em>; Öffnet den Papierkorb.</em></pre>
      <p id="verbs">Systemverben beziehen sich auf Aktionen, die im Rechtsklickmenü einer Datei innerhalb des Explorers verfügbar sind. Wenn eine Datei ohne Verb ausgeführt wird, wird das Standardverb (üblicherweise "open") für diesen bestimmten Dateityp wirksam. Wenn angegeben, sollte nach dem Verb der Name der Zieldatei erfolgen. Die folgenden Verben werden zurzeit unterstützt:</p>
      <table class="info">
        <tr>
          <td>*<i>verb</i></td>
          <td><span class="ver">[AHK_L 57+]:</span> Beliebiges systemdefiniertes oder benutzerdefiniertes Verb. Zum Beispiel: <code>Run *Compile %A_ScriptFullPath%</code><br>In Windows Vista und höher kann das Verb <code>*RunAs</code> an Stelle des Rechtsklickmenüpunktes "<i>Als Administrator ausführen</i>" verwendet werden.</td>
        </tr>
        <tr>
          <td>properties</td>
          <td>Öffnet das Explorer-Eigenschaftsfenster für die angegebene Datei. Zum Beispiel: <code>Run, properties "C:\Eigene Datei.txt"</code>.<br>Hinweis: Das Eigenschaftsfenster wird automatisch geschlossen, sobald das Script beendet wird. Um das zu verhindern, sollte mit <a href="WinWait.htm">WinWait</a> darauf gewartet werden, bis das Fenster angezeigt wird, und danach <a href="WinWaitClose.htm">WinWaitClose</a>, um darauf zu warten, dass der Benutzer dieses Fenster schließt.</td>
        </tr>
        <tr>
          <td>find</td>
          <td>Öffnet eine Instanz des Such-Assistenten oder Suchergebnisfensters für den angegebenen Ordner. Zum Beispiel: <code>Run, find D:\</code>.</td>
        </tr>
        <tr>
          <td>explore</td>
          <td>Öffnet eine Instanz des Windows-Explorers für den angegebenen Ordner. Zum Beispiel: <code>Run, explore %A_ProgramFiles%</code>.</td>
        </tr>
        <tr>
          <td>edit</td>
          <td>Öffnet die angegebene Datei zur Bearbeitung. Möglicherweise funktioniert das nicht, wenn der Typ der angegebenen Datei keine zugewiesene "edit"-Aktion hat. Zum Beispiel: <code>Run, edit "C:\Eigene Datei.txt"</code>.</td>
        </tr>
        <tr>
          <td>open</td>
          <td>Öffnet die angegebene Datei (normalerweise nicht notwendig, weil das die Standardaktion für die meisten Dateitypen ist). Zum Beispiel: <code>Run, open "Eigene Datei.txt"</code>.</td>
        </tr>
        <tr>
          <td>print</td>
          <td>Druckt die angegebene Datei mit der entsprechenden Anwendung, falls vorhanden. Zum Beispiel: <code>Run, print "Eigene Datei.txt"</code>.</td>
        </tr>
      </table>
      <p>Während RunWait im Wartezustand ist, können neue <a href="../misc/Threads.htm">Threads</a> per <a href="../Hotkeys.htm">Hotkey</a>, <a href="Menu.htm">benutzerdefinierte Menüeinträge</a> oder <a href="SetTimer.htm">Timer</a> gestartet werden.</p>
      <h3>Verwandte Befehle</h3>
      <p><a href="RunAs.htm">RunAs</a>, <a href="Process.htm">Process</a>, <a href="Exit.htm">Exit</a>, <a href="../misc/CLSID-List.htm">CLSID-Liste</a>, <a href="DllCall.htm">DllCall</a></p>
      <h3>Beispiele</h3>
      <pre class="NoIndent">Run, Notepad.exe, C:\Eigene Dokumente, max

Run, mailto:someone@domain.com?subject=Das ist die Betreffzeile.&amp;body=Das ist der Haupttext der Nachricht.
Run, ReadMe.doc, , Max UseErrorLevel  <em>; Maximiert starten und kein Dialogfenster anzeigen, wenn es fehlschlägt.</em>
If ErrorLevel = ERROR
    MsgBox Das Dokument konnte nicht geöffnet werden.

RunWait, %comspec% /c dir c:\ &gt;&gt;c:\DirTest.txt, , min
Run, c:\DirTest.txt
Run, properties c:\DirTest.txt

Run, http://www.google.com <em>; jede URL kann geöffnet werden.</em>
Run, mailto:someone@somedomain.com  <em>; Das sollte die Standard-E-Mail-Anwendung öffnen.</em>

Run ::{20d04fe0-3aea-1069-a2d8-08002b30309d}  <em>; Öffnet den Arbeitsplatz/Computer.</em>
Run ::{645ff040-5081-101b-9f08-00aa002f954e}  <em>; Öffnet den Papierkorb.</em>

<em>; Mit "&amp;&amp;" können mehrere Befehle hintereinander ausgeführt werden:</em>
Run, %comspec% /c dir /b &gt; C:\Liste.txt &amp;&amp; type C:\Liste.txt &amp;&amp; pause

</pre>
    </article>
  </section>
</div>
<script type="text/javascript">WriteFooter(1);</script>
</body>
</html>
