<!DOCTYPE HTML>
<html>
<head>
<title>Until</title>
<meta name="keywords" content="Befehl, Ablaufsteuerung, Schleife">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/jquery-1.11.0.min.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../navbar/NavScript.js" type="text/javascript"></script>
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <article>
      <h1>Until <span class="ver">[AHK_L 59+]</span></h1>
      <p>Fügt eine Bedingung an Loop oder For-Loop an, die nach jedem Schleifendurchlauf einmal ausgewertet werden soll.</p>
      <pre class="Syntax">Loop {
    ...
} Until <i>Ausdruck</i></pre>
      <h3>Parameter</h3>
      <table class="info">
        <tr>
          <td style="width: 15%;">Ausdruck</td>
          <td style="width: 85%;">Beliebiger gültiger <a href="../Variables.htm#Expressions">Ausdruck</a>.</td>
        </tr>
      </table>
      <h3>Bemerkungen</h3>
      <p>Der Ausdruck wird nach jedem Schleifendurchlauf einmal ausgewertet, auch dann, wenn <a href="Continue.htm">continue</a> verwendet wurde. Falls die Auswertung des Ausdrucks falsch ist (ein leerer String oder die Zahl 0), wird die Schleife fortgesetzt; ansonsten wird die Schleife unterbrochen und die Ausführung bei der Zeile nach <i>Until</i> fortgesetzt.</p>
      <p>Loop Until ist die Kurzfassung von:</p>
      <pre>Loop {
    ...
    If (<i>Ausdruck</i>)
        break
}</pre>
      <p>Allerdings ist Loop Until oft leichter zu verstehen und im Gegensatz zu oben mit einer einzeiligen Aktion verwendbar. Zum Beispiel:</p>
      <pre>Loop
    x *= 2
Until x &gt; y</pre>
      <p><i>Until</i> kann kann bei jedem Loop oder For verwendet werden. Zum Beispiel:</p>
      <pre>Loop, Read, %A_ScriptFullPath%
    Zeilen .= A_LoopReadLine . "`n"
<b>Until</b> A_Index=5  <em>; Liest die ersten fünf Zeilen.</em>
MsgBox % Zeilen

</pre>
      <p>Wenn die interne Variable <a href="../Variables.htm#Index">A_Index</a> in <i>Ausdruck</i> verwendet wird, enthält sie den Index des aktuell abgeschlossenen Schleifendurchlaufs.</p>
      <h3>Verwandte Befehle</h3>
      <p><a href="Loop.htm">Loop</a>, <a href="While.htm">While-Loop</a>, <a href="For.htm">For-Loop</a>, <a href="Break.htm">Break</a>, <a href="Continue.htm">Continue</a>, <a href="Block.htm">Blocks</a>, <a href="LoopFile.htm">Loop (Dateien &amp; Ordner)</a>, <a href="LoopReg.htm">Registrierung-Schleife</a>, <a href="LoopReadFile.htm">dateilesende Schleife</a>, <a href="LoopParse.htm">Parsing-Loop</a>, <a href="IfExpression.htm">If (Ausdruck)</a></p>
    </article>
  </section>
</div>
<script type="text/javascript">WriteFooter(1);</script>
</body>
</html>
