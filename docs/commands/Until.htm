<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Until</title>
<meta name="keywords" content="Befehl, Ablaufsteuerung, Schleife">
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<link href="../css/default.css" rel="stylesheet" type="text/css">
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-28224374-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
</head>
<body>
<script src="../navbar/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(1);</script>


<h1>Until <span class="ver">[AHK_L 59+]</span></h1>

<p>Eine Schleife, die ausgef&uuml;hrt wird, bis die angegebene Bedingung erf&uuml;llt wird.</p>

<pre class="Syntax">Loop {
    ...
} Until <i>Ausdruck</i></pre>
<h3>Parameter</h3>
<table class="info">
  <tr>
    <td width="15%">Ausdruck</td>
    <td width="85%">Beliebiger g&uuml;ltiger <a href="../Variables.htm#Expressions">Ausdruck</a>.</td>
  </tr>
</table>

<h3>Bemerkungen</h3>
<p>Der Ausdruck wird nach jeder Iteration einmal ausgewertet, auch wenn <a href="Continue.htm">continue</a> verwendet wurde. Wenn die Auswertung des Ausdrucks falsch ist (ein leerer String oder die Zahl 0), dann wird die Schleife fortgesetzt, ansonsten wird die Schleife unterbrochen und die Ausf&uuml;hrung bei der Zeile nach <i>Until</i> fortgesetzt.</p>
<p>Loop Until ist die Kurzfassung von:</p>
<pre>Loop {
    ...
    If (<i>Ausdruck</i>)
        break
}</pre>
<p>Allerdings ist Loop Until oft leichter zu verstehen und kann im Gegensatz zu oben mit einer einzeiligen Aktion verwendet werden. Zum Beispiel:</p>
<pre>Loop
    x *= 2
Until x &gt; y</pre>
<p><i>Until</i> kann kann mit Loop oder For verwendet werden. Zum Beispiel:</p>
<pre>Loop, Read, %A_ScriptFullPath%
    Zeilen .= A_LoopReadLine . "`n"
<b>Until</b> A_Index=5  <em>; Liest die ersten f&uuml;nf Zeilen.</em>
MsgBox % Zeilen

</pre>
<p>Wenn <a href="../Variables.htm#Index">A_Index</a> in dem <i>Ausdruck</i> verwendet wird, dann ist es der Index der Iteration, die gerade beendet wurde.</p>

<h3>Verwandte Befehle</h3>
<p><a href="Loop.htm">Loop</a>, <a href="While.htm">While-Loop</a>, <a href="For.htm">For-Loop</a>, <a href="Break.htm">Break</a>, <a href="Continue.htm">Continue</a>, <a href="Block.htm">Blocks</a>, <a href="LoopFile.htm">Loop (Dateien & Ordner)</a>, <a href="LoopReg.htm">Registrierungsdatenbank-Loop</a>, <a href="LoopReadFile.htm">dateilesende Schleife</a>, <a href="LoopParse.htm">Parsing-Loop</a>, <a href="IfExpression.htm">If (Ausdruck)</a></p>
