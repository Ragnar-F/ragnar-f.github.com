<!DOCTYPE HTML>
<html>
<head>
<title>Catch</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/jquery.js" type="text/javascript"></script>
<script src="../static/tree.jquery.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>Catch <span class="ver">[v1.1.04+]</span></h1>

<p>Bestimmt den Code, der ausgeführt werden soll, wenn eine Ausnahme während einer <a href="Try.htm">Try</a>-Anweisung ausgelöst wird.</p>

<pre class="Syntax" style="line-height: 120%">Catch [, AusgabeVar]
    <i>Anweisung</i></pre>
<pre class="Syntax" style="line-height: 100%">Catch [, AusgabeVar]
{
    <i>Anweisungen</i>
}</pre>
<h3>Parameter</h3>
<dl>

  <dt>AusgabeVar</dt>
  <dd><p><em>(Optional)</em> Name der Variable, in der der Wert von der Ausnahme gespeichert werden soll.</p></dd>

  <dt><i>Anweisung(en)</i></dt>
  <dd><p>Befehle oder Ausdrücke, die ausgeführt werden sollen, wenn eine Ausnahme ausgelöst wird.</p></dd>

</dl>

<h3>Bemerkungen</h3>
<p>Jedes <em>Catch</em> muss mit einer <a href="Try.htm">Try</a>-Anweisung darüber verbunden werden. Ein <em>Catch</em> bezieht sich immer auf die nächste noch nicht beanspruchte <em>Try</em>-Anweisung darüber, sofern dieses Verhalten nicht mit einem <a href="Block.htm">Block</a> geändert wurde.</p>
<p>Je nach Bedarf kann der "<a href="Block.htm#otb">One True Brace Style</a>" verwendet werden. Zum Beispiel:</p>
<pre>try <strong>{</strong>
    ...
<strong>}</strong> catch e <strong>{</strong>
    ...
<strong>}</strong></pre>

<h3 id="RuntimeErrors">Laufzeitfehler</h3>
<p>Eine <em>Try-Catch</em>-Anweisung kann auch dazu verwendet werden, Laufzeitfehler zu verarbeiten. Es gibt zwei Arten von Laufzeitfehlern: solche, die <a href="../misc/ErrorLevel.htm">ErrorLevel</a> normal setzen, und solche, die den aktuellen Thread dazu bringen, sich nach einer Fehlermeldung zu beenden. Ladezeitfehler können nicht verarbeitet werden, da diese erfolgen, bevor die <em>Try</em>-Anweisung ausgeführt wird. Aufgrund der Abwärtskompatibilität (und in einigen Fällen der Einfachheit halber) können Laufzeitfehler nur Ausnahmen auslösen, während ein <em>Try</em>-Block ausgeführt wird. Die meisten Befehle unterstützen die Verwendung von <em>Try-Catch</em>; allerdings wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> weiterhin auf 0 gesetzt, wenn der Befehl erfolgreich war.</p>
<p>Der gespeicherte Wert in <em>AusgabeVar</em> (falls vorhanden) ist ein Ausnahme-<a href="../objects/Object.htm">Objekt</a>, das folgende Felder enthält:</p>
<table class="info"><tr><td>
<p><strong>What:</strong> Der Name des Befehls oder der Funktion, der/die ausgeführt wurde oder ausgeführt werden sollte, als der Fehler auftauchte.</p>
<p><strong>File:</strong> Der vollständige Pfad der Script-Datei, die die fehlerhafte Zeile enthält.</p>
<p><strong>Line:</strong> Die Nummer der fehlerhaften Zeile.</p>
<p><strong>Message:</strong> Eine Fehlermeldung oder ein <a href="../misc/ErrorLevel.htm">ErrorLevel</a>-Wert.</p>
<p><strong>Extra:</strong> Zusätzliche Informationen über den Fehler, falls verfügbar.</p>
</td></tr></table>
<p><strong>Hinweis:</strong> Diese Details sollten nur zum Debuggen verwendet werden, da sie möglicherweise in einer zukünftigen Version geändert werden.</p>

<h3>Siehe auch</h3>
<p><a href="Try.htm">Try</a>, <a href="Throw.htm">Throw</a>, <a href="Finally.htm">Finally</a>, <a href="Block.htm">Blöcke</a></p>
<h3>Beispiele</h3>
<p>Siehe <a href="Try.htm#Examples">Try</a>.</p>

</body>
</html>
