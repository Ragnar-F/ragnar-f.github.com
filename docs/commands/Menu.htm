<!DOCTYPE HTML>
<html>
<head>
<title>Menu</title>
<meta name="keywords" content="Befehl, Grafische Benutzeroberfl&auml;che">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/ga.js" type="text/javascript"></script>
<!--[if lt IE 9]>
<script src="../static/html5.js"></script>
<![endif]-->
<script src="../navbar/NavScript.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <div id="article">
      <h1>Menu</h1>
      <p>Erstellt, l&ouml;scht, &auml;ndert und zeigt Men&uuml;s und Men&uuml;punkte. &Auml;ndert das Tray-Icon und dazugeh&ouml;rige ToolTip. Kontrolliert, ob das Hauptfenster eines <a href="../Scripts.htm#ahk2exe">kompilierten Scripts</a> ge&ouml;ffnet werden kann.</p>
      <pre class="Syntax">Menu, Men&uuml;name, Befehl [, P3, P4, P5]</pre>
      <h3>Parameter</h3>
      <table class="info">
        <tr>
          <td style="width: 15%;">Men&uuml;name</td>
          <td style="width: 85%;"><p>Kann das Wort TRAY oder den Name eines benutzerdefinierten Men&uuml;s enthalten. Ein benutzerdefiniertes Men&uuml; wird automatisch erstellt, sobald dessen Name mit dem <em>Add</em>-Befehl verwendet wird. Zum Beispiel: <code>Menu, EigenesMen&uuml;, Add, Element1</code>.</p>
            <p>Wurde ein benutzerdefiniertes Men&uuml; erstellt, kann es mit dem <em>Show</em>-Befehl angezeigt werden. Mit dem <em>Add</em>-Befehl kann es zudem als Untermen&uuml; an andere Men&uuml;s angef&uuml;gt werden.</p></td>
        </tr>
        <tr>
          <td>Befehl, P3, P4, P5</td>
          <td>Diese 4 Parameter sind voneinander abh&auml;ngig. Siehe untere Liste f&uuml;r die erlaubten Kombinationen.</td>
        </tr>
      </table>
      <h2>Hinzuf&uuml;gen oder &Auml;ndern von Men&uuml;punkten</h2>
      <p><strong>Add [, Men&uuml;punktname, Label-oder-Untermen&uuml;, Pn]</strong>: Dieser vielseitige Befehl kann ein Men&uuml;punkt hinzuf&uuml;gen, ihn mit einem neuen Untermen&uuml; oder Label versehen oder ihn in ein Untermen&uuml; umwandeln (oder umgekehrt). Falls <em>Men&uuml;punktname</em> noch nicht vorhanden ist, wird dieser ins Men&uuml; eingef&uuml;gt. Ansonsten wird <em>Men&uuml;punktname</em> mit dem neu angegebenen <em>Label-oder-Untermen&uuml;</em> versehen.</p>
      <p>Um eine Trennlinie ins Men&uuml; einzuf&uuml;gen, m&uuml;ssen alle drei Parameter weggelassen werden.</p>
      <p>Die Label-Subroutine wird als neuer <a href="../misc/Threads.htm">Thread</a> ausgef&uuml;hrt, sobald der Benutzer den Men&uuml;punkt ausw&auml;hlt (vergleichbar mit <a href="Gosub.htm">Gosub</a> und <a href="../Hotkeys.htm">Hotkey-Subroutinen</a>). Falls <em>Label-oder-Untermen&uuml;</em> weggelassen wird, dient <em>Men&uuml;punktname</em> sowohl als Labelname als auch als Men&uuml;punktname.</p>
      <p>Damit der <em>Men&uuml;punktname</em> zum Untermen&uuml; wird (ein Men&uuml;punkt, der beim Ausw&auml;hlen ein neues Men&uuml; &ouml;ffnet), muss in <em>Label-oder-Untermen&uuml;</em> ein Doppelpunkt angegeben werden, gefolgt vom <em>Men&uuml;namen</em> eines vorhandenen benutzerdefinierten Men&uuml;s. Zum Beispiel:</p>
      <pre>Menu, EigenesUntermen&uuml;, Add, Element1
Menu, Tray, Add, Dieser Men&uuml;punkt ist ein Untermen&uuml;, :EigenesUntermen&uuml;</pre>
      <p>Der letzte Parameter kann den Buchstaben P enthalten, gefolgt von der <a href="../misc/Threads.htm">Thread-Priorit&auml;t</a> des Men&uuml;s, z. B. <code>P1</code>. Falls dieser Parameter beim Hinzuf&uuml;gen eines Men&uuml;punktes weggelassen wird, gilt eine Priorit&auml;t von 0 (Standardwert). Falls dieser Parameter beim Aktualisieren eines Men&uuml;punktes weggelassen wird, bleibt die aktuelle Priorit&auml;t unver&auml;ndert. Um nur die Priorit&auml;t eines vorhandenen Men&uuml;punkts zu &auml;ndern, sollte der Parameter <em>Label-oder-Untermen&uuml;</em> weggelassen werden. F&uuml;r die Priorit&auml;t kann nur eine Dezimalzahl angegeben werden (nicht hexadezimal).</p>
      <p id="Delete"><strong>Delete [, Men&uuml;punktname]</strong>: Bewirkt, dass <em>Men&uuml;punktname</em> aus dem Men&uuml; gel&ouml;scht wird. Voreingestellte Men&uuml;punkte wie Exit k&ouml;nnen nicht einzeln gel&ouml;scht werden. Falls der <em>Standard</em>-Men&uuml;punkt gel&ouml;scht wird, gilt der Effekt der <em>NoDefault</em>-Option. Falls <em>Men&uuml;punktname</em> weggelassen wird, wird das ganze Men&uuml; <em>Men&uuml;name</em> gel&ouml;scht, einschlie&szlig;lich Men&uuml;punkte von anderen Men&uuml;s, die <em>Men&uuml;name</em> als Untermen&uuml; verwenden.</p>
      <p><strong>DeleteAll</strong>: Bewirkt, dass alle benutzerdefinierten Men&uuml;punkte aus dem Men&uuml; gel&ouml;scht werden. Dabei wird das Men&uuml; nicht zerst&ouml;rt, sondern einfach nur leer gelassen, solange nicht die <em>voreingestellten</em> Men&uuml;punkte enthalten sind (siehe unten). Im Gegensatz zu einem Men&uuml;, das komplett mit dem Befehl <em>Delete</em> (siehe oben) gel&ouml;scht wurde, existiert weiterhin ein leeres Men&uuml;. Folglich werden andere Men&uuml;s, die diesen als Untermen&uuml; verwenden, solche Untermen&uuml;s beibehalten.</p>
      <p><strong>Rename, Men&uuml;punktname [, Neuname]</strong>: Bewirkt, dass <em>Men&uuml;punktname</em> in <em>Neuname</em> umbenannt wird (falls <em>Neuname</em> leer ist, wird <em>Men&uuml;punktname</em> in eine Trennlinie umgewandelt). <em>Neuname</em> darf nicht der Name eines vorhandenen benutzerdefinierten Men&uuml;punkts sein. Das aktuelle Ziel-Label oder Untermen&uuml; des Men&uuml;punkts bleibt unver&auml;ndert.</p>
      <p><strong>Check, Men&uuml;punktname</strong>: Setzt ein sichtbares H&auml;kchen neben <em>Men&uuml;punktname</em> (falls noch nicht vorhanden).</p>
      <p><strong>Uncheck, Men&uuml;punktname</strong>: Entfernt das H&auml;kchen (falls vorhanden) von <em>Men&uuml;punktname</em>.</p>
      <p><strong>ToggleCheck, Men&uuml;punktname</strong>: F&uuml;gt ein H&auml;kchen hinzu, falls noch nicht vorhanden, ansonsten wird es entfernt.</p>
      <p><strong>Enable, Men&uuml;punktname</strong>: Erlaubt dem Benutzer, <em>Men&uuml;punktname</em> wieder auszuw&auml;hlen, falls dieser zuvor deaktiviert (ergraut) wurde.</p>
      <p><strong>Disable, Men&uuml;punktname</strong>: Bewirkt, dass <em>Men&uuml;punktname</em> grau gemacht wird, wodurch dieser nicht l&auml;nger vom Benutzer ausgew&auml;hlt werden kann.</p>
      <p><strong>ToggleEnable, Men&uuml;punktname</strong>: Deaktiviert <em>Men&uuml;punktname</em>, falls dieser zuvor aktiviert war, ansonsten wird er aktiviert.</p>
      <p><strong>Default [, Men&uuml;punktname]</strong>: Bewirkt, dass <em>Men&uuml;punktname</em> zum Standard-Men&uuml;punkt wird, in fetter Schrift dargestellt (nur f&uuml;r TRAY sinnvoll; das Setzen des Standard-Men&uuml;punkts in anderen Men&uuml;s ist rein kosmetischer Natur). Wenn der Benutzer das Tray-Icon zweimal anklickt, wird dessen Standard-Men&uuml;punkt ausgef&uuml;hrt. Ist dieser nicht vorhanden, hat Doppelklick keine Wirkung. Falls <em>Men&uuml;punktname</em> weggelassen wird, gilt der Effekt der <em>NoDefault</em>-Option.</p>
      <p><strong>NoDefault</strong>: Beim Tray-Men&uuml;: Bewirkt, dass der voreingestellte Standard-Men&uuml;punkt wiederhergestellt wird - bei unkompilierten Scripts ist das OPEN und bei <a href="../Scripts.htm#ahk2exe">kompilierten Scripts</a> nichts (au&szlig;er wenn die <em>MainWindow</em>-Option aktiv ist). Falls der Men&uuml;punkt OPEN durch Verwenden des NoStandard-Befehls (siehe unten) nicht vorhanden ist, existiert kein Standard-Men&uuml;punkt. Folglich hat ein Doppelklick auf das Tray-Icon keine Wirkung. Bei sonstigen Men&uuml;s: Die Schrift des Standard-Men&uuml;punkts (falls vorhanden) wird nicht l&auml;nger fett dargestellt.</p>
      <p><strong>Standard</strong>: Bewirkt, dass die voreingestellten Men&uuml;punkte ans untere Ende des Men&uuml;s eingef&uuml;gt werden (falls noch nicht vorhanden). Dieser Befehl kann mit einem beliebigen Men&uuml; verwendet werden (auch TRAY).</p>
      <p><strong>NoStandard</strong>: Entfernt alle voreingestellten Men&uuml;punkte (nicht benutzerdefinierten) aus dem Tray-Men&uuml; (sofern vorhanden).</p>
      <h2 id="MenuIcon">Setzen oder Entfernen von Men&uuml;punkt-Icons <span class="ver">[AHK_L 17 +]</span></h2>
      <p><strong>Icon, Men&uuml;punktname, Dateiname [, Iconnummer, Iconbreite]</strong>: Setzt das Icon f&uuml;r <em>Men&uuml;punktname</em>. <em>Dateiname</em> ist entweder eine Icondatei oder ein Bildformat, das von AutoHotkey unterst&uuml;tzt wird. Um von der Datei anstelle der ersten Icon-Gruppe eine andere zu verwenden, kann deren Nummer bei <em>Iconnummer</em> angegeben werden (falls weggelassen, standardm&auml;&szlig;ig 1). Dar&uuml;ber hinaus k&ouml;nnen negative Zahlen als <a href="../AHKL_Features.htm#icons">Ressourcen-Bezeichner</a> verwendet werden. In <em>Iconbreite</em> kann die gew&uuml;nschte Breite des Icons angegeben werden. Falls die angegebene Icon-Gruppe in <em>Iconnummer</em> mehrere Gr&ouml;&szlig;en enth&auml;lt, wird die beste &Uuml;bereinstimmung verwendet und das Icon auf die angegebene Gr&ouml;&szlig;e skaliert. Siehe Beispiel-Abschnitt f&uuml;r Anwendungsbeispiele.</p>
      <p>Derzeit ist es notwendig, die tats&auml;chliche Gr&ouml;&szlig;e anzugeben, wenn die Transparenz des Icons in Windows Vista oder h&ouml;her bewahrt werden soll. Zum Beispiel:</p>
      <pre>Menu, Men&uuml;name, Icon, Men&uuml;punktname, Dateiname.png,, 0</pre>
      <p>Bekannte Einschr&auml;nkung: Icons auf GUI-Men&uuml;leisten werden in Windows XP und h&ouml;her falsch positioniert.</p>
      <p><strong>NoIcon, Men&uuml;punktname</strong>: Entfernt das Icon von <em>Men&uuml;punktname</em>, falls vorhanden.
      <h2>&Auml;ndern des Tray-Icons oder ToolTips <span class="ver">(<em>Men&uuml;name</em> muss TRAY sein)</span></h2>
      <p id="Icon"><strong>Icon [, Dateiname, Iconnummer, 1]</strong>: Bewirkt, dass f&uuml;r das Script-Icon ein Icon von <em>Dateiname</em> verwendet wird. Folgende Dateitypen werden unterst&uuml;tzt: ICO, CUR, ANI, EXE, DLL, CPL, SCR und andere Typen, die Icon-Ressourcen enthalten. Um von der Datei anstelle der ersten Icon-Gruppe eine andere zu verwenden, kann deren Nummer bei <em>Iconnummer</em> angegeben werden (falls weggelassen, standardm&auml;&szlig;ig 1). Zum Beispiel w&uuml;rde die Angabe von <strong>2</strong> bewirken, dass das Standard-Icon von der zweiten Icon-Gruppe verwendet wird. Dar&uuml;ber hinaus k&ouml;nnen negative Zahlen als Ressourcen-Bezeichner verwendet werden. Mit einem Sternchen (*) in <em>Dateiname</em> wird das Standard-Icon wiederhergestellt.</p>
      <p>Der letzte Parameter: Mit einer 1 im letzten Parameter wird das Icon blockiert, mit 0 wieder freigegeben (oder leer lassen, um den aktuellen Status zu belassen). Falls das Icon blockiert wurde, kann es von <a href="Suspend.htm">Suspend</a> und <a href="Pause.htm">Pause</a> nicht ge&auml;ndert werden. Hinweis: Um das <em>aktuelle</em> Icon zu blockieren oder freizugeben, muss 1 oder 0 wie folgt verwendet werden: <code>Menu, Tray, Icon,,, 1</code>.</p>
      <p>Sobald das Tray-Icon ge&auml;ndert wird, &auml;ndert sich auch das Icon bei <a href="InputBox.htm">InputBox</a>, <a href="Progress.htm">Progress</a> und danach erstellte <a href="Gui.htm">GUI</a>-Fenster. <a href="../Scripts.htm#ahk2exe">Kompilierte Scripts</a> sind davon auch betroffen, selbst dann, wenn ein benutzerdefiniertes Icon bei der Kompilierung angegeben wurde. Hinweis: Das &Auml;ndern des Icons macht das Tray-Icon nicht wieder sichtbar, falls es zuvor beispielsweise mit <a href="_NoTrayIcon.htm">#NoTrayIcon</a> versteckt wurde; stattdessen sollte <code>Menu, Tray, Icon</code> (ohne Parameter) verwendet werden.</p>
      <p id="distort">Es k&ouml;nnen leichte Verformungen auftreten, wenn ein Icon ins Tray-Icon geladen wird, das nicht von einer ICO-Datei stammt. Das gilt besonders f&uuml;r 16x16-Icons. Um das zu verhindern, muss das gew&uuml;nschte Icon in eine ICO-Datei gespeichert werden.</p>
      <p>Es gibt einige Icons in DLL- und CPL-Dateien des Betriebssystems, die n&uuml;tzlich sein k&ouml;nnten. Zum Beispiel: <code>Menu, Tray, Icon, Shell32.dll, 174 <em>; Den Pfad der DLL-Datei weglassen, damit es auch in Windows 9x funktioniert.</em></code>.</p>
      <p>Die internen Variablen <strong>A_IconNumber</strong> und <strong>A_IconFile</strong> enthalten die Nummer und Namen (mit vollst&auml;ndigen Pfad) des aktuellen Icons (beide sind leer, wenn das Standard-Icon verwendet wird).</p>
      <p><strong>Icon</strong> (ohne Parameter): Erstellt das Tray-Icon, sofern noch nicht vorhanden. Dabei wird <a href="_NoTrayIcon.htm">#NoTrayIcon</a> &uuml;berschrieben, falls diese Direktive auch im Script vorhanden ist.</p>
      <p><strong>NoIcon</strong>: Entfernt das Tray-Icon, sofern vorhanden. Falls dieser Befehl ganz oben im Script verwendet wird, ist das Tray-Icon beim Starten des Scripts m&ouml;glicherweise noch kurz sichtbar. Um das zu verhindern, sollte stattdessen <a href="_NoTrayIcon.htm">#NoTrayIcon</a> verwendet werden. Die interne Variable <strong>A_IconHidden</strong> enth&auml;lt eine 1, wenn das Tray-Icon zurzeit versteckt ist, andernfalls 0.</p>
      <p><strong>Tip [, Text]</strong>: &Auml;ndert den ToolTip des Tray-Icons (wird angezeigt, wenn sich der Mauszeiger dar&uuml;ber befindet). Mit einem LF-Zeichen (`n) zwischen jeder Zeile kann ein mehrzeiliger ToolTip erstellt werden, zum Beispiel Zeile1`nZeile2. Nur die ersten 127 Zeichen vom <em>Text</em> werden angezeigt, zudem wird <em>Text</em> beim ersten Tabulatorzeichen abgeschnitten, falls vorhanden. Durch Weglassen von <em>Text</em> wird der Standardtext des ToolTips wiederhergestellt. Die interne Variable <strong>A_IconTip</strong> enth&auml;lt den aktuellen Text des ToolTips (leer, wenn der Standardtext verwendet wird).</p>
      <h2>Verschiedene Befehle</h2>
      <p id="Show"><strong>Show [, X, Y]</strong>: Zeigt <em>Men&uuml;name</em> an, bei dem der Benutzer ein Men&uuml;punkt mit Pfeiltasten, Tastenk&uuml;rzel (unterstrichene Buchstaben) oder der Maus ausw&auml;hlen kann. Mit Ausnahme der <a href="Gui.htm">GUI</a>-Men&uuml;leiste kann jedes Men&uuml; angezeigt werden, auch das Tray-Men&uuml;. Sobald X als auch Y weggelassen wird, wird das Men&uuml; auf der aktuellen Position des Mauszeigers angezeigt. Falls eine Koordinate fehlt, wird daf&uuml;r die Position des Mauszeigers verwendet. Die Koordinaten beziehen sich auf das aktive Fenster. Durch Angabe von "<a href="CoordMode.htm">CoordMode</a>, Menu" davor beziehen sich die Koordinaten auf dem ganzen Bildschirm.</p>
      <p><strong>Color, Farbwert [, Single]</strong>: Bewirkt, dass die Hintergrundfarbe des Men&uuml;s auf den angegebenen <em>Farbwert</em> gesetzt wird, der entweder der Name einer HTML-Hauptfarbe oder ein 6-stelliger RGB-Wert ist (siehe <a href="Progress.htm#colors">Farbtabelle</a>). Sobald <em>Farbwert</em> leer ist (oder das Wort Default enth&auml;lt), wird die Standardfarbe des Men&uuml;s wiederhergestellt. Falls das Wort Single im n&auml;chsten Parameter weggelassen wird, werden auch alle Untermen&uuml;s, die an diesem Men&uuml; angef&uuml;gt wurden, farblich ge&auml;ndert. Dieser Befehl funktioniert nicht in Windows 95/NT.</p>
      <p><strong>Click, Klickanzahl</strong>: Die Angabe von 1 in <em>Klickanzahl</em> bewirkt, dass der Standard-Men&uuml;punkt des Tray-Men&uuml;s mit einem einzigen Klick aktiviert werden kann. Mit einer 2 in <em>Klickanzahl</em> wird das Standardverhalten wiederhergestellt (Doppelklick). Zum Beispiel: <code>Menu, Tray, Click, 1</code>.</p>
      <p id="MainWindow"><strong>MainWindow</strong>: Dieser Befehl funktioniert nur bei <a href="../Scripts.htm#ahk2exe">kompilierten Scripts</a>. Dieser Befehl macht es m&ouml;glich, dass das Hauptfenster des Scripts &uuml;ber das Tray-Icon ge&ouml;ffnet werden kann (standardm&auml;&szlig;ig nicht m&ouml;glich). Dadurch werden auch Men&uuml;punkte wie "Lines most recently executed" im Hauptfenster aktiviert, um den Quellcode des Scripts und andere Informationen anzeigen zu lassen. <em>Men&uuml;name</em> muss TRAY sein.</p>
      <p><strong>NoMainWindow</strong> (Standard): Dieser Befehl funktioniert nur bei <a href="../Scripts.htm#ahk2exe">kompilierten Scripts</a>. Dieser Befehl stellt das Standardverhalten des Scripts wieder her - das hei&szlig;t, es wird verhindert, dass das Hauptfenster ge&ouml;ffnet werden kann. Selbst w&auml;hrend diese Option aktiv ist, k&ouml;nnen folgende Befehle weiterhin das Hauptfenster anzeigen, falls diese bei Laufzeit erreicht werden: <a href="ListLines.htm">ListLines</a>, <a href="ListVars.htm">ListVars</a>, <a href="ListHotkeys.htm">ListHotkeys</a> und <a href="KeyHistory.htm">KeyHistory</a>. <em>Men&uuml;name</em> muss TRAY sein.</p>
      <p><strong>UseErrorLevel [, off]</strong>: Falls diese Option nie im Script verwendet wird, gilt standardm&auml;&szlig;ig OFF. Die Einstellung OFF bewirkt, dass ein Dialogfenster angezeigt und der <a href="../misc/Threads.htm">aktuelle Thread</a> beendet wird, sobald der Men&uuml;befehl einen Fehler erzeugt. Mit <code>Menu, Tray, UseErrorLevel</code> wird das Dialogfenster und Beenden des Threads unterdr&uuml;ckt, dabei wird <a href="../misc/ErrorLevel.htm">Errorlevel</a> bei Misserfolg auf 1 und bei Erfolg auf 0 gesetzt. Um diese Option wieder zu deaktivieren, muss OFF im n&auml;chsten Parameter angegeben werden. Diese Einstellung ist global, d. h. alle Men&uuml;s werden beeinflusst, nicht nur <em>Men&uuml;name</em>.</p>
      <h2>Bemerkungen</h2>
      <p>Damit <em>ein</em> Buchstabe im Men&uuml;punktnamen unterstrichen wird, muss ein Und-Zeichen (&amp;) davorgesetzt werden. Sobald das Men&uuml; angezeigt wird, kann dieser Men&uuml;punkt durch Dr&uuml;cken der entsprechenden Taste ausgew&auml;hlt werden. F&uuml;r die direkte Darstellung eines Und-Zeichen m&uuml;ssen zwei aufeinanderfolgende Und-Zeichen wie folgt angegeben werden: &quot;Save && Exit&quot;.</p>
      <p>Die Namen der Men&uuml;s und Men&uuml;punkte k&ouml;nnen bis zu 260 Zeichen lang sein.</p>
      <p>Beim Verweis auf vorhandene Men&uuml;s oder Men&uuml;punkte spielt die Gro&szlig;- und Kleinschreibung keine Rolle - das Und-Zeichen jedoch muss mit angegeben werden. Zum Beispiel: &amp;Open</p>
      <p>Mit <code>Menu, Tray, Add</code> (ohne den restlichen Parametern) k&ouml;nnen Trennlinien hinzugef&uuml;gt werden. Der einzige Nachteil ist, dass Trennlinien nicht einzeln gel&ouml;scht werden k&ouml;nnen. Als &Uuml;bergangsl&ouml;sung sollte zuerst <code>Menu, Tray, DeleteAll</code> verwendet und danach die benutzerdefinierten Men&uuml;punkte nochmals hinzugef&uuml;gt werden.</p>
      <p>Neue Men&uuml;punkte werden immer ans untere Ende des Men&uuml;s anf&uuml;gt. Beim Tray-Men&uuml;: Damit die benutzerdefinierten Men&uuml;punkte &uuml;ber den voreingestellten Men&uuml;punkten angezeigt werden (nachdem die benutzerdefinierten Men&uuml;punkte hinzugef&uuml;gt wurden), muss <code>Menu, Tray, NoStandard</code> und danach <code>Menu, Tray, Standard</code> ausgef&uuml;hrt werden.</p>
      <p>Es ist nicht m&ouml;glich, voreingestellte Men&uuml;punkte wie "Pause Script" und "Suspend Hotkeys" mit Men&uuml;-Unterbefehlen einzeln zu bearbeiten.</p>
      <p>Ist ein Men&uuml; komplett leer (z. B. mithilfe von <code>Menu, EigenesMen&uuml;, DeleteAll</code>), kann es nicht angezeigt werden. Falls das Tray-Men&uuml; leer ist, hat Rechtsklick oder Doppelklick auf das Tray-Icon keine Wirkung (in solchen F&auml;llen ist es normalerweise besser, <a href="_NoTrayIcon.htm">#NoTrayIcon</a> zu verwenden).</p>
      <p>Wenn die Subroutine des Men&uuml;punkts bereits l&auml;uft und der Benutzer diesen Men&uuml;punkt wieder ausw&auml;hlt, wird ein neuer <a href="../misc/Threads.htm">Thread</a> erstellt, der die gleiche Subroutine ausf&uuml;hrt und den vorherigen Thread unterbricht. Um solche Ereignisse stattdessen nach hinten zu verschieben, sollte <a href="Critical.htm">Critical</a> auf der ersten Zeile der Subroutine angegeben werden (allerdings werden dadurch auch andere Threads zwischengespeichert/nach hinten verschoben, wie das Dr&uuml;cken eines Hotkeys).</p>
      <p>Sobald eine Subroutine durch einen Men&uuml;punkt ausgef&uuml;hrt wird, beginnt diese mit den Standardwerten von Einstellungen wie <a href="SendMode.htm">SendMode</a>. Diese Werte k&ouml;nnen im <a href="../Scripts.htm#auto">automatischen Ausf&uuml;hrungsbereich</a> ge&auml;ndert werden.</p>
      <p>Die internen Variablen <a href="../Variables.htm#ThisMenuItem"><strong>A_ThisMenuItem</strong></a> und <a href="../Variables.htm#ThisMenuItemPos"><strong>A_ThisMenuItemPos</strong></a> enthalten den Namen und die Position des benutzerdefinierten Men&uuml;punkts, der zuletzt vom Benutzer ausgew&auml;hlt wurde (leer, wenn kein Men&uuml;punkt ausgew&auml;hlt wurde). Ebenso enth&auml;lt <strong>A_ThisMenu</strong> den Namen des Men&uuml;s, bei dem <strong>A_ThisMenuItem</strong> ausgew&auml;hlt wurde. Diese Variablen sind beim Erstellen eines Men&uuml;s n&uuml;tzlich, dessen Inhalt nicht gleich bleibt. In so einem Fall sollten alle Men&uuml;punkte auf das gleiche Label verweisen, welches auf die oben genannten Variablen zur&uuml;ckgreift, um zu bestimmen, welche Ma&szlig;nahmen ergriffen werden sollen.</p>
      <p>F&uuml;r die dauerhafte Aufrechterhaltung eines Scripts, das weder Hotkeys noch <a href="Gui.htm">GUI</a> enth&auml;lt (zum Beispiel jedoch benutzerdefinierte Men&uuml;s oder Men&uuml;punkte), kann <a href="_Persistent.htm">#Persistent</a> verwendet werden.</p>
      <h2>Verwandte Befehle</h2>
      <p><a href="Gui.htm">GUI</a>, <a href="../misc/Threads.htm">Threads</a>, <a href="Thread.htm">Thread</a>, <a href="Critical.htm">Critical</a>, <a href="_NoTrayIcon.htm">#NoTrayIcon</a>, <a href="Gosub.htm">Gosub</a>, <a href="Return.htm">Return</a>, <a href="SetTimer.htm">SetTimer</a>, <a href="_Persistent.htm">#Persistent</a></p>
      <h2>Beispiele</h2>
      <pre class="NoIndent"><em>; BEISPIEL #1: Mit diesem Script wird ein neuer Men&uuml;punkt ans Ende des Tray-Icon-Men&uuml;s angef&uuml;gt.</em>

#Persistent  <em>; H&auml;lt das Script aufrecht, bis der Benutzer es beendet.</em>
Menu, Tray, Add  <em>; Erstellt eine Trennlinie.</em>
Menu, Tray, Add, Element1, MenuHandler  <em>; Erstellt einen neuen Men&uuml;punkt.</em>
Return

MenuHandler:
MsgBox Sie haben %A_ThisMenuItem% im Men&uuml; %A_ThisMenu% ausgew&auml;hlt.
Return</pre>
      <p>&nbsp;</p>
      <pre class="NoIndent"><em>; BEISPIEL #2: Mit diesem Script wird ein aufklappbares Men&uuml; erstellt, das angezeigt wird, sobald der Benutzer WIN+Z dr&uuml;ckt.</em>

<em>; Erstellt ein aufklappbares Men&uuml; durch Hinzuf&uuml;gen von Men&uuml;punkten.</em>
Menu, EigenesMen&uuml;, Add, Element1, MenuHandler
Menu, EigenesMen&uuml;, Add, Element2, MenuHandler
Menu, EigenesMen&uuml;, Add  <em>; F&uuml;gt eine Trennlinie hinzu.</em>

<em>; Erstellt ein weiteres Men&uuml;, das als Untermen&uuml; f&uuml;r das obige Men&uuml; dient.</em>
Menu, Submenu1, Add, Element1, MenuHandler
Menu, Submenu1, Add, Element2, MenuHandler

<em>; Erstellt ein Untermen&uuml; im ersten Men&uuml;punkt (mit einem nach rechts gerichteten Pfeil). Sobald der Benutzer diesen ausw&auml;hlt, wird das zweite Men&uuml; angezeigt.</em>
Menu, EigenesMen&uuml;, Add, Eigenes Untermen&uuml;, :Submenu1

Menu, EigenesMen&uuml;, Add  <em>; Setzt eine Trennlinie unter dem Untermen&uuml;.</em>
Menu, EigenesMen&uuml;, Add, Element3, MenuHandler  <em>; Setzt einen weiteren Men&uuml;punkt unter dem Untermen&uuml;.</em>
Return <em>; Ende des automatischen Ausf&uuml;hrungsbereichs.</em>

MenuHandler:
MsgBox Sie haben %A_ThisMenuItem% im Men&uuml; %A_ThisMenu% ausgew&auml;hlt.
Return

#z::Menu, EigenesMen&uuml;, Show  <em>; WIN+Z dr&uuml;cken, um das Men&uuml; anzuzeigen.</em></pre>
      <p>&nbsp;</p>
      <pre class="NoIndent"><em>; BEISPIEL #3: Dieses Script demonstriert einige Men&uuml;befehle.</em>

#Persistent
#SingleInstance
Menu, Tray, Add <em>; Trennlinie</em>
Menu, Tray, Add, TestToggle&amp;Check

Menu, Tray, Add, TestToggleEnable
Menu, Tray, Add, TestDefault
Menu, Tray, Add, TestStandard
Menu, Tray, Add, TestDelete
Menu, Tray, Add, TestDeleteAll
Menu, Tray, Add, TestRename
Menu, Tray, Add, Test
Return

<em>;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</em>

TestToggle&amp;Check:

Menu, Tray, ToggleCheck, TestToggle&amp;Check

Menu, Tray, Enable, TestToggleEnable <em>; Aktiviert auch den n&auml;chsten Test, da dieser seine Deaktivierung selbst nicht r&uuml;ckg&auml;ngig machen kann.</em>
Menu, Tray, Add, TestDelete <em>; Das Gleiche wie oben.</em>
Return

TestToggleEnable:
Menu, Tray, ToggleEnable, TestToggleEnable
Return

TestDefault:
If default = TestDefault
{
    Menu, Tray, NoDefault
    default =
}
Else
{
    Menu, Tray, Default, TestDefault
    default = TestDefault
}
Return

TestStandard:
If standard &lt;&gt; n
{
    Menu, Tray, NoStandard
    standard = n
}
Else
{
    Menu, Tray, Standard
    standard = y
}
Return

TestDelete:
Menu, Tray, delete, TestDelete
Return

TestDeleteAll:
Menu, Tray, DeleteAll
Return

TestRename:
If Neuname &lt;&gt; renamed
{
    Altname = TestRename
    Neuname = renamed
}
Else
{
    Altname = renamed
    Neuname = TestRename
}
Menu, Tray, rename, %Altname%, %Neuname%
Return

Test:
MsgBox Sie haben %A_ThisMenuItem% im Men&uuml; %A_ThisMenu% ausgew&auml;hlt.
Return</pre>
      <pre class="NoIndent"><em>; BEISPIEL #4: Mit diesem Script werden Icons zu den Men&uuml;punkten hinzuf&uuml;gt.</em>
Menu, Dateimen&uuml;, Add, Script-Icon, MenuHandler
Menu, Dateimen&uuml;, Add, Sperren-Icon, MenuHandler
Menu, Dateimen&uuml;, Add, Pause-Icon, MenuHandler
Menu, Dateimen&uuml;, Icon, Script-Icon, %A_AhkPath%, 2 <em>; Verwendet die zweite Icongruppe von der Datei.</em>
Menu, Dateimen&uuml;, Icon, Sperren-Icon, %A_AhkPath%, -206 <em>; Verwendet das Icon mit dem Ressourcen-Bezeichner 206.</em>
Menu, Dateimen&uuml;, Icon, Pause-Icon, %A_AhkPath%, -207 <em>; Verwendet das Icon mit dem Ressourcen-Bezeichner 207.</em>
Menu, EigeneMen&uuml;leiste, Add, &amp;Datei, :Dateimen&uuml;
Gui, Menu, EigeneMen&uuml;leiste
Gui, Add, Button, gExit, Dieses Beispiel beenden
Gui, Show
MenuHandler:
Return

Exit:
ExitApp

</pre>
    </div>
  </section>
</div>
<script type="text/javascript">WriteFooter(1);</script>
</body>
</html>
