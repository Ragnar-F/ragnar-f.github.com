<!DOCTYPE HTML>
<html>
<head>
<title>Menu</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>Menu</h1>

<p>Erstellt, löscht, ändert und zeigt Menüs und Menüpunkte. Ändert das Tray-Icon und sein ToolTip. Kontrolliert, ob das Hauptfenster eines <a href="../Scripts.htm#ahk2exe">kompilierten Scripts</a> geöffnet werden kann.</p>

<pre class="Syntax">Menu, Menüname, Befehl [, P3, P4, P5]</pre>
<h3>Parameter</h3>
<dl>

  <dt>Menüname</dt>
  <dd><p>Kann TRAY oder der Name eines benutzerdefinierten Menüs sein. Ein benutzerdefiniertes Menü steht automatisch zur Verfügung, nachdem man das erste Mal den <em>Add</em>-Befehl in Verbindung mit dem Namen des Menüs verwendet hat. Zum Beispiel: <code>Menu, MeinMenü, Add, Element1</code>.</p>
      <p>Einmal erstellt, kann ein benutzerdefiniertes Menü mit dem <em>Show</em>-Befehl angezeigt werden. Mit dem <em>Add</em>-Befehl kann es zudem als Untermenü an andere Menüs angefügt werden.</p></dd>

  <dt>Befehl, P3, P4, P5</dt>
  <dd><p>Diese 4 Parameter sind voneinander abhängig. Siehe untere Liste, welche Kombinationen möglich sind.</p></dd>

</dl>

<h2>Einfügen oder Ändern von Menüpunkten</h2>
<p><strong>Add [, Menüpunktname, Label-oder-Untermenü, Pn]</strong>: Dieser Befehl ist für mehrere Zwecke gedacht - er kann einen Menüpunkt einfügen, einen Menüpunkt mit einem neuen Untermenü oder Label aktualisieren, oder einen normalen Menüpunkt in ein Untermenü umwandeln (oder umgekehrt). Wenn <em>Menüpunktname</em> noch nicht existiert, wird er in das Menü eingefügt. Ansonsten wird <em>Menüpunktname</em> mit dem neu angegebenen <em>Label-oder-Untermenü</em> aktualisiert.</p>
<p>Zum Einfügen einer Menü-Trennlinie müssen alle drei Parameter weggelassen werden.</p>
<p>Die Label-Subroutine wird als neuer <a href="../misc/Threads.htm">Thread</a> gestartet, wenn der Benutzer den Menüpunkt anklickt (vergleichbar mit <a href="Gosub.htm">Gosub</a> und <a href="../Hotkeys.htm">Hotkey-Subroutinen</a>). Fehlt <em>Label-oder-Untermenü</em>, wird <em>Menüpunktname</em> sowohl als Labelname als auch als Menüpunktname verwendet.</p>
<p>Wenn <em>Menüpunktname</em> ein Untermenü werden soll - also ein Menüpunkt, der ein neues Menü öffnet - muss in <em>Label-oder-Untermenü</em> ein Doppelpunkt und der <em>Menüname</em> eines vorhandenen benutzerdefinierten Menüs angegeben werden. Zum Beispiel:</p>
<pre>Menu, MeinUntermenü, Add, Element1
Menu, Tray, Add, Dieser Menüpunkt ist ein Untermenü, :MeinUntermenü</pre>
<p>Der letzte Parameter kann den Buchstaben P enthalten, gefolgt von der <a href="../misc/Threads.htm">Thread-Priorität</a> des Menüs, z. B. <code>P1</code>. Fehlt dieser Parameter beim Einfügen eines Menüpunktes, wird die Priorität den Standardwert von 0 haben. Fehlt er beim Aktualisieren eines Menüpunktes, wird die Priorität des Menüpunktes beibehalten. Wenn man nur die Priorität eines vorhandenen Menüpunkts ändern will, muss der <em>Label-oder-Untermenü</em>-Parameter weggelassen werden. Verwende eine dezimale (nicht hexadezimale) Zahl als Priorität.</p>
<p><strong><a name="Delete"></a>Delete [, Menüpunktname]</strong>: Löscht <em>Menüpunktname</em> aus dem Menü. Voreingestellte Menüpunkte wie Exit können nicht gelöscht werden (zumindest nicht einzeln). Das Löschen des <em>Standard</em>-Menüpunktes ist das gleiche wie, als hätte man die <em>NoDefault</em>-Option angegeben. Fehlt <em>Menüpunktname</em>, wird das gesamte <em>Menüname</em>-Menü gelöscht, sowie alle Menüpunkte in anderen Menüs, die <em>Menüname</em> als Untermenü verwenden.</p>
<p><strong>DeleteAll</strong>: Löscht alle benutzerdefinierten Menüpunkte aus dem Menü, und hinterlässt es als leeres Menü, sofern es keine <em>voreingestellten</em> Menüpunkte enthält (siehe unten). Im Gegensatz zu einem gelöschten Menü via <em>Delete</em>-Befehl (siehe oben), bleibt ein leeres Menü weiterhin bestehen; andere Menüs, die dieses leere Menü als Untermenü verwenden, werden demzufolge solche Untermenüs beibehalten.</p>
<p><strong>Rename, Menüpunktname [, NeuerName]</strong>: Ändert <em>Menüpunktname</em> in <em>NeuerName</em> (wenn <em>NeuerName</em> leer ist, wird <em>Menüpunktname</em> in eine Trennlinie umgewandelt). <em>NeuerName</em> darf nicht der Name eines vorhandenen benutzerdefinierten Menüpunkts sein. Das aktuelle Ziel-Label oder Untermenü des Menüpunkts bleibt unverändert.</p>
<p><strong>Check, Menüpunktname</strong>: Setzt ein sichtbares Häkchen neben <em>Menüpunktname</em> (wenn noch keines da ist).</p>
<p><strong>Uncheck, Menüpunktname</strong>: Entfernt das Häkchen (falls vorhanden) von <em>Menüpunktname</em>.</p>
<p><strong>ToggleCheck, Menüpunktname</strong>: Fügt ein Häkchen hinzu, wenn dort keines war; ansonsten wird es entfernt.</p>
<p><strong>Enable, Menüpunktname</strong>: Erlaubt dem Benutzer, den <em>Menüpunktname</em> wieder anzuklicken, falls er zuvor deaktiviert (ergraut) war.</p>
<p><strong>Disable, Menüpunktname</strong>: Zeigt den <em>Menüpunktname</em> in einer grauen Farbe an, um kenntlich zu machen, dass der Benutzer ihn nicht anklicken kann.</p>
<p><strong>ToggleEnable, Menüpunktname</strong>: Deaktiviert <em>Menüpunktname</em>, falls er zuvor aktiviert war; ansonsten wird er aktiviert.</p>
<p><strong>Default [, Menüpunktname]</strong>: Macht den <em>Menüpunktname</em> zum Standard-Menüpunkt und stellt ihn in fetter Schrift dar (das Setzen des Standard-Menüpunkts bei Menüs, die nicht TRAY sind, ist rein kosmetischer Natur). Wenn der Benutzer das Tray-Icon doppelt anklickt, wird der Standard-Menüpunkt gestartet. Wenn es keinen Standard-Menüpunkt gibt, hat ein Doppelklick keine Wirkung. Das Weglassen von <em>Menüpunktname</em> ist das gleiche wie, als hätte man die <em>NoDefault</em>-Option angegeben.</p>
<p><strong>NoDefault</strong>: Beim Tray-Menü: Stellt den voreingestellten Standard-Menüpunkt wieder her - bei unkompilierten Scripts ist das OPEN und bei <a href="../Scripts.htm#ahk2exe">kompilierten Scripts</a> nichts (außer wenn die <em>MainWindow</em>-Option aktiv ist). Wenn der OPEN-Menüpunkt durch vorheriges Verwenden des NoStandard-Befehls nicht vorhanden ist, wird es keinen Standard-Menüpunkt geben; ein Doppelklick auf das Tray-Icon wird demzufolge keine Wirkung haben. Bei Menüs, die nicht TRAY sind: Alle vorhandenen Standard-Menüpunkte werden nicht mehr in fetter Schrift dargestellt.</p>
<p><strong>Standard</strong>: Fügt die voreingestellten Menüpunkte an das untere Ende des Menüs ein (sofern sie nicht bereits vorhanden sind). Dieser Befehl kann in Verbindung mit einem Tray-Menü oder jedem anderen Menü verwendet werden.</p>
<p><strong>NoStandard</strong>: Entfernt alle voreingestellten (nicht benutzerdefinierten) Menüpunkte aus dem Tray-Menü (sofern sie vorhanden sind).</p>
<h2 id="MenuIcon">Setzen oder Entfernen von Menüpunkt-Icons <span class="ver">[AHK_L 17 +]</span></h2>
<p><strong>Icon, Menüpunktname, Dateiname [, Iconnummer, Iconbreite]</strong>: Setzt das Icon für <em>Menüpunktname</em>. <em>Dateiname</em> kann entweder eine Icondatei sein, oder ein Bild in einem Format, das von AutoHotkey unterstützt wird. Um anstelle der ersten Icon-Gruppe eine andere aus der Datei zu verwenden, muss ihre Nummer bei <em>Iconnummer</em> angegeben werden (fehlt dieser Parameter, gilt standardmäßig 1). Wenn der <em>Iconnummer</em>-Parameter negativ ist, wird sein absoluter Wert als Ressourcen-ID eines Icons innerhalb einer ausführbaren Datei vermutet. Die gewünschte Breite des Icons kann in <em>Iconbreite</em> angegeben werden. Wenn die angegebene Icon-Gruppe in <em>Iconnummer</em> mehrere Icon-Größen enthält, wird das Icon auf die naheliegendste Größe skaliert. Im Beispiel-Abschnitt findest du Anwendungsbeispiele.</p>
<p>Derzeit ist es notwendig, die tatsächliche Größe anzugeben, wenn die Transparenz des Icons in Windows Vista oder höher erhalten bleiben soll. Zum Beispiel:</p>
<pre>Menu, Menüname, Icon, Menüpunktname, Dateiname.png,, 0</pre>
<p>Bekannte Einschränkung: In Windows XP und höher werden Icons auf GUI-Menüleisten falsch positioniert.</p>
<p><strong>NoIcon, Menüpunktname</strong>: Entfernt das Icon von <em>Menüpunktname</em>, sofern vorhanden.
<h2>Ändern des Tray-Icons oder ToolTips <span class="ver">(<em>Menüname</em> muss TRAY sein)</span></h2>
<p><strong><a name="Icon"></a>Icon [, Dateiname, Iconnummer, 1]</strong>: Ändert das Script-Icon in eines der Icons aus <em>Dateiname</em>. Folgende Dateitypen werden unterstützt: ICO, CUR, ANI, EXE, DLL, CPL, SCR und andere Typen, die Icon-Ressourcen enthalten. Um anstelle der ersten Icon-Gruppe eine andere aus der Datei zu verwenden, muss ihre Nummer bei <em>Iconnummer</em> angegeben werden (fehlt dieser Parameter, gilt standardmäßig 1). Zum Beispiel würde <strong>2</strong> das Standard-Icon aus der zweiten Icon-Gruppe laden. Wenn der <em>Iconnummer</em>-Parameter negativ ist, wird sein absoluter Wert als Ressourcen-ID eines Icons innerhalb einer ausführbaren Datei vermutet. Durch Verwenden eines Sternchens (*) in <em>Dateiname</em> kann das Standard-Icon des Scripts wiederhergestellt werden.</p>
<p>Der letzte Parameter: Verwende eine 1 im letzten Parameter, um das Icon einzufrieren, oder eine 0, um diesen Zustand wieder aufzuheben (oder lasse ihn leer, um den aktuellen Status beizubehalten). Wenn das Icon eingefroren wurde, kann es von <a href="Pause.htm">Pause</a> und <a href="Suspend.htm">Suspend</a> nicht geändert werden. Hinweis: Um das <em>aktuelle</em> Icon einzufrieren bzw. diesen Zustand aufzuheben, muss eine 1 oder 0 wie folgt verwendet werden: <code>Menu, Tray, Icon,,, 1</code>.</p>
<p>Das Ändern des Tray-Icons ändert auch das angezeigte Icon in <a href="InputBox.htm">InputBox</a>, <a href="Progress.htm">Progress</a> und danach erstellte <a href="Gui.htm">GUI</a>-Fenster. <a href="../Scripts.htm#ahk2exe">Kompilierte Scripts</a> sind davon auch betroffen, selbst wenn ein benutzerdefiniertes Icon beim Kompilieren angegeben wurde. Hinweis: Das Ändern des Icons wird das Tray-Icon nicht sichtbar machen, wenn es zuvor mit Mitteln wie <a href="_NoTrayIcon.htm">#NoTrayIcon</a> versteckt wurde; um das zu tun, verwende <code>Menu, Tray, Icon</code> (ohne Parameter).</p>
<p><a name="distort"></a>Es können leichte Verformungen auftreten, wenn Tray-Icons aus Dateitypen geladen werden, die keine ICO-Dateien sind. Dies gilt besonders bei 16x16-Icons. Um das zu verhindern, muss das gewünschte Icon in eine ICO-Datei gespeichert werden.</p>
<p>Es gibt einige Icons innerhalb der DLL- und CPL-Systemdateien, die nützlich sein könnten. Zum Beispiel: <code>Menu, Tray, Icon, Shell32.dll, 174</code>.</p>
<p>Die integrierten Variablen <strong>A_IconNumber</strong> und <strong>A_IconFile</strong> enthalten die Nummer und Namen (mit vollständigen Pfad) des aktuellen Icons (beide sind leer, wenn das Standard-Icon verwendet wird).</p>
<p><strong>Icon</strong> (ohne Parameter): Erstellt das Tray-Icon, sofern es noch nicht vorhanden ist. Dies wird <a href="_NoTrayIcon.htm">#NoTrayIcon</a> überschreiben, wenn diese Direktive auch im Script vorhanden ist.</p>
<p><strong>NoIcon</strong>: Entfernt das Tray-Icon, sofern vorhanden. Verwendet man diesen Befehl ganz oben im Script, könnte das Tray-Icon beim Starten des Scripts kurz sichtbar sein. Um das zu verhindern, muss <a href="_NoTrayIcon.htm">#NoTrayIcon</a> stattdessen verwendet werden. Die integrierte Variable <strong>A_IconHidden</strong> enthält eine 1, wenn das Tray-Icon zurzeit versteckt ist, oder ansonsten eine 0.</p>
<p><strong>Tip [, Text]</strong>: Ändert das ToolTip des Tray-Icons - es wird angezeigt, wenn sich der Mauszeiger darüber befindet. Um ein mehrzeiliges Tooltip zu erstellen, muss man zwischen jeder Zeile das Zeilenumbruchszeichen (`n) verwenden, z. B. Zeile1`nZeile2. Es werden nur die ersten 127 Zeichen des <em>Text</em>-Parameters angezeigt, außerdem wird der <em>Text</em> beim ersten Tabulatorzeichen, falls vorhanden, abgeschnitten. Fehlt der <em>Text</em>-Parameter, wird der Standardtext des ToolTips wiederhergestellt. Die integrierte Variable <strong>A_IconTip</strong> enthält den aktuellen Text des ToolTips (sie ist leer, wenn der Standardtext verwendet wird).</p>
<h2>Verschiedene Befehle</h2>
<p><strong><a name="Show"></a>Show [, X, Y]</strong>: Zeigt den <em>Menüname</em> an, so dass der Benutzer ein Menüpunkt mit Pfeiltasten, Tastenkürzel (unterstrichene Buchstaben) oder der Maus auswählen kann. Mit Ausnahme der <a href="Gui.htm">GUI</a>-Menüleiste kann jedes Menü, einschließlich das Tray-Menü, angezeigt werden. Fehlt sowohl der X- als auch Y-Parameter, wird das Menü bei der aktuellen Position des Mauszeigers angezeigt. Fehlt nur einer dieser Parameter, wird stattdessen die Position des Mauszeigers verwendet. Die Koordinaten sind relativ zum aktiven Fenster. Verwende davor "<a href="CoordMode.htm">CoordMode</a>, Menu", um sie relativ zum ganzen Bildschirm zu machen.</p>
<p><strong>Color, Farbwert [, Single]</strong>: Setzt die Hintergrundfarbe des Menüs auf den angegebenen <em>Farbwert</em>, der entweder einer der 16 primären HTML-Farbnamen oder ein 6-stelliger RGB-Wert sein kann (siehe <a href="Progress.htm#colors">Farbtabelle</a>). Lass den <em>Farbwert</em>-Parameter leer (oder verwende das Wort Default), um die Standardfarbe des Menüs wiederherzustellen. Fehlt das Wort Single im nächsten Parameter, werden auch die Hintergrundfarben seiner Untermenüs geändert.</p>
<p><strong>Click, Klickanzahl</strong>: Verwende eine 1 bei <em>Klickanzahl</em>, damit der Standard-Menüpunkt des Tray-Menüs mit einem einzelnen Klick aktiviert werden kann. Verwende eine 2 bei <em>Klickanzahl</em>, um das Standardverhalten wiederherzustellen (Doppelklick). Zum Beispiel: <code>Menu, Tray, Click, 1</code>.</p>
<p><strong><a name="MainWindow"></a>MainWindow</strong>: Dieser Befehl funktioniert nur bei <a href="../Scripts.htm#ahk2exe">kompilierten Scripts</a>. Dieser Befehl macht es möglich, dass das Hauptfenster des Scripts über das Tray-Icon geöffnet werden kann (standardmäßig nicht möglich). Er aktiviert außerdem die Menüpunkte im View-Menü des Hauptfensters, wie z. B. "Lines most recently executed", das den Quellcode des Scripts und andere Informationen anzeigt. <em>Menüname</em> muss TRAY sein.</p>
<p><strong>NoMainWindow</strong> (Standard): Dieser Befehl funktioniert nur bei <a href="../Scripts.htm#ahk2exe">kompilierten Scripts</a>. Er stellt das Standardverhalten des Scripts wieder her - das heißt, dass er das Öffnen des Hauptfensters verhindert. Auch wenn diese Option aktiviert ist, kann das Hauptfenster weiterhin durch folgende Befehle geöffnet werden, sofern sie beim Ausführen des Scripts erreicht werden: <a href="ListLines.htm">ListLines</a>, <a href="ListVars.htm">ListVars</a>, <a href="ListHotkeys.htm">ListHotkeys</a> und <a href="KeyHistory.htm">KeyHistory</a>. <em>Menüname</em> muss TRAY sein.</p>
<p><strong>UseErrorLevel [, off]</strong>: Wenn diese Option nie im Script vorkommt, gilt standardmäßig OFF. Die OFF-Einstellung zeigt ein Dialogfenster an und beendet den <a href="../misc/Threads.htm">aktuellen Thread</a>, wann immer der Menu-Befehl einen Fehler erzeugt. Verwende <code>Menu, Tray, UseErrorLevel</code>, um das Dialogfenster und Beenden des Threads zu verhindern; stattdessen wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> bei Misserfolg auf 1 und bei Erfolg auf 0 gesetzt. Um diese Option wieder zu deaktivieren, muss OFF im nächsten Parameter angegeben werden. Diese Einstellung ist global - das heißt, dass sie alle Menüs beeinflusst, nicht nur <em>Menüname</em>.</p>
<h2>Bemerkungen</h2>
<p>Um einen Buchstaben im Namen <em>eines</em> Menüpunktnamens zu unterstreichen, muss diesem Buchstaben ein Und-Zeichen (&amp;) vorangestellt werden. Sobald das Menü angezeigt wird, kann man so ein Menüpunkt durch Drücken der entsprechenden Taste aktivieren. Um ein literales Und-Zeichen anzuzeigen, müssen zwei aufeinanderfolgende Und-Zeichen wie folgt angegeben werden: "Save &amp;&amp; Exit"</p>
<p>Die Namen der Menüs und Menüpunkte können bis zu 260 Zeichen lang sein.</p>
<p>Beim Verweisen auf ein vorhandenes Menü oder Menüpunkt spielt die Groß- und Kleinschreibung keine Rolle, aber das Und-Zeichen muss mit enthalten sein. Zum Beispiel: &amp;Open</p>
<p>Mit <code>Menu, Tray, Add</code> (ohne den restlichen Parametern) können Trennlinien eingefügt werden. Allerdings ist es derzeit nicht möglich, Trennlinien einzeln zu löschen. Um das zu umgehen, muss du <code>Menu, Tray, DeleteAll</code> verwenden und dann deine benutzerdefinierten Menüpunkte neu einfügen.</p>
<p>Neue Menüpunkte werden immer an das untere Ende des Menüs eingefügt. Beim Tray-Menü: Wenn deine Menüpunkte vor den voreingestellten Menüpunkten erscheinen sollen (nachdem du deine eigenen Menüpunkte eingefügt hast), musst du <code>Menu, Tray, NoStandard</code> und dann <code>Menu, Tray, Standard</code> ausführen.</p>
<p>Es ist kein Menu-Unterbefehl in der Lage, voreingestellte Menüpunkte wie "Pause Script" und "Suspend Hotkeys" einzeln zu bearbeiten.</p>
<p>Ein Menü, das komplett leer ist - z. B. via <code>Menu, MeinMenü, DeleteAll</code> - kann nicht angezeigt werden. Wenn das Tray-Menü leer ist, wird das Anklicken des Tray-Icons keine Wirkung haben (in solchen Fällen ist es üblicherweise besser, <a href="_NoTrayIcon.htm">#NoTrayIcon</a> zu verwenden).</p>
<p>Wenn die Subroutine des Menüpunkts bereits läuft und der Benutzer diesen Menüpunkt wieder auswählt, wird ein neuer <a href="../misc/Threads.htm">Thread</a> erstellt, um die gleiche Subroutine nochmals auszuführen, und der vorherige Thread unterbrochen. Um solche Ereignisse stattdessen für später zwischenzuspeichern, musst du <a href="Critical.htm">Critical</a> in der ersten Zeile der Subroutine angeben (allerdings wird das auch andere Threads zwischenspeichern bzw. verzögern, wie z. B. das Drücken eines Hotkeys).</p>
<p>Wann immer eine Subroutine über einen Menüpunkt gestartet wird, gelten zu Beginn die Standardeinstellungen bei Befehlen wie <a href="SendMode.htm">SendMode</a>. Diese Standardeinstellungen können im <a href="../Scripts.htm#auto">automatischen Ausführungsbereich</a> geändert werden.</p>
<p>Die integrierten Variablen <strong><a href="../Variables.htm#ThisMenuItem">A_ThisMenuItem</a></strong> und <strong><a href="../Variables.htm#ThisMenuItemPos">A_ThisMenuItemPos</a></strong> enthalten den Namen und die Position des benutzerdefinierten Menüpunkts, der zuletzt vom Benutzer ausgewählt wurde (sie sind leer, wenn kein Menüpunkt ausgewählt wurde). Außerdem ist <strong>A_ThisMenu</strong> der Name des Menüs, in dem <strong>A_ThisMenuItem</strong> ausgewählt wurde. Diese Variablen sind nützlich, wenn man ein Menü erstellt, dessen Inhalte nicht immer gleich sind. In so einem Fall empfiehlt es sich, alle Menüpunkte auf das gleiche Label verweisen und dieses Label auf die oben genannten Variablen zurückgreifen zu lassen, um die zu ergreifenden Maßnahmen zu bestimmen.</p>
<p>Mit der <a href="_Persistent.htm">#Persistent</a>-Direktive kann ein Script ohne Hotkey und <a href="Gui.htm">GUI</a> aufrecht erhalten werden - wie z. B. ein Script, das nur benutzerdefinierte Menüs oder Menüpunkte enthält.</p>
<h2>Siehe auch</h2>
<p><a href="Gui.htm">GUI</a>, <a href="../misc/Threads.htm">Threads</a>, <a href="Thread.htm">Thread</a>, <a href="Critical.htm">Critical</a>, <a href="_NoTrayIcon.htm">#NoTrayIcon</a>, <a href="Gosub.htm">Gosub</a>, <a href="Return.htm">Return</a>, <a href="SetTimer.htm">SetTimer</a>, <a href="_Persistent.htm">#Persistent</a></p>
<h2>Beispiele</h2>
<pre class="NoIndent"><em>; BEISPIEL #1: Dieses Script zeigt, wie ein neuer Menüpunkt an das Ende des Tray-Icon-Menüs eingefügt werden kann.</em>

#Persistent  <em>; Hält das Script aufrecht, bis der Benutzer es beendet.</em>
Menu, Tray, Add  <em>; Erstellt eine Trennlinie.</em>
Menu, Tray, Add, Element1, MenuHandler  <em>; Erstellt einen neuen Menüpunkt.</em>
return

MenuHandler:
MsgBox Sie haben %A_ThisMenuItem% im Menü %A_ThisMenu% ausgewählt.
return</pre>
<p>&nbsp;</p>
<pre class="NoIndent"><em>; BEISPIEL #2: Dieses Script zeigt, wie ein aufklappbares Menü erstellt werden kann, das angezeigt werden soll, wenn der Benutzer WIN+Z drückt.</em>

<em>; Erstellt ein aufklappbares Menü durch Hinzufügen von Menüpunkten.</em>
Menu, MeinMenü, Add, Element1, MenuHandler
Menu, MeinMenü, Add, Element2, MenuHandler
Menu, MeinMenü, Add  <em>; Fügt eine Trennlinie ein.</em>

<em>; Erstellt ein weiteres Menü, das als Untermenü für das obige Menü dienen soll.</em>
Menu, Submenu1, Add, Element1, MenuHandler
Menu, Submenu1, Add, Element2, MenuHandler

<em>; Erstellt ein Untermenü im ersten Menü (mit einem nach rechts gerichteten Pfeil). Sobald der Benutzer dieses Untermenü auswählt, wird das zweite Menü angezeigt.</em>
Menu, MeinMenü, Add, Mein Untermenü, :Submenu1

Menu, MeinMenü, Add  <em>; Fügt eine Trennlinie unterhalb des Untermenüs ein.</em>
Menu, MeinMenü, Add, Element3, MenuHandler  <em>; Fügt einen weiteren Menüpunkt unterhalb des Untermenüs ein.</em>
return <em>; Ende des automatischen Ausführungsbereichs.</em>

MenuHandler:
MsgBox Sie haben %A_ThisMenuItem% im Menü %A_ThisMenu% ausgewählt.
return

#z::Menu, MeinMenü, Show  <em>; Drücke WIN+Z, um das Menü anzuzeigen.</em></pre>
<p>&nbsp;</p>
<pre class="NoIndent"><em>; BEISPIEL #3: Dieses Script zeigt einige der verschiedenen Menu-Befehle.</em>

#Persistent
#SingleInstance
Menu, Tray, Add <em>; Trennlinie</em>
Menu, Tray, Add, TestToggle&amp;Check

Menu, Tray, Add, TestToggleEnable
Menu, Tray, Add, TestDefault
Menu, Tray, Add, TestStandard
Menu, Tray, Add, TestDelete
Menu, Tray, Add, TestDeleteAll
Menu, Tray, Add, TestRename
Menu, Tray, Add, Test
return

<em>;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</em>

TestToggle&amp;Check:

Menu, Tray, ToggleCheck, TestToggle&amp;Check

Menu, Tray, Enable, TestToggleEnable <em>; Aktiviert auch den nächsten Test, da es die Deaktivierung von sich selbst nicht rückgängig machen kann.</em>
Menu, Tray, Add, TestDelete <em>; Das gleiche wie oben.</em>
return

TestToggleEnable:
Menu, Tray, ToggleEnable, TestToggleEnable
return

TestDefault:
if default = TestDefault
{
    Menu, Tray, NoDefault
    default =
}
else
{
    Menu, Tray, Default, TestDefault
    default = TestDefault
}
return

TestStandard:
if standard &lt;&gt; n
{
    Menu, Tray, NoStandard
    standard = n
}
else
{
    Menu, Tray, Standard
    standard = y
}
return

TestDelete:
Menu, Tray, delete, TestDelete
return

TestDeleteAll:
Menu, Tray, DeleteAll
return

TestRename:
if Neuname &lt;&gt; renamed
{
    Altname = TestRename
    Neuname = renamed
}
else
{
    Altname = renamed
    Neuname = TestRename
}
Menu, Tray, rename, %Altname%, %Neuname%
return

Test:
MsgBox Sie haben %A_ThisMenuItem% im Menü %A_ThisMenu% ausgewählt.
return</pre>
<pre class="NoIndent"><em>; BEISPIEL #4: Dieses Script zeigt, wie Icons in seinen Menüpunkten eingefügt werden können.</em>
Menu, Dateimenü, Add, Script-Icon, MenuHandler
Menu, Dateimenü, Add, Sperren-Icon, MenuHandler
Menu, Dateimenü, Add, Pause-Icon, MenuHandler
Menu, Dateimenü, Icon, Script-Icon, %A_AhkPath%, 2 <em>; Verwendet die zweite Icongruppe aus der Datei.</em>
Menu, Dateimenü, Icon, Sperren-Icon, %A_AhkPath%, -206 <em>; Verwendet das Icon mit der Ressource-ID 206.</em>
Menu, Dateimenü, Icon, Pause-Icon, %A_AhkPath%, -207 <em>; Verwendet das Icon mit der Ressource-ID 207.</em>
Menu, MeineMenüleiste, Add, &amp;Datei, :Dateimenü
Gui, Menu, MeineMenüleiste
Gui, Add, Button, gExit, Beendet dieses Beispiel
Gui, Show
MenuHandler:
Return

Exit:
ExitApp
</pre>
</body>
</html>
