<!DOCTYPE HTML>
<html>
<head>
<title>Gosub</title>
<meta name="keywords" content="Befehl, Ablaufsteuerung">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/jquery-1.11.0.min.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../navbar/NavScript.js" type="text/javascript"></script>
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <article>
      <h1>Gosub</h1>
      <p>Springt zu einem bestimmten Label und setzt die Ausführung bis zu einem <a href="Return.htm">Return</a> fort.</p>
      <pre class="Syntax">Gosub, Label</pre>
      <h3>Parameter</h3>
      <table class="info">
        <tr>
          <td style="width: 15%;">Label</td>
          <td style="width: 85%;">Name des <a href="../misc/Labels.htm">Labels</a> (auch <a href="../Hotkeys.htm">Hotkey</a>- oder <a href="../Hotstrings.htm#label">Hotstring-Label</a>), das angesprungen werden soll, wodurch die Befehle unterhalb von <em>Label</em> ausgeführt werden, bis ein Return oder Exit erreicht wird. Ein <a href="Return.htm">Return</a> bewirkt, dass das Script zum ersten Befehl unterhalb von Gosub zurückspringt und seine Ausführung dort fortsetzt. <a href="Exit.htm">Exit</a> beendet den <a href="../misc/Threads.htm">aktuellen Thread</a>.</td>
        </tr>
      </table>
      <h3>Bemerkungen</h3>
      <p>So wie es bei den Parametern von nahezu allen Befehlen der Fall ist, kann <em>Label</em> eine <a href="../Variables.htm">Verweis auf eine Variable</a> sein (z. B. %EigenesLabel%), deren Inhalt als Name des Ziels verwendet wird. Allerdings ist die Performance dadurch ein wenig schlechter, weil das Ziel-Label jedes Mal neu eingelesen werden muss, anstatt nur einmal beim Laden des Scripts.</p>
      <p>Verwendet man ein dynamisches Label wie %EigenesLabel%, wird eine Fehlermeldung angezeigt, falls das Label nicht existieren sollte. Um das zu verhindert, kann man vorher <a href="../Functions.htm#IsLabel">IsLabel()</a> aufrufen. Zum Beispiel:</p>
      <pre>If IsLabel(VarMitLabelname)
    Gosub %VarMitLabelname%</pre>
      <p>Obwohl Gosub für einfache Subroutinen nützlich ist, sollten <a href="../Functions.htm">Funktionen</a> für komplexere Anliegen in Betracht gezogen werden.</p>
      <h3>Verwandte Befehle</h3>
      <p><a href="Return.htm">Return</a>, <a href="../Functions.htm">Funktionen</a>, <a href="../Functions.htm#IsLabel">IsLabel()</a>, <a href="Block.htm">Block</a>, <a href="Loop.htm">Loop</a>, <a href="Goto.htm">Goto</a></p>
      <h3>Beispiel</h3>
      <pre class="NoIndent">Gosub, Label1
MsgBox, Die Label1-Subroutine hat den Return-Befehl erreicht (und wurde somit ausgeführt).
Return

Label1:
MsgBox, Die Label1-Subroutine läuft gerade.
Return</pre>
    </article>
  </section>
</div>
<script type="text/javascript">WriteFooter(1);</script>
</body>
</html>
