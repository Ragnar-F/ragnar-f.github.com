<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Neue Funktionen von AutoHotkey_L</title>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<link href="css/default.css" rel="stylesheet" type="text/css">
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-28224374-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
</head>
<body>
<script src="../NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(1);</script>
<h1>Neue Funktionen von AutoHotkey_L <a href="index.htm" style="float:right;font-size:12px">[Home]</a></h1>

<br/><table class="info">

<tr><th id="flow">Ablaufsteuerung</th><th></th></tr>
<tr><td><a href="commands/Break.htm">Break <i>LoopLabel</i></a></td><td>Unterbricht eine Schleife oder eine bestimmte Nummer von verschachtelten Schleifen.</td></tr>
<tr><td><a href="commands/Continue.htm">Continue <i>LoopLabel</i></a></td><td>&Uuml;berspringt den Rest des Durchlaufs einer Schleife oder verschachtelten Schleife.</td></tr>
<tr><td><a href="commands/For.htm">For <i>x</i>,<i>y</i> in <i>z</i></a></td><td>Durchl&auml;uft den Inhalt eines Objekts.</td></tr>
<tr><td><a href="commands/Until.htm">Loop Until</a></td><td>Schleife durchlaufen, bis eine Bedingung wahr ist. Auf jeden Schleifentyp anwendbar.</td></tr>
<tr><td><a href="commands/Try.htm">Try</a>...<a href="commands/Catch.htm">Catch</a></td><td>Erm&ouml;glicht strukturierte Ausnahmebehandlung.</td></tr>
<tr><td><a href="commands/Throw.htm">Throw</a></td><td>Eine Ausnahme ausl&ouml;sen.</td></tr>

<tr><th id="commands">Befehle</th><th></th></tr>
<tr><td><a href="commands/FileEncoding.htm">FileEncoding</a></td><td>Bestimmt die Standardkodierung f&uuml;r <a href="commands/FileRead.htm">FileRead</a>, <a href="commands/FileReadLine.htm">FileReadLine</a>, <a href="commands/LoopReadFile.htm">dateilesende Schleife</a>, <a href="commands/FileAppend.htm">FileAppend</a> und <a href="commands/FileOpen.htm">FileOpen</a>.<br/><i>Siehe auch:</i> <a href="#enc">Textkodierungen</a></td></tr>
<tr><td><a href="commands/Gui.htm">Gui</a></td><td>Siehe unten genannte <a href="#GUI_Enhancements">GUI-Erweiterungen</a>.</td></tr>
<tr><td><a href="commands/IniRead.htm">IniRead</a>/<a href="commands/IniWrite.htm">Write</a>/<a href="commands/IniDelete.htm">Delete</a></td><td>Liest, schreibt oder entfernt ganze Sektionen, oder ruft eine Liste aller Sektionsnamen ab.</td></tr>
<tr><td><a href="commands/Menu.htm#MenuIcon">Menu, Icon</a></td><td>Setzt oder entfernt das Icon eines Men&uuml;punkts.</td></tr>
<tr><td><a href="commands/Run.htm">Run</a></td><td><a href="Compat.htm#Run">Verbesserungen</a> in der Hinsicht, wie Parameter geparst werden.</tr>
<tr><td><a href="commands/Send.htm#Unicode">SendInput {U+nnnn}</a></td><td>Sendet ein Unicode-Zeichen. Unicode-Zeichen k&ouml;nnen direkt in Unicode-Versionen verwendet werden.</td></tr>
<tr><td><a href="commands/SetFormat.htm">SetFormat, IntegerFast, h|H</a></td><td>Setzt das Hexadezimalformat in Klein- oder Gro&szlig;buchstaben.</td></tr>
<tr><td><a href="commands/Transform.htm#HTML">Transform, HTML</a></td><td>Zeichensatz- oder HTML-Umwandlungen durchf&uuml;hren.</td></tr>
<tr><td><a href="commands/WinGet.htm#ProcessPath">WinGet, ..., ProcessPath</a></td><td>Ermittelt den vollst&auml;ndigen Pfad und Namen des Prozesses, der ein bestimmtes Fenster besitzt.</td></tr>

<tr><th id="directives">Direktiven</th><th></th></tr>
<tr><td><a href="commands/_If.htm">#If <i>Ausdruck</i></a></td><td>Vergleichbar mit <a href="commands/_IfWinActive.htm">#IfWinActive</a>, aber f&uuml;r beliebige Ausdr&uuml;cke.</td></tr>
<tr><td><a href="commands/_IfTimeout.htm">#IfTimeout</a></td><td>Bestimmt die maximale Auswertungsdauer eines #If-Ausdrucks.</td></tr>
<tr><td><a href="commands/_MenuMaskKey.htm">#MenuMaskKey</a></td><td>Bestimmt die Taste, die dazu verwendet wird, um Win- oder Alt-Up-Ereignisse zu verbergen.</td></tr>
<tr><td><a href="commands/_Include.htm">#Include &lt;Bibliothek&gt;</a></td><td>Eine Script-Datei vom Funktionsbibliotheksordner einf&uuml;gen.</td></tr>
<tr><td><a href="commands/_Warn.htm">#Warn</a></td><td>Aktiviert oder deaktiviert Warnungen f&uuml;r ausgew&auml;hlte Ladezeit- und Laufzeitzust&auml;nde, die f&uuml;r Entwickler interessant sind.</td></tr>

<tr><th id="functions">Funktionen</th><th></th></tr>
<tr><td><a href="commands/ComObjActive.htm">ComObj...</a> --<br>ComObjActive<br>ComObjEnwrap/Unwrap<br>ComObjParameter<br>ComObjType</td><td><br>Ermittelt ein registriertes COM-Objekt.<br>Verpacken/Auspacken eines COM-Objekts.<br>Verpackt einen Wert und Typ, um einen Parameter zu &uuml;bergeben.<br>Ermittelt die Typinformation eines COM-Objekts.</td></tr>
<tr><td><a href="commands/ComObjArray.htm">ComObjArray</a></td><td>Erstellt einen SafeArray f&uuml;r die Verwendung mit COM.</td></tr>
<tr><td><a href="commands/ComObjConnect.htm">ComObjConnect</a></td><td>Verbindet die Event Sources eines COM-Objekts mit Funktionen, die einen vorgegeben Pr&auml;fix enthalten.</td></tr>
<tr><td><a href="commands/ComObjCreate.htm">ComObjCreate</a></td><td>Erstellt ein COM-Objekt.</td></tr>
<tr><td><a href="commands/ComObjError.htm">ComObjError</a></td><td>Aktiviert oder deaktiviert die Meldungen von COM-Fehlern.</td></tr>
<tr><td><a href="commands/ComObjFlags.htm">ComObjFlags</a></td><td>Ermittelt oder &auml;ndert Flags, die das Verhalten eines COM-Wrapper-Objekts kontrollieren.</td></tr>
<tr><td><a href="commands/ComObjGet.htm">ComObjGet</a></td><td>Gibt die Referenz auf ein Objekt zur&uuml;ck, unterst&uuml;tzt von einer COM-Komponente.</td></tr>
<tr><td><a href="commands/ComObjQuery.htm">ComObjQuery</a></td><td>Abfragen eines COM-Objekts f&uuml;r eine Schnittstelle oder Dienst.</td></tr>
<tr><td><a href="commands/ComObjType.htm">ComObjType</a></td><td>Ermittelt Informationen &uuml;ber den Typ eines COM-Objekts.</td></tr>
<tr><td><a href="commands/ComObjValue.htm">ComObjValue</a></td><td>Ermittelt den Wert oder Pointer, der in einem COM-Wrapper-Objekt gespeichert wird.</td></tr>
<tr><td><a href="commands/Throw.htm#Exception">Exception</a></td><td>Erstellt ein Ausnahme-Objekt f&uuml;r <a href="commands/Throw.htm">Throw</a> (au&szlig;erdem eingeschr&auml;nkter Zugang zur Aufrufliste).</td></tr>
<tr><td><a href="commands/FileOpen.htm">FileOpen</a></td><td>Erm&ouml;glicht eine objektorientierte Dateibearbeitung.</td></tr>
<tr><td><a href="Functions.htm#Func">Func</a></td><td>Ermittelt eine <a href="Objects.htm#Function_References">Referenz</a> auf eine Funktion.</td></tr>
<tr><td><a href="Functions.htm#GetKeyName">GetKeyName/VK/SC</a></td><td>Ermittelt den Namen bzw. Text, virtuellen Tastencode oder Scancode einer Taste.</td></tr>
<tr><td><a href="Functions.htm#InStr">InStr</a></td><td>Sucht einen bestimmten <em>String</em>, beginnend von links oder rechts.</td></tr>
<tr><td><a href="Functions.htm#IsByRef">IsByRef</a></td><td>Bestimmt, ob ein ByRef-Parameter mit einer Variable &uuml;bergeben wurde.</td></tr>
<tr><td><a href="Objects.htm">IsObject</a></td><td>Erkennt, ob ein Wert ein Objekt ist.</td></tr>
<tr><td><a href="commands/StrPutGet.htm">StrPut / StrGet</a></td><td>Kopiert einen String zu oder von einer Speicheradresse und wandelt ihn optional in verschiedene Zeichens&auml;tze um.</td></tr>
<tr><td><a href="commands/Trim.htm">Trim</a></td><td>Entfernt bestimmte Zeichen vom Anfang und/oder Ende eines Strings.</td></tr>
<tr><td><a href="misc/RegExCallout.htm">RegEx (?C<i>Nummer</i>:<i>Funktion</i>)</a></td><td>Eine Funktion w&auml;hrend der Auswertung eines RegEx-Musters aufrufen.</td></tr>
<tr><td><a href="#Function_Libraries">Funktionsbibliotheken</a></td><td>Neue &quot;lokale Bibliothek&quot; und <code>#Include &lt;Bibliotheksname&gt;</code>.</td></tr>
<tr><td><a href="Functions.htm#Variadic">Variadische Funktionen</a></td><td>Funktionen k&ouml;nnen eine beliebige Anzahl an Parametern mittels eines Arrays akzeptieren.</td></tr>
<tr><td><a href="#Static">Statische Initialisierer</a></td><td>Statische Variablen k&ouml;nnen nun mit einem beliebigen Ausdruck initialisiert werden.</td></tr>

<tr><th id="objects">Objekte</th><th></th></tr>
<tr><td><a href="Objects.htm">Allgemein</a></td><td>Verhalten und Benutzung von Objekten generell.</td></tr>
<tr><td><a href="Objects.htm#Arrays">Objekt</a></td><td>Assoziative Arrays, die mit anderen Funktionen erweitert werden k&ouml;nnen.</td></tr>
<tr><td><a href="objects/Enumerator.htm">Enumerator</a></td><td>Damit kann eine Sammlung von Elementen nacheinander abgearbeitet werden.</td></tr>
<tr><td><a href="objects/File.htm">Datei</a></td><td>Erm&ouml;glicht eine Schnittstelle, um auf einer Datei zugreifen zu k&ouml;nnen. <a href="commands/FileOpen.htm">FileOpen</a> gibt ein Objekt diesen Typs zur&uuml;ck.</td></tr>
<tr><td><a href="objects/Func.htm">Func</a></td><td>Repr&auml;sentiert eine benutzerdefinierte oder interne Funktion, die vom Script aufgerufen werden kann.</td></tr>
<tr><td>ComObject</td><td>Siehe oben genannte ComObj-Funktionen.</td></tr>

<tr><th id="vars">Variablen</th><th></th></tr>
<tr><td>A_IsUnicode</td><td>In Unicode-Versionen enth&auml;lt diese Variable eine 1 (<i>wahr</i>). In ANSI-Versionen wird sie nicht gesetzt, daher ist sie im Endeffekt <i>falsch</i>.</td></tr>
<tr><td>A_FileEncoding</td><td>Enth&auml;lt die Standardkodierung f&uuml;r verschiedene Befehle; siehe <a href="commands/FileEncoding.htm">FileEncoding</a>.</td></tr>
<tr><td>A_OSVersion</td><td>Enth&auml;lt WIN_7 f&uuml;r Windows 7 oder einen anderen <a href="Variables.htm#OSVersion">hier</a> dokumentierten Wert.</td></tr>
<tr><td>A_PriorKey</td><td>Der Name der letzten Taste, die vor dem Dr&uuml;cken oder Loslassen der aktuellsten Taste gedr&uuml;ckt wurde ... <a href="Variables.htm#PriorKey">(Mehr)</a></td></tr>
<tr><td>A_PtrSize</td><td>Enth&auml;lt die Gr&ouml;&szlig;e eines Pointers in Bytes. Entweder 4 (32-Bit) oder 8 (64-Bit).</td></tr>
<tr><td>A_ScriptHwnd</td><td>Die eindeutige ID (HWND/Handle) des versteckten Script-Hauptfensters.</td></tr>

<tr><th id="types">Datentypen</th><th></th></tr>
<tr><td><a href="commands/DllCall.htm#ptr">Ptr</a></td><td>Gleichwertig mit <i>Int</i> in 32-Bit-Versionen und <i>Int64</i> in 64-Bit-Versionen. Unterst&uuml;tzt von <a href="commands/DllCall.htm">DllCall</a>, <a href="Functions.htm#NumPut">NumPut</a> und <a href="Functions.htm#NumGet">NumGet</a>.</td></tr>
<tr><td><a href="commands/DllCall.htm#astr">AStr</a>, <a href="commands/DllCall.htm#wstr">WStr</a></td><td>Nur von <a href="commands/DllCall.htm">DllCall</a> unterst&uuml;tzt; siehe <a href="Compat.htm">Script-Kompatibilit&auml;t</a>.</td></tr>

<tr><th id="unicode">Unicode</th><th></th></tr>
<tr><td><a href="Compat.htm">Kompatibilit&auml;t</a></td><td>Wie man mit Unicode in DllCall usw. umgeht.</td></tr>
<tr><td><a href="Scripts.htm#cp">Script-Dateien</a></td><td>Die Verwendung von Unicode in Script-Dateien.</td></tr>
<tr><td><a href="commands/Send.htm#Unicode">SendInput</a></td><td>Verwenden von Unicode mit SendInput.</td></tr>

<tr><th id="other">Sonstiges</th><th></th></tr>
<tr><td><a href="LastFoundWindow.htm#exe">ahk_exe</a></td><td>Fenster k&ouml;nnen durch den Namen oder Pfad des &uuml;bergeordneten Prozesses (EXE-Datei) identifiziert werden.</td></tr>
<tr><td><a href="Scripts.htm#idebug">Debuggen</a></td><td>Interaktive Debugging-Funktionen (zeilenweise Ausf&uuml;hrung usw.).</td></tr>
<tr><td><a href="#Error_Handling">Fehlerbehandlung</a></td><td>Try/Catch/Throw und erh&ouml;hte Verwendbarkeit von A_LastError.</td></tr>
<tr><td><a href="#GUI_Enhancements">GUI-Erweiterungen</a></td><td>Eine Vielzahl an Erweiterungen f&uuml;r den Gui-Befehl sowie f&uuml;r verwandte Befehle.</td></tr>
<tr><td><a href="#icons">Icon-Unterst&uuml;tzung</a></td><td>Ressourcen-Kennungen und verbesserte Unterst&uuml;tzung f&uuml;r verschiedene Icon-Gr&ouml;&szlig;en.</td></tr>
<tr><td><a href="Compat.htm#Other">Weitere &Auml;nderungen</a></td><td>&Auml;nderungen, die die Script-Kompatibilit&auml;t beeinflussen.</td></tr>
<tr><td><a href="AHKL_ChangeLog.htm">Versionsverlauf</a></td><td>Verlauf der AutoHotkey_L-Revisionen.</td></tr>

</table>


<h2 id="Error_Handling">Fehlerbehandlung</h2>
<p>Viele Befehle unterst&uuml;tzen f&uuml;r die Fehlerbehandlung <a href="commands/Try.htm">Try</a>/<a href="commands/Catch.htm">Catch</a> anstelle von ErrorLevel. Zum Beispiel:</p>
<pre class="NoIndent">try
{
    FileCopy, Datei1.txt, C:\Ordner
    FileDelete, C:\Ordner\Alt.txt
}
catch
    MsgBox Ein Fehler ist aufgetreten!</pre>
<p>Dar&uuml;ber hinaus setzen die folgenden Befehle nun <a href="Variables.htm#LastError">A_LastError</a>, um das Debuggen zu unterst&uuml;tzen: FileAppend, FileRead, FileReadLine, FileDelete, FileCopy, FileMove, FileGetAttrib/Time/Size/Version, FileSetAttrib/Time, FileCreateDir, RegRead, RegWrite, RegDelete.</p>

<h2 id="Function_Libraries">Funktionsbibliotheken</h2>
<p>Zus&auml;tzlich zur Benutzerbibliothek in <code>%A_MyDocuments%\AutoHotkey\Lib</code> und Standardbibliothek im AutoHotkey-Verzeichnis k&ouml;nnen Funktionen auch automatisch von der &quot;lokalen Bibliothek&quot; eingef&uuml;gt werden, welche sich in <code>%A_ScriptDir%\Lib</code> befindet. F&uuml;r mehr Details, siehe <a href="Functions.htm#lib">Funktionsbibliotheken</a>.</p>
<p><a href="commands/_Include.htm">#Include &lt;Bibliotheksname&gt;</a> f&uuml;gt ausdr&uuml;cklich eine Bibliotheksdatei ein, die sich in einer beliebigen Funktionsbibliothek befinden kann.</p>

<h2 id="GUI_Enhancements">GUI-Erweiterungen</h2>
<p>Eine Vielzahl an Erweiterungen wurden f&uuml;r den <a href="commands/Gui.htm">Gui</a>-Befehl sowie f&uuml;r verwandte Befehle implementiert:</p>
<ul>
  <li>F&uuml;r ein GUI kann ein <a href="commands/Gui.htm#MultiWin">Name oder HWND</a> anstelle einer Nummer zwischen 1 und 99 verwendet werden.</li>
  <li><a href="commands/Gui.htm#New">Gui, New</a> erstellt ein neues anonymes GUI.</li>
  <li>Es kann eine beliebige Anzahl an anonymen GUIs erstellt werden.</li>
  <li>Neue GUI-Optionen: <a href="commands/Gui.htm#GuiHwndOutputVar">+Hwnd<em>Ausgabevariable</em></a>, <a href="commands/Gui.htm#Parent">+Parent<em>GUI</em></a></li>
  <li>Dem GUI kann ein beliebiges Fenster &uuml;bergeordnet werden: <a href="commands/Gui.htm#Owner">+Owner<em>%HWND%</em></a>.</li>
  <li><a href="commands/Gui.htm#fontq">Gui, Font</a> kann die Textgl&auml;ttung kontrollieren.</li>
  <li><a href="commands/GuiControls.htm#ActiveX">ActiveX-Steuerelemente</a> wie "Internet Explorer WebBrowser" werden unterst&uuml;tzt.</li>
  <li><a href="commands/GuiControlGet.htm#Name">GuiControlGet, <em>Ausgabevariable</em>, Name</a> ermittelt den Namen der Variable, die dem GUI-Steuerelement zugewiesen wurde.</li>
  <li>Tastaturk&uuml;rzel wie <kbd>Ctrl</kbd>+<kbd>O</kbd> werden automatisch unterst&uuml;tzt, wenn sie in <a href="commands/Gui.htm#Menu">Gui-Men&uuml;s</a> verwendet werden.</li>
  <li><a href="commands/Gui.htm#fontq">Textqualit&auml;t</a> kann mithilfe des Font-Unterbefehls beeinflusst werden.</li>
</ul>

<h2 id="Static">Statische Variablen</h2>
<p>Statische Variablen k&ouml;nnen nun mit einem beliebigen Ausdruck initialisiert werden. Zum Beispiel:</p>
<pre>Sleep 500
MsgBox % Time() &quot;ms, seit das Script gestartet wurde.&quot;
Time() {
    static Tick := A_TickCount
    return A_TickCount - Tick
}</pre>

<h2 id="enc">Textkodierungen</h2>
<p><a href="commands/FileRead.htm">FileRead</a>, <a href="commands/FileReadLine.htm">FileReadLine</a>, <a href="commands/LoopReadFile.htm">Loop Read</a> und <a href="commands/FileAppend.htm">FileAppend</a> unterst&uuml;tzen eine Vielzahl an Textkodierungen, die von Windows unterst&uuml;tzt werden, nicht nur den System-Standard-ANSI-Zeichensatz.  Mit <a href="commands/FileEncoding.htm">FileEncoding</a> kann die Standardkodierung bestimmt werden, die f&uuml;r FileRead und FileAppend wie folgt &uuml;berschrieben werden kann:</p>
<pre class="Syntax">FileRead, Ausgabevariable, *P<i>nnn</i> Dateiname
FileAppend [, Text, Dateiname, Kodierung]</pre>
<p>W&auml;hrend <i>nnn</i> eine numerische <a href="http://msdn.microsoft.com/en-us/library/dd317756.aspx">Zeichensatz-Kennung</a> sein muss, ist die <i>Kodierung</i> im selben Format wie <a href="commands/FileEncoding.htm">FileEncoding</a>.</p>
<p><b>Siehe auch:</b> <a href="Compat.htm#FileRead">Script-Kompatibilit&auml;t</a></p>

<h2 id="Variadic">Variadische Funktionen und Funktionsaufrufe</h2>
<p><a href="Functions.htm#Variadic">Variadische Funktionen</a> k&ouml;nnen mithilfe eines Arrays eine ver&auml;nderbare Anzahl von Parametern empfangen, w&auml;hrend <a href="Functions.htm#VariadicCall">variadische Funktionsaufrufe</a> verwendet werden k&ouml;nnen, um eine ver&auml;nderbare Anzahl von Parametern an einer Funktion zu &uuml;bergeben.</p>

<h2 id="icons">Verbesserungen der Icon-Unterst&uuml;tzung</h2>

<h3>Ungew&ouml;hnliche Gr&ouml;&szlig;en</h3>
<p>Icon-Ressourcen in beliebiger unterst&uuml;tzten Gr&ouml;&szlig;e vom Betriebssystem k&ouml;nnen aus einer ausf&uuml;hrbaren Datei extrahiert werden. Wenn Icon-Ressourcen in mehrere Gr&ouml;&szlig;en innerhalb einer Icon-Gruppe vorhanden sind, dann wird die geeignetste Gr&ouml;&szlig;e verwendet. Vor Revision 17 wurde willk&uuml;rlich eine beliebige Icon-Ressource vom System ausgew&auml;hlt, dass zuerst auf die Standardgr&ouml;&szlig;e des Systems und danach wieder auf die gew&uuml;nschte Gr&ouml;&szlig;e skaliert wurde.</p>

<h3>Ressourcen-Kennungen</h3>
<p>Negative Iconnummern k&ouml;nnen verwendet werden, um eine Icon-Ressource einer Gruppe innerhalb einer ausf&uuml;hrbaren Datei zu kennzeichnen. Im folgenden Beispiel wird das Tray-Icon auf das Standard-Icon von AHK gesetzt:</p>
<pre>Menu, Tray, Icon, %A_AhkPath%, -160</pre>

</body></html>