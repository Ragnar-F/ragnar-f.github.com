<!DOCTYPE HTML>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>AutoHotkey-Tutorial: Makro- und Hotkey-Erstellung</title>
<meta name="keywords" content="Grundlage">
<link href="static/theme.css" rel="stylesheet" type="text/css" />
<link href="static/font.css" rel="stylesheet" type="text/css" />
<script src="static/ga.js" type="text/javascript"></script>
<!--[if lt IE 9]>
<script src="static/html5.js"></script>
<![endif]-->
<script src="navbar/NavScript.js" type="text/javascript"></script>
<style type="text/css">
<!--
.style1 {
	font-size: 133%;
	font-weight: bold
}
-->
</style>
</head>
<body>
<script type="text/javascript">WriteHeader(0);</script>
<div id="content">
  <section>
    <div id="article">
      <h1>Tutorial und &Uuml;bersicht</h1>
      <p>Diese kurze Einf&uuml;hrung hilft dir dabei, eigene Makros und Hotkeys auf Anhieb zu programmieren.</p>
      <h2>Inhaltsverzeichnis</h2>
      <ul>
        <li class="style1"><a href="#Create">Erstellen eines Scripts</a></li>
        <li class="style1"><a href="#Launch">Ausf&uuml;hren eines Programms oder Dokuments</a></li>
        <li class="style1"><a href="#Send">Senden von Tastatureingaben und Mausklicks</a></li>
        <li class="style1"><a href="#Activate">Aktivieren und Bearbeiten von Fenstern</a></li>
        <li class="style1"><a href="#Dialogs">Abrufen von Benutzereingaben mit MsgBox, InputBox, usw.</a></li>
        <li class="style1"><a href="#Variables">Verwenden von Variablen und der Zwischenablage</a></li>
        <li class="style1"><a href="#Loop">Wiederholen von mehreren Aktionen</a></li>
        <li class="style1"><a href="#Files">Bearbeiten von Dateien und Ordnern</a></li>
        <li class="style1"><a href="#Overview">&Uuml;bersicht &uuml;ber weitere Funktionen</a></li>
      </ul>
      <h2 id="Create">Erstellen eines Scripts</h2>
      <p>Jedes Script ist eine reine Textdatei mit Befehlen, die vom Programm (AutoHotkey.exe) ausgef&uuml;hrt werden. Ein Script kann auch <a href="Hotkeys.htm">Hotkeys</a> und <a href="Hotstrings.htm">Hotstrings</a> enthalten, oder sogar nur aus diesen bestehen. Allerdings wird ein Script ohne Hotkeys und Hotstrings seine Befehle von oben nach unten nacheinander ausf&uuml;hren, sobald es gestartet wird.</p>
      <p>Ein neues Script kann wie folgt erstellt werden:</p>
      <ol>
        <li><a href="http://www.autohotkey.com/download/">Lade AutoHotkey herunter</a> und installiere es.</li>
        <li>Klicke mit der rechten Maustaste auf eine leere Stelle im Desktop oder in einem beliebigen Ordner.</li>
        <li>W&auml;hle im dabei entstandenen Men&uuml; "<em>Neu -&gt; AutoHotkey Script</em>" aus.</li>
        <li>Gebe einen Namen f&uuml;r diese Datei ein und stell sicher, dass sie mit <strong>.ahk</strong> endet. Zum Beispiel: Test.ahk</li>
        <li>Klicke mit der rechten Maustaste auf die Datei und w&auml;hle "Edit Script" aus.</li>
        <li>Schreibe <code>#space::Run www.google.de</code> auf eine neue Zeile.</li>
      </ol>
      <p>In der oberen Zeile ist das erste Zeichen "#" die Taste <kbd>Win</kbd>; das hei&szlig;t, dass die Taste <kbd>Win</kbd> gedr&uuml;ckt gehalten und danach die Leertaste gedr&uuml;ckt werden muss, um den Hotkey zu aktivieren. Das Doppelpunkt-Paar (::) kennzeichnet, dass der nachfolgende Befehl ausgef&uuml;hrt werden soll, sobald dieser Hotkey gedr&uuml;ckt wird. In diesem Fall wird die Webseite von Google ge&ouml;ffnet. Um dieses Script zu testen, mache wie folgt weiter:</p>
      <ol>
        <li>Speichere und schlie&szlig;e die Datei.</li>
        <li>Klicke zweimal auf die Datei, um sie auszuf&uuml;hren. Es erscheint ein neues Icon im Benachrichtigungsfeld der Taskleiste.</li>
        <li> Halte die Taste <kbd>Win</kbd> gedr&uuml;ckt und dr&uuml;cke die Leertaste. Es &ouml;ffnet sich eine Webseite im Standard-Browser.</li>
        <li>Um das Script zu beenden oder zu bearbeiten, klicke mit der rechten Maustaste auf das gr&uuml;ne "H" im Benachrichtigungsfeld der Taskleiste.</li>
      </ol>
      <p>Hinweise:</p>
      <ul>
        <li>Es k&ouml;nnen mehrere Scripts gleichzeitig laufen, jedes davon mit einem eigenen Icon im Benachrichtigungsfeld der Taskleiste.</li>
        <li>Jedes Script kann mehrere <a href="Hotkeys.htm">Hotkeys</a> und <a href="Hotstrings.htm">Hotstrings</a> enthalten.</li>
        <li>Damit ein Script automatisch beim Start des Computers ausgef&uuml;hrt wird, <a href="FAQ.htm#Startup">erstelle eine Verkn&uuml;pfung im Autostart-Ordner des Startmen&uuml;s</a>.</li>
      </ul>
      <h2 id="Launch">Ausf&uuml;hren eines Programms oder Dokuments</h2>
      <p>Der <a href="commands/Run.htm">Run</a>-Befehl dient dazu, bestimmte Programme, Dokumente, URLs, oder Verkn&uuml;pfungen zu starten. Hier ein paar weitere Beispiele:</p>
      <pre>Run Notepad
Run C:\Eigene Dokumente\Adressliste.doc
Run C:\Eigene Dokumente\Eigene Verkn&uuml;pfung.lnk
Run www.yahoo.de
Run mailto:someone@somedomain.com</pre>
      <p>Es ist m&ouml;glich, den oben genannten Beispielen ein Hotkey zuzuweisen, indem ein <a href="Hotkeys.htm">Hotkey-Label</a> zugeordnet wird. Im ersten unteren Beispiel wird der Hotkey <kbd>Win</kbd>+<kbd>N</kbd> zugewiesen, im zweiten <kbd>Strg</kbd>+<kbd>Alt</kbd>+<kbd>C</kbd>:</p>
      <pre>#n::Run Notepad
^!c::Run calc.exe</pre>
      <p>Die oben genannten Beispiele werden auch als einzeilige Hotkeys bezeichnet, da sie jeweils nur aus einem Befehl bestehen. Um ein Hotkey dazu zu bringen, mehr als einen Befehl auszuf&uuml;hren, muss die erste Zeile <u>unter</u> der Hotkeydefinition gesetzt werden und die letzte Zeile ein <a href="commands/Return.htm"><code>Return</code></a> sein. Zum Beispiel:</p>
      <pre>#n::
Run http://www.google.de
Run Notepad.exe
Return</pre>
      <p>Falls das zu startende Programm oder Dokument nicht mit dem System verkn&uuml;pft ist, muss dessen vollst&auml;ndiger Pfad angegeben werden, um es ausf&uuml;hren zu k&ouml;nnen:</p>
      <pre>Run %A_ProgramFiles%\Winamp\Winamp.exe</pre>
      <p>Im oben genannten Beispiel ist %A_ProgramFiles% eine <a href="Variables.htm#BuiltIn">interne Variable</a>. Durch Verwenden dieser Variable, anstatt z. B. <em>C:\Programme</em>, ist das Script ortsunabh&auml;ngiger, das hei&szlig;t, dass das Script wahrscheinlich auch auf anderen Computern laufen wird. Hinweis: Die Namen der Befehle und Variablen unterscheiden nicht zwischen Gro&szlig;- und Kleinschreibung. Zum Beispiel ist "Run" das gleiche wie "run" und "A_ProgramFiles" das gleiche wie "a_programfiles".</p>
      <p>Verwende <a href="commands/Run.htm">RunWait</a> anstelle von <a href="commands/Run.htm">Run</a>, um ein Script dazu zu bringen, auf das Schlie&szlig;en des Programms oder Dokuments zu warten, bevor es fortf&auml;hrt. Im folgenden Beispiel wird der <a href="commands/MsgBox.htm">MsgBox</a>-Befehl erst ausgef&uuml;hrt, sobald der Benutzer den Editor schlie&szlig;t:</p>
      <pre>RunWait Notepad
MsgBox Der Benutzer ist fertig (Editor wurde geschlossen).</pre>
      <p>Um mehr &uuml;ber das Starten von Programmen zu erfahren (z. B. Parameter &uuml;bergeben, Arbeitsverzeichnis bestimmen und den Exitcode des Programms ermitteln), siehe <a href="TutorialLaunch.htm">hier</a>.</p>
      <h2 id="Send">Senden von Tastatureingaben und Mausklicks</h2>
      <p>Mithilfe des <a href="commands/Send.htm">Send</a>-Befehls k&ouml;nnen Tastatureingaben an das aktive (vorderste) Fenster gesendet werden. Im folgenden Beispiel wird <kbd>Strg</kbd>+<kbd>Alt</kbd>+<kbd>S</kbd> zu einem Hotkey, der eine Signatur schreibt (stell aber sicher, dass ein Fenster wie der Editor oder E-Mail-Entwurf aktiv ist, bevor du diesen Hotkey dr&uuml;ckst):</p>
      <pre>^!s::
Send Mit freundlichen Gr&uuml;&szlig;en,{Enter}John Smith
return</pre>
      <p>Im oben genannten Beispiel werden alle Zeichen direkt gesendet, au&szlig;er {Enter}, das ein <kbd>Enter</kbd> simuliert. Das n&auml;chste Beispiel zeigt weitere Sonderzeichen, die h&auml;ufig verwendet werden:</p>
      <pre>Send ^c!{tab}eingef&uuml;gt:^v</pre>
      <p>Diese Zeile sendet <kbd>Strg</kbd>+<kbd>C</kbd>, danach <kbd>Alt</kbd>+<kbd>Tab</kbd>, danach den String "eingef&uuml;gt:" und zum Schluss <kbd>Strg</kbd>+<kbd>V</kbd>. Siehe <a href="commands/Send.htm">Send</a> f&uuml;r eine komplette Liste von Sonderzeichen und Tasten.</p>
      <p>Letztendlich werden Tastatureingaben auch gesendet, sobald du bestimmte Abk&uuml;rzungen eingibst - auch bekannt als <a href="Hotstrings.htm">Hotstrings</a>. Sobald du beispielsweise "bzw" mit einem Leerzeichen oder Komma danach eingibst, wird diese Abk&uuml;rzung aufgrund folgender Zeile mit "beziehungsweise" ersetzt:</p>
      <pre>::bzw::beziehungsweise</pre>
      <h3>Mausklicks</h3>
      <p>Bevor ein Mausklick an ein Fenster gesendet werden kann, m&uuml;ssen die Koordinaten X und Y ermittelt werden, auf denen das Klicken erfolgen soll. Mithilfe von "Window Spy", das in AutoHotkey enthalten ist, k&ouml;nnen diese abgerufen werden. Die folgenden Schritte gelten f&uuml;r "Window Spy":</p>
      <ol>
        <li>Starte "Window Spy" &uuml;ber das Tray-Icon-Men&uuml; eines Scripts oder Startmen&uuml;.</li>
        <li>Aktiviere das gew&uuml;nschte Fenster entweder durch Klicken auf die Titelleiste, mit Alt-Tab oder anderweitig ("Window Spy" selbst bleibt "immer im Vordergrund").</li>
        <li>Bewege den Mauszeiger auf die gew&uuml;nschte Position im Zielfenster und notiere dir die Mauskoordinaten, die vom "Window Spy" angezeigt werden (oder dr&uuml;cke in Windows XP und niedriger <kbd>Umschalt</kbd>+<kbd>Alt</kbd>+<kbd>Tab</kbd>, um "Window Spy" zu aktivieren, so dass die "eingefrorenen" Koordinaten kopiert und sp&auml;ter eingef&uuml;gt werden k&ouml;nnen).</li>
        <li>&Uuml;bertrage die ermittelten Koordinaten auf den <a href="commands/Click.htm">Click</a>-Befehl. Das folgende Beispiel klickt die linke Maustaste: <code>Click 112, 223</code>.</li>
      </ol>
      <p>Mit <a href="commands/MouseMove.htm">MouseMove</a> kann die Maus ohne Klicken verschoben werden. Mit <a href="commands/MouseClickDrag.htm">MouseClickDrag</a> kann die Maus gezogen werden.</p>
      <h2 id="Activate">Aktivieren und Bearbeiten von Fenstern</h2>
      <p>Mit <a href="commands/WinActivate.htm">WinActivate</a> kann das Fenster aktiviert werden (in den Vordergrund setzen). Mit <a href="commands/IfWinExist.htm">IfWinExist</a> oder <a href="commands/WinWait.htm">WinWait</a> kann &uuml;berpr&uuml;ft werden, ob das Fenster vorhanden ist. Das folgende Beispiel verdeutlicht diese Befehle:</p>
      <pre>IfWinExist Unbenannt - Editor
{
    WinActivate
}
else
{
    Run Notepad
    WinWait Unbenannt - Editor
    WinActivate
}</pre>
      <p>Das obere Beispiel sucht zuerst nach vorhandenen Fenstern, deren Titel mit "Unbenannt - Editor" beginnen (abh&auml;ngig von Gro&szlig;- und Kleinschreibung). Sobald so ein Fenster gefunden wird, wird es aktiviert. Ansonsten wird der Editor gestartet und darauf gewartet, bis das Fenster "Unbenannt - Editor" erscheint, um es dann zu aktivieren. Das obere Beispiel nutzt auch das <a href="misc/WinTitle.htm#LastFoundWindow">zuletzt gefundene Fenster</a>, um zu verhindern, dass bei WinActivate jedesmal der Fenstertitel angegeben werden muss.</p>
      <p>Weitere h&auml;ufig verwendete Fensterbefehle:</p>
      <ul>
        <li><a href="commands/IfWinActive.htm">IfWinActive</a>: &Uuml;berpr&uuml;ft, ob das angegebene Fenster zurzeit aktiv ist.</li>
        <li><a href="commands/WinWaitActive.htm">WinWaitActive</a>: Wartet, bis das angegebene Fenster aktiv ist (&uuml;blicherweise nach dem Senden einer fensteraktivierenden Tastatureingabe wie <kbd>Strg</kbd>+<kbd>F</kbd> f&uuml;r "Suchen").</li>
        <li><a href="commands/WinClose.htm">WinClose</a>: Schlie&szlig;t das angegebene Fenster.</li>
        <li><a href="commands/WinMove.htm">WinMove</a>: Verschiebt das angegebene Fenster und/oder &auml;ndert dessen Gr&ouml;&szlig;e.</li>
        <li><a href="commands/WinMinimize.htm">WinMinimize</a>, <a href="commands/WinMaximize.htm">WinMaximize</a>, <a href="commands/WinRestore.htm">WinRestore</a>: Minimiert, maximiert oder stellt das angegebene Fenster wieder her.</li>
      </ul>
      <h2 id="Dialogs">Abrufen von Benutzereingaben mit MsgBox, InputBox, usw.</h2>
      <p>Das folgende Beispiel zeigt ein Dialogfenster mit zwei Schaltfl&auml;chen an (JA und NEIN):</p>
      <pre><a href="commands/MsgBox.htm">MsgBox</a>, 4, , M&ouml;chten Sie fortfahren?
<a href="commands/IfMsgBox.htm">IfMsgBox</a>, No
    return
<em>; Ansonsten hat der Benutzer JA gedr&uuml;ckt.</em>
MsgBox Es wurde JA gedr&uuml;ckt.</pre>
      <p>Mit dem <a href="commands/InputBox.htm">InputBox</a>-Befehl kann der Benutzer dazu aufgefordert werden, einen String einzugeben. Mit <a href="commands/FileSelectFile.htm">FileSelectFile</a> oder <a href="commands/FileSelectFolder.htm">FileSelectFolder</a> wird der Benutzer dazu gebracht, eine Datei oder einen Ordner auszuw&auml;hlen. F&uuml;r komplexere Aufgaben kann der <a href="commands/Gui.htm">Gui</a>-Befehl verwendet werden, um benutzerdefinierte Dateneingabeformulare und Benutzeroberfl&auml;chen zu erstellen.</p>
      <p>Tipp: Wie du bereits bemerkt hast, kann bei jedem Befehl das erste Komma weggelassen werden (au&szlig;er wenn der erste Parameter leer ist oder mit := oder = beginnt, oder der Befehl einzeln am Anfang eines <a href="Scripts.htm#continuation">Fortsetzungsbereichs</a> vorkommt). Zum Beispiel:</p>
      <pre>MsgBox Das ist ok.
MsgBox<strong>,</strong> Das ist auch ok (es hat ein direktes Komma).</pre>
      <h2 id="Variables">Verwenden von Variablen und der Zwischenablage</h2>
      <p>Eine <em>Variable</em> ist ein Speicherbereich, in der Text oder Zahlen vom Script gespeichert werden. Eine Variable, die nur Ziffern enth&auml;lt (optional mit einem Dezimalpunkt), wird bei einer mathematischen Operation oder bei einem Vergleich automatisch als Zahl interpretiert.</p>
      <p>Mit Ausnahme von lokalen Variablen in <a href="Functions.htm#Locals">Funktionen</a> sind alle Variablen global; das hei&szlig;t, dass deren Inhalte jederzeit vom Script gelesen oder ge&auml;ndert werden k&ouml;nnen. Dar&uuml;ber hinaus m&uuml;ssen Variablen nicht deklariert werden; sie stehen zur Verf&uuml;gung, sobald sie verwendet werden (au&szlig;erdem ist jede Variable anfangs leer).</p>
      <p>Die folgenden Beispiele zeigen, wie ein String in eine Variable gespeichert wird:</p>
      <pre>EigeneVar1 = 123
EigeneVar2 = Eigener String</pre>
      Der Inhalt einer Variable kann wie folgt mit einer Variable verglichen werden:
      <pre>If EigeneVar2 = Eigener String
{
    MsgBox EigeneVar2 enth&auml;lt den String "Eigener String".
}
If EigeneVar1 &gt;= 100
{
    MsgBox EigeneVar1 enth&auml;lt %EigeneVar1%, das eine Zahl gr&ouml;&szlig;er gleich 100 ist.
}</pre>
      <p>Beachte bei der obigen MsgBox-Zeile, dass das zweite Vorkommen von <em>EigeneVar1</em> in Prozentzeichen gesetzt ist. Das bewirkt, dass der Inhalt von <em>EigeneVar1</em> an dieser Position angezeigt wird. Mit der gleichen Technik ist es m&ouml;glich, den Inhalt einer Variable in eine andere Variable zu kopieren. Zum Beispiel:</p>
      <pre>EigeneVarVerkettung = %EigeneVar1% %EigeneVar2%</pre>
      <p>Die obere Zeile speichert den String "123 Eigener String" (ohne Anf&uuml;hrungszeichen) in <em>EigeneVarVerkettung</em>.</p>
      <p>Das folgende Beispiel zeigt, wie der Inhalt einer Variable mit dem Inhalt einer anderen Variable verglichen werden kann:</p>
      <pre>If (Elementz&auml;hlung &gt; Elementmaximum)
{
    MsgBox Der Wert von Elementz&auml;hlung (%Elementz&auml;hlung%) ist gr&ouml;&szlig;er als %Elementmaximum%.
}</pre>
      <p>Beachte, dass die erste Zeile im obigen Beispiel Klammern enth&auml;lt. Diese Klammern verdeutlichen, dass die If-Anweisung ein <a href="Variables.htm#Expressions">Ausdruck</a> enth&auml;lt. Sollten sie nicht vorhanden sein, w&uuml;rde diese Zeile als "If-Anweisung ohne Ausdruck" angesehen werden, wodurch <em>Elementmaximum</em> in Prozentzeichen gesetzt werden m&uuml;sste (solche If-Anweisungen sind auf einen Vergleichsoperator beschr&auml;nkt; das hei&szlig;t, dass sie weder mathematische Operatoren noch Bindew&ouml;rter wie "AND" und "OR" enthalten k&ouml;nnen).</p>
      <h3>Berechnung</h3>
      <p>Mathematische Operationen k&ouml;nnen durchgef&uuml;hrt werden, indem der Doppelpunkt-Gleich-Operator (:=) dazu verwendet wird, das Ergebnis eines <a href="Variables.htm#Expressions">Ausdrucks</a> in einer Variable zu speichern. Zum Beispiel:</p>
      <pre>Nettopreis := Preis * (1 - Rabatt/100)</pre>
      <p>Siehe <a href="Variables.htm#Expressions">Ausdr&uuml;cke</a> f&uuml;r eine komplette Liste von mathematischen Operatoren.</p>
      <h3>Zwischenablage</h3>
      <p>Die Variable namens <em>Clipboard</em> hat eine besondere Bedeutung, da sie den aktuellen Text der Windows-Zwischenablage enth&auml;lt. Trotzdem kann sie so verwendet werden, als w&auml;re sie eine normale Variable. Das folgende Beispiel zeigt den aktuellen Inhalt der Zwischenablage an:</p>
      <pre>MsgBox %Clipboard%</pre>
      <p>Das n&auml;chste Beispiel verdeutlicht, wie der aktuelle Inhalt der Zwischenablage mit neuem Text ersetzt werden kann:</p>
      <pre>Clipboard = Erste Textzeile.`r`nZweite Textzeile.`r`n</pre>
      <p>In der oberen Zeile werden `r und `n (Akzent, gefolgt vom Buchstaben "r" oder "n") dazu verwendet, zwei Sonderzeichen zu kennzeichnen: CR und LF. Diese zwei Zeichen beginnen eine neue Textzeile, als h&auml;tte der Benutzer <kbd>Enter</kbd> gedr&uuml;ckt.</p>
      <p>Im n&auml;chsten Beispiel wird gezeigt, wie ein beliebiger Text an die Zwischenablage angef&uuml;gt wird (oder an einer anderen Variable):</p>
      <pre>Clipboard = %Clipboard% und der angef&uuml;gte Text.</pre>
      <p>Siehe <a href="misc/Clipboard.htm">Clipboard</a> und <a href="Variables.htm">Variablen</a> f&uuml;r weitere Details.</p>
      <h2 id="Loop">Wiederholen von mehreren Aktionen</h2>
      <p>Mit einer <a href="commands/Loop.htm">Schleife</a> kann irgendetwas mehr als einmal nacheinander ausgef&uuml;hrt werden. Das folgende Beispiel zeigt eine <a href="commands/MsgBox.htm">MsgBox</a> dreimal an:</p>
      <pre>Loop 3
{
    MsgBox Dieses Fenster wird dreimal angezeigt.
}</pre>
      <p>Du k&ouml;nntest nach dem Wort Loop auch eine Variable angeben, das zum Beispiel n&uuml;tzlich ist, falls die Anzahl der Durchl&auml;ufe irgendwo anders im Script festgelegt worden sind:</p>
      <pre>Loop %Ausf&uuml;hrungsanzahl%
{
    Run C:\Serverstatus&uuml;berpr&uuml;fung.exe
    Sleep 60000  <em>; Wartet 60 Sekunden.</em>
}</pre>
      <p>Im oberen Beispiel wird die Schleife je nach Anzahl mehrfach durchgef&uuml;hrt, sofern Ausf&uuml;hrungsanzahl keine 0 enth&auml;lt, wodurch in diesem Fall die Schleife komplett &uuml;bersprungen werden w&uuml;rde.</p>
      <p>Es ist auch m&ouml;glich, dass sich eine Schleife selbst beenden kann, sobald sich eine oder mehrere Bedingungen &auml;ndern. Das folgende Beispiel klickt mehrmals mit der linken Maustaste, w&auml;hrend der Benutzer die Taste <kbd>F1</kbd> gedr&uuml;ckt h&auml;lt:</p>
      <pre>$F1::  <em>; Macht die F1-Taste zu einem Hotkey (das $-Symbol unterst&uuml;tzt den "P"-Modus von GetKeyState unten).</em>
Loop  <em>; Da hier keine Anzahl angegeben ist, erfolgt solange eine Endlosschleife, bis ein "break" oder "return" vorkommt.</em>
{
    If not GetKeyState("F1", "P")  <em>; Ist diese Anweisung wahr, hat der Benutzer die F1-Taste physisch losgelassen.</em>
        break  <em>; Schleife unterbrechen.</em>
    <em>; Ansonsten wird die Maustaste gedr&uuml;ckt gehalten (da oben kein "break" erfolgte).</em>
    Click  <em>; Klickt einmal mit der linken Maustaste auf die aktuelle Position des Mauszeigers.</em>
}
Return</pre>
      <p>Sobald der Benutzer beim oberen Beispiel die Taste <kbd>F1</kbd> losl&auml;sst, wird das die Schleife erkennen und sich mithilfe des <a href="commands/Break.htm">Break</a>-Befehls selbst stoppen. <em>Break</em> bewirkt, dass die Ausf&uuml;hrung auf die Zeile nach der schlie&szlig;enden Klammer der Schleife springt.</p>
      <p>Das gleiche kann auch mit einer <a href="commands/While.htm">"While"-Schleife</a> erreicht werden:</p>
      <pre>$F1::
While GetKeyState("F1", "P")  <em>; W&auml;hrend die F1-Taste physisch gedr&uuml;ckt gehalten wird.</em>
{
    Click
}
return</pre>
      <p>Die oben genannten Beispiele sind Schleifen, die den allgemeinen Zweck dienen. F&uuml;r speziellere Anforderungen k&ouml;nnen folgende Schleifen in Betracht gezogen werden:</p>
      <p><a href="commands/LoopReadFile.htm">Dateilesende/-schreibende Schleife</a>: Ermittelt nacheinander die Zeilen einer Textdatei. Diese Schleife kann dazu verwendet werden, eine Datei zeilenweise in ein anderes Format umzuwandeln. Sie kann auch dazu verwendet werden, nach Zeilen zu suchen, die deinen Kriterien entsprechen.</p>
      <p><a href="commands/LoopFile.htm">Schleife f&uuml;r Dateien und Ordnern</a>: Ermittelt nacheinander die angegebenen Dateien oder Ordner. Dadurch k&ouml;nnen Operationen auf Dateien oder Ordner durchgef&uuml;hrt werden, die deine Kriterien erf&uuml;llen.</p>
      <p><a href="commands/LoopParse.htm">Parsing-Schleife</a>: Ermittelt nacheinander Teilstrings aus einem String. Dadurch kann ein String wie "Rot,Gr&uuml;n,Blau" einfach in drei Felder aufgeteilt werden.</p>
      <p><a href="commands/LoopReg.htm">Registrierung-Schleife</a>: Ermittelt nacheinander den Inhalt des angegebenen Unterschl&uuml;ssels.</p>
      <h2 id="Files">Bearbeiten von Dateien und Ordnern</h2>
      <p>Um Text ans Ende einer Datei anzuf&uuml;gen (oder eine neue Datei zu erstellen), verwende <a href="commands/FileAppend.htm">FileAppend</a> wie folgt. Beachte, dass `n (LF) verwendet wird, um danach eine neue Textzeile zu beginnen:</p>
      <pre>FileAppend, Eine anf&uuml;gende Textzeile.`n, C:\Eigene Dokumente\Eigene Textdatei.txt</pre>
      <p>Um eine vorhandene Datei zu &uuml;berschreiben, verwende <a href="commands/FileDelete.htm">FileDelete</a> vor FileAppend. Zum Beispiel:</p>
      <pre>FileDelete, C:\Eigene Dokumente\Eigene Textdatei.txt</pre>
      <p>Weitere Datei- oder Ordnerbefehle, die h&auml;ufig verwendet werden:</p>
      <ul>
        <li><a href="commands/FileRead.htm">FileRead</a>: Liest den Inhalt einer Datei in eine Variable.</li>
        <li><a href="commands/LoopReadFile.htm">Dateilesende Schleife</a>: Ermittelt nacheinander die Zeilen einer Textdatei.</li>
        <li><a href="commands/IfExist.htm">IfExist</a>: &Uuml;berpr&uuml;ft, ob eine Datei oder ein Ordner vorhanden ist.</li>
        <li><a href="commands/FileSelectFile.htm">FileSelectFile</a> und <a href="commands/FileSelectFolder.htm">FileSelectFolder</a>: Zeigt ein Standard-Dialogfenster an, das dem Benutzer erm&ouml;glicht, einen Ordner auszuw&auml;hlen.</li>
        <li><a href="commands/FileDelete.htm">FileDelete</a>/<a href="commands/FileRecycle.htm">FileRecycle</a>: L&ouml;scht/recycelt eine oder mehrere Dateien. Mit <a href="commands/FileRemoveDir.htm">FileRemoveDir</a> kann ein ganzer Ordner gel&ouml;scht werden.</li>
        <li><a href="commands/FileCopy.htm">FileCopy</a>/<a href="commands/FileMove.htm">FileMove</a>: Kopiert/verschiebt eine oder mehrere Dateien. Mit <a href="commands/FileCopyDir.htm">FileCopyDir</a>/<a href="commands/FileMoveDir.htm">FileMoveDir</a> kann ein ganzer Ordner kopiert/verschoben werden.</li>
        <li><a href="commands/LoopFile.htm">Schleife f&uuml;r Dateien und Ordnern</a>: Ermittelt nacheinander die angegebenen Dateien oder Ordner.</li>
        <li><a href="commands/FileSetAttrib.htm">FileSetAttrib</a> und <a href="commands/FileSetTime.htm">FileSetTime</a>: &Auml;ndert die Attribute oder Zeitstempel von einer oder mehreren Dateien.</li>
        <li><a href="commands/IniRead.htm">IniRead</a>, <a href="commands/IniWrite.htm">IniWrite</a> und <a href="commands/IniDelete.htm">IniDelete</a>: Erstellt, ermittelt und verwaltet INI-Dateien im Standardformat.</li>
        <li><a href="commands/RegRead.htm">RegRead</a>, <a href="commands/RegWrite.htm">RegWrite</a>, <a href="commands/RegDelete.htm">RegDelete</a> und <a href="commands/LoopReg.htm">Registrierung-Schleife</a>: Bearbeitet die Windows-Registrierung.</li>
      </ul>
      <h2 id="Overview">&Uuml;bersicht &uuml;ber weitere Funktionen</h2>
      <p>Siehe <a href="commands/index.htm">Befehlsliste</a> f&uuml;r eine &Uuml;bersicht aller Befehle.</p>
      <p>&nbsp;</p>
    </div>
  </section>
</div>
<script type="text/javascript">WriteFooter(0);</script>
</body>
</html>