<!DOCTYPE HTML>
<html>
<head>
<title>Hotkeys (Maus-, Joystick- und Tastatur-Tastenkombinationen)</title>
<meta name="keywords" content="Grundlage">
<meta name="description" content="Dient dazu, Hotkeys, Tastenk&uuml;rzel und Makros f&uuml;r Tastatur, Maus und Joystick zu erstellen. Es k&ouml;nnen beliebige Tasten zu einem Hotkey kombiniert werden.">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="static/theme.css" rel="stylesheet" type="text/css" />
<link href="static/font.css" rel="stylesheet" type="text/css" />
<script src="static/ga.js" type="text/javascript"></script>
<!--[if lt IE 9]>
<script src="static/html5.js"></script>
<![endif]-->
<script src="navbar/NavScript.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(0);</script>
<div id="content">
  <section>
    <div id="article">
      <h1>Hotkeys (Maus-, Joystick- und Tastatur-Tastenkombinationen)</h1>
      <h2>Inhaltsverzeichnis</h2>
      <ul>
        <li><a href="#Intro">Einf&uuml;hrung und einfache Beispiele</a></li>
        <li><a href="#Symbols">Tabelle mit Pr&auml;fix-Symbolen (Modifikatoren)</a></li>
        <li><a href="#Context">Kontextabh&auml;ngige Hotkeys</a></li>
        <li><a href="#Features">Benutzerdefinierte Kombinationen und andere Funktionen</a></li>
        <li><a href="#Wheel">Mausrad-Hotkeys</a></li>
        <li><a href="#Remarks">Tipps und Hinweise</a></li>
      </ul>
      <h2 id="Intro">Einf&uuml;hrung und einfache Beispiele</h2>
      <p>Hotkeys werden manchmal auch als Tastenk&uuml;rzel bezeichnet, weil sie in der Lage sind, schnell und einfach eine Aktion auszul&ouml;sen (z. B. das Ausf&uuml;hren eines Programms oder <a href="misc/Macros.htm">Tastatur-Makros</a>). Im folgenden Beispiel wird der Hotkey WIN+N dazu gebracht, den Editor zu starten. Das Raute-Zeichen [#] ist die WIN-Taste, die als <em>Modifikatortaste</em> bezeichnet wird:</p>
      <pre>#n::
Run Notepad
Return</pre>
      <p>Im oberen Beispiel dient das <a href="commands/Return.htm"><code>Return</code></a> dazu, den Hotkey zu beenden. Muss ein Hotkey nur eine einzige Zeile ausf&uuml;hren, kann diese Zeile rechts neben den Doppelpunkten vorkommen. In diesem Fall ist das <a href="commands/Return.htm"><code>Return</code></a> inbegriffen:</p>
      <pre>#n::Run Notepad
</pre>
      <p>Um mehrere Modifikatoren mit einem Hotkey zu kombinieren, liste diese nebeneinander auf (die Reihenfolge spielt keine Rolle). Im folgenden Beispiel wird <code>^!s</code> verwendet, das STRG+ALT+S kennzeichnet:</p>
      <pre>^!s::
<a href="commands/Send.htm">Send</a> Mit freundlichen Gr&uuml;&szlig;en,{Enter}John Smith  <em>; Diese Zeile sendet Tastatureingaben an das aktive (vorderste) Fenster.</em>
Return</pre>
      <h3 id="Symbols">Folgende Modifikatorsymbole k&ouml;nnen zum Definieren von Hotkeys verwendet werden:</h3>
      <table class="info">
        <tr>
          <th>Symbol</th>
          <th>Beschreibung</th>
        </tr>
        <tr>
          <td style="width: 30px;"><strong>#</strong></td>
          <td>WIN-Taste (Windows-Logo-Taste). Windows Vista und h&ouml;her: Seit v1.0.48.01 warten Hotkeys, die die WIN-Taste enthalten (z. B. #a), auf das Loslassen der WIN-Taste, bevor ein beliebiger Text gesendet wird, der ein "L" enth&auml;lt. Dadurch wird verhindert, dass bei Verwendung von <a href="commands/Send.htm">Send</a> innerhalb solch eines Hotkeys der PC unbeabsichtigt gesperrt wird. Diese &Auml;nderung gilt f&uuml;r alle Sendmethoden, au&szlig;er <a href="commands/Send.htm#SendPlayDetail">SendPlay</a> (weil es das nicht braucht) und <a href="commands/Send.htm#blind">Blind-Modus</a>.</td>
        </tr>
        <tr>
          <td><strong>!</strong></td>
          <td>ALT-Taste</td>
        </tr>
        <tr>
          <td><strong>^</strong></td>
          <td>STRG-Taste</td>
        </tr>
        <tr>
          <td><strong>+</strong></td>
          <td>UMSCHALT-Taste</td>
        </tr>
        <tr>
          <td><strong>&amp;</strong></td>
          <td>Ein Und-Zeichen kann zwischen zwei beliebigen Tasten oder Maustasten verwendet werden, um diese zu einem benutzerdefinierten Hotkey zu verbinden. Siehe <a href="#combo">unten</a> f&uuml;r weitere Details. Solche Hotkeys werden in Windows 95/98/Me ignoriert (nicht aktiviert).</td>
        </tr>
        <tr>
          <td><strong>&lt;</strong></td>
          <td id="LeftRight">Verwendet die linke Version der angegebenen Modifikatortaste. Zum Beispiel ist &lt;!a das gleiche wie !a, au&szlig;er dass die linke ALT-Taste zum Ausl&ouml;sen des Hotkeys ben&ouml;tigt wird. Dieses Symbol wird in Windows 95/98/Me ignoriert.</td>
        </tr>
        <tr>
          <td><strong>&gt;</strong></td>
          <td>Verwendet die rechte Version der angegebenen Modifikatortaste. Dieses Symbol wird in Windows 95/98/Me ignoriert.</td>
        </tr>
        <tr>
          <td><strong>&lt;^&gt;!</strong></td>
          <td><p id="AltGr">ALTGR-Taste (alternativer Schriftsatz). Hat deine Tastaturbelegung die ALTGR-Taste anstelle einer rechten ALT-Taste, kann diese Symbolreihe als ALTGR verwendet werden (ben&ouml;tigt Windows NT/2k/XP oder h&ouml;her). Zum Beispiel:</p>
            <pre>&lt;^&gt;!m::MsgBox Du hast ALTGR+M gedr&uuml;ckt.
&lt;^&lt;!m::MsgBox Du hast STRGLinks+ALTLinks+M gedr&uuml;ckt.
</pre>
            <p>Soll ALTGR allerdings selbst zum Hotkey werden, verwende folgende Kombination (ohne den oben genannten Hotkeys):</p>
            <pre>LControl &amp; RAlt::MsgBox Du hast ALTGR gedr&uuml;ckt.
</pre></td>
        </tr>
        <tr>
          <td><strong>*</strong></td>
          <td><p id="wildcard">Platzhalter: F&uuml;hrt den Hotkey auch dann aus, wenn zus&auml;tzliche Modifikatortasten gedr&uuml;ckt gehalten werden. Das wird oft in Verbindung mit der <a href="misc/Remap.htm">Neubelegung</a> von Tasten verwendet. Zum Beispiel:</p>
            <pre><em>; WIN+C, UMSCHALT+WIN+C und STRG+WIN+C usw. werden den folgenden
; Hotkey ausl&ouml;sen.</em>
*#c::Run Calc.exe</pre>
            <pre><em>; Die ROLLEN-Taste l&ouml;st den folgenden Hotkey aus, selbst wenn
; Modifikatortasten gedr&uuml;ckt gehalten werden.</em>
*ScrollLock::Run Notepad</pre>
            <p>Dieses Symbol wird in Windows 95/98/Me ignoriert.</p></td>
        </tr>
        <tr>
          <td><strong>~</strong></td>
          <td><p id="Tilde">Beim Dr&uuml;cken des Hotkeys wird seine urspr&uuml;ngliche Funktion nicht blockiert (bzw. nicht im System versteckt). In den beiden folgenden Beispielen wird der Mausklick des Benutzers weiterhin an das aktive Fenster gesendet:</p>
            <pre>~RButton::MsgBox Du hast die rechte Maustaste gedr&uuml;ckt.
~RButton &amp; C::MsgBox Du hast C gedr&uuml;ckt, w&auml;hrend du die rechte Maustaste dr&uuml;ckst.
</pre>
            <p>Hinweise: </p>
            <ul>
              <li>Im Gegensatz zu den anderen Pr&auml;fix-Symbolen darf das Tilde-Pr&auml;fix in einigen <a href="commands/_IfWinActive.htm#variant">Hotkey-Varianten</a> vorkommen und in anderen nicht.</li>
              <li>Spezielle Hotkeys, die etwas mit <a href="#alttab">Alt-Tab</a> zu tun haben, ignorieren immer das Tilde-Pr&auml;fix.</li>
              <li>Das Tilde-Pr&auml;fix wird in Windows 95/98/ME ignoriert.</li>
            </ul>
            <p></p></td>
        </tr>
        <tr id="prefixdollar">
          <td><strong>$</strong></td>
          <td><p>Dieses Pr&auml;fix ist normalerweise nur notwendig, wenn das Script den <a href="commands/Send.htm">Send</a>-Befehl verwendet, um Tasten zu senden, die den Hotkey selbst enthalten, der sich ansonsten selbst ausl&ouml;sen w&uuml;rde. Das $-Pr&auml;fix erzwingt den  <a href="commands/_InstallKeybdHook.htm">Tastatur-Hook</a> zum Implementieren des Hotkeys, wodurch als Nebeneffekt der <a href="commands/Send.htm">Send</a>-Befehl den Hotkey nicht mehr ausl&ouml;sen kann. Dieser Pr&auml;fix ist das gleiche wie, als h&auml;ttest du  <a href="commands/_UseHook.htm"><code>#UseHook</code></a> irgendwo vor der Hotkey-Definition angegeben.</p>
            <p><span class="ver">[v1.1.06+]:</span> <a href="commands/_InputLevel.htm">#InputLevel</a> und <a href="commands/SendLevel.htm">SendLevel</a> erm&ouml;glichen zus&auml;tzliche Kontrolle dar&uuml;ber, welche Hotkeys und Hotstrings durch den Send-Befehl ausgel&ouml;st werden sollen.</p></td>
        </tr>
        <tr>
          <td>UP<br></td>
          <td><p id="keyup">Das Wort UP kann nach dem Namen eines Hotkeys erfolgen, um den Hotkey dazu zubringen, beim Loslassen ausgef&uuml;hrt zu werden, anstatt beim Dr&uuml;cken. Im folgenden Beispiel wird die linke WIN-Taste mit der linken STRG-Taste <a href="misc/Remap.htm">neu belegt</a>:</p>
            <pre>*LWin::Send {LControl Down}
*LWin <strong>Up</strong>::Send {LControl Up}
</pre>
            <p>"Up" kann auch bei normalen Hotkeys verwendet werden. Zum Beispiel:</p>
            <pre>^!r Up::MsgBox Du hast STRG+ALT+R gedr&uuml;ckt und losgelassen.
</pre>
            <p>Das funktioniert auch mit <a href="#combo">kombinierten Hotkeys</a> (z. B. <code>F1 &amp; e Up::</code>).</p>
            <p>Einschr&auml;nkungen: </p>
            <ul>
              <li>"Up" funktioniert nicht bei <a href="KeyList.htm">Joystick-Tasten</a>.</li>
              <li>"Up" ben&ouml;tigt Windows NT4/2000/XP oder h&ouml;her.</li>
              <li>Ein "Up"-Hotkey ohne entsprechenden normalen/gedr&uuml;ckten Gegenst&uuml;ck wird diese Taste komplett &uuml;bernehmen, um zu verhindern, dass sie stecken bleibt. Dieses Problem kann zum Beispiel unterdr&uuml;ckt werden, wenn ein <a href="#Tilde">Tilde-Pr&auml;fix</a> hinzugef&uuml;gt wird (z. B. <code><strong>~</strong>LControl up::</code>).</li>
            </ul>
            <p></p>
            <p>Mit einer &auml;hnlichen Methode kannst du ein Hotkey zu einer Pr&auml;fix-Taste machen. Der Vorteil davon ist, dass der Hotkey beim Loslassen nur ausgef&uuml;hrt wird, wenn keine andere Taste gedr&uuml;ckt wird, w&auml;hrend er gedr&uuml;ckt gehalten wird. Zum Beispiel:</p>
            <pre><em>; Macht die linke STRG-Taste zu einem Pr&auml;fix,
; wenn sie mindestens einmal vor "&amp;" verwendet wird.</em>
LControl &amp; F1::Return
LControl::MsgBox Du hast LControl ohne Auswirkung losgelassen.</pre></td>
        </tr>
      </table>
      <p><strong>(In der <a href="KeyList.htm">Tastenliste</a> k&ouml;nnen alle m&ouml;glichen Tasten von der Tastatur, Maus und des Joysticks gefunden werden)</strong></p>
      <br>
      <p>Es k&ouml;nnen mehrere Hotkeys vertikal gestapelt werden, damit sie die gleiche Aktion ausf&uuml;hren. Zum Beispiel:</p>
      <pre>^Numpad0::
^Numpad1::
MsgBox Durch Dr&uuml;cken von STRG+Numpad0 oder STRG+Numpad1 wird diese Meldung angezeigt.
Return</pre>
      <p>Eine Taste oder Tastenkombination kann vollst&auml;ndig deaktiviert werden, indem sie dazu gebracht wird, nichts zu tun. Das folgende Beispiel deaktiviert die rechte WIN-Taste:</p>
      <pre>RWin::Return
</pre>
      <h2 id="Context">Kontextabh&auml;ngige Hotkeys</h2>
      <p>Die Direktiven <a href="commands/_IfWinActive.htm">#IfWinActive/Exist</a> und <a href="commands/_If.htm">#If</a> k&ouml;nnen Hotkeys dazu bringen, je nach Bedingung unterschiedliche (oder &uuml;berhaupt keine) Aktionen durchzuf&uuml;hren. Zum Beispiel:</p>
      <pre>#IfWinActive, ahk_class Notepad
^a::MsgBox Du hast STRG+A gedr&uuml;ckt, w&auml;hrend der Editor aktiv ist. Das Dr&uuml;cken von STRG+A in jedem anderen Fenster wird stattdessen die Tastatureingabe STRG+A &uuml;bergeben.
#c::MsgBox Du hast WIN+C gedr&uuml;ckt, w&auml;hrend der Editor aktiv ist.

#IfWinActive
#c::MsgBox Du hast WIN+C gedr&uuml;ckt, w&auml;hrend ein Fenster au&szlig;er dem Editor aktiv ist.

#If <a href="commands/_If.htm#Examples">MouseIsOver</a>("ahk_class Shell_TrayWnd")
WheelUp::Send {Volume_Up}     <em>; Mausrad &uuml;ber die Taskleiste: Lautst&auml;rke erh&ouml;hen/verringern.</em>
WheelDown::Send {Volume_Down} <em>; </em>
</pre>
      <h2 id="Features">Benutzerdefinierte Kombinationen und andere Funktionen <span class="ver">[Windows NT/2000/XP oder h&ouml;her]</span></h2>
      <p id="combo">Mithilfe von " &amp; " kannst du eine benutzerdefinierte Kombination von zwei Tasten (au&szlig;er Joystick-Tasten) definieren. Im folgenden Beispiel w&uuml;rde der Hotkey ausgel&ouml;st werden, wenn du Numpad0 gedr&uuml;ckt h&auml;ltst und danach die zweite Taste dr&uuml;ckst:</p>
      <pre>Numpad0 <strong>&amp;</strong> Numpad1::MsgBox, Du hast Numpad1 gedr&uuml;ckt, w&auml;hrend du Numpad0 gedr&uuml;ckt hielst.
Numpad0 <strong>&amp;</strong> Numpad2::Run Notepad
</pre>
      <p id="prefix">Im obigen Beispiel wird Numpad0 eine <em>Pr&auml;fix-Taste</em>; allerdings verliert Numpad0 dadurch seine urspr&uuml;ngliche Funktion, wenn sie selbst gedr&uuml;ckt wird. Um das zu vermeiden, kannst du die Numpad0-Taste wie folgt konfigurieren, um eine neue Aktion durchzuf&uuml;hren:</p>
      <pre>Numpad0::WinMaximize A   <em>; Maximiert das aktive/vorderste Fenster.</em>
Numpad0::Send {Numpad0}  <em>; Numpad0 erzeugt beim <i>Loslassen</i> eine Numpad0-Tastatureingabe. Siehe unteren Kommentar.</em>
</pre>
      <p>Die oben genannten Hotkeys bewirken beim Loslassen von Numpad0, dass die angegebenen Aktionen durchgef&uuml;hrt werden, allerdings nur, wenn du keine andere Taste dr&uuml;ckst, w&auml;hrend du Numpad0 gedr&uuml;ckt h&auml;ltst.</p>
      <p><strong>NUM-, FESTSTELL- und ROLLEN-Taste:</strong> Diese Tasten k&ouml;nnen dazu gezwungen werden, "AlwaysOn" (immer an) oder "AlwaysOff" (immer aus) zu sein. Zum Beispiel: </p>
      <pre><a href="commands/SetNumScrollCapsLockState.htm">SetNumlockState</a> AlwaysOn
</pre>
      <p></p>
      <p><strong>Explorer-Tastenk&uuml;rzel &uuml;berschreiben:</strong> Die internen Hotkeys von Windows wie WIN+E (#e) und WIN+R (#r) k&ouml;nnen einzeln &uuml;berschrieben werden, indem man ihnen im Script einfach eine Aktion zuweist. Siehe "<a href="misc/Override.htm">&Uuml;berschreiben oder Deaktivieren von Hotkeys</a>" f&uuml;r Details.</p>
      <p id="alttab"><strong>Alt-Tab ersetzen:</strong> Hotkeys k&ouml;nnen eine alternative Methode f&uuml;r Alt-Tab bereitstellen. Zum Beispiel erm&ouml;glichen dir die folgenden zwei Hotkeys, Alt-Tab mit deiner rechten Hand durchzuf&uuml;hren:</p>
      <pre>RControl &amp; RShift::AltTab  <em>; Halte rechte STRG-Taste gedr&uuml;ckt und dr&uuml;cke danach mehrmals die rechte UMSCHALT-Taste, um durchzuschalten.</em>
RControl &amp; Enter::ShiftAltTab  <em>; Ohne die rechte STRG-Taste loszulassen, dr&uuml;cke ENTER, um die Richtung umzukehren.</em>
</pre>
      <p>Siehe <a href="#AltTabDetail">Alt-Tab</a> f&uuml;r weitere Details.</p>
      <h2 id="Wheel">Mausrad-Hotkeys <span class="ver">[Windows NT/2000/XP oder h&ouml;her]</span></h2>
      <p>Hotkeys, die beim Drehen des Mausrads ausgef&uuml;hrt werden, k&ouml;nnen mit WheelDown und WheelUp realisiert werden. Seit v1.0.48 werden auch WheelLeft und WheelRight  unterst&uuml;tzt, allerdings funktionieren diese nicht in Betriebssystemen &auml;lter als Windows Vista. Hier einige Beispiele f&uuml;r Mausrad-Hotkeys:</p>
      <pre>MButton &amp; WheelDown::MsgBox Du hast das Mausrad nach unten gedreht, w&auml;hrend du die mittlere Maustaste gedr&uuml;ckt hielst.
^!WheelUp::MsgBox Du hast das Mausrad nach oben gedreht, w&auml;hrend du STRG+ALT gedr&uuml;ckt hielst.
</pre>
      <p>Seit v1.0.43.03 enth&auml;lt die interne Variable <strong>A_EventInfo</strong> die Anzahl an gedrehten Rasterungen (standardm&auml;&szlig;ig 1). Allerdings kann A_EventInfo unter folgenden Umst&auml;nden gr&ouml;&szlig;er oder kleiner als 1 sein:</p>
      <ul>
        <li>Meldet die Maus-Hardware eine Drehungsgr&ouml;&szlig;e kleiner als eine Rasterung, enth&auml;lt A_EventInfo eine 0;</li>
        <li>Wenn das Mausrad schnell gedreht wird (je nach Maustyp), kann A_EventInfo gr&ouml;&szlig;er als 1 sein. Der folgende Hotkey kann dir dabei helfen, deine Maus zu untersuchen: <code>~WheelDown::ToolTip %A_EventInfo%</code>.</li>
      </ul>
      <p>Einige der n&uuml;tzlichsten Mausrad-Hotkeys sind solche, die alternative Methoden zum Scrollen eines Fenstertextes bereitstellen. Die folgenden Hotkey-Paare scrollen beispielsweise horizontal statt vertikal, wenn du das Mausrad drehst, w&auml;hrend du die linke STRG-Taste gedr&uuml;ckt h&auml;ltst:</p>
      <pre>~LControl &amp; WheelUp::  <em>; Scrollt nach links.</em>
ControlGetFocus, fcontrol, A
Loop 2  <em>; &lt;-- Erh&ouml;he diesen Wert, um das Scrollen zu beschleunigen.</em>
    SendMessage, 0x114, 0, 0, %fcontrol%, A  <em>; 0x114 ist WM_HSCROLL und die 0 danach SB_LINELEFT.</em>
Return

~LControl &amp; WheelDown::  <em>; Scrollt nach rechts.</em>
ControlGetFocus, fcontrol, A
Loop 2  <em>; &lt;-- Erh&ouml;he diesen Wert, um das Scrollen zu beschleunigen.</em>
    SendMessage, 0x114, 1, 0, %fcontrol%, A  <em>; 0x114 ist WM_HSCROLL und die 1 danach SB_LINERIGHT.</em>
Return</pre>
      <p>Da Mausrad-Hotkeys nur Ereignisse beim Dr&uuml;cken erzeugen (nie beim Loslassen), k&ouml;nnen sie nicht als Hotkeys verwendet werden, die das Wort <a href="#keyup">"UP"</a> enthalten.</p>
      <h2 id="Remarks">Tipps und Hinweise</h2>
      <p>Jede Ziffernblocktaste kann dazu gebracht werden, je nach Status der NUM-Taste zwei verschiedene Hotkey-Subroutinen zu starten. Alternativ kann man eine Ziffernblocktaste auch dazu bringen, die gleiche Subroutine zu starten, unabh&auml;ngig vom Status der NUM-Taste. Zum Beispiel:</p>
      <pre>NumpadEnd::
Numpad1::
MsgBox, Dieser Hotkey wurde gestartet, unabh&auml;ngig davon, ob die NUM-Taste an ist.
Return</pre>
      <p>Sobald der Tilde-Operator (~) mit einer <a href="#prefix">Pr&auml;fix-Taste</a> verwendet wird, w&uuml;rde dieses
        Pr&auml;fix immer das aktive Fenster erreichen. Zum Beispiel w&uuml;rde bei beiden folgenden Hotkeys das aktive Fenster alle Rechtsklick-Ereignisse empfangen, obwohl das Tilde-Zeichen nur in einer der Definitionen vorkommt:</p>
      <pre>~RButton &amp; LButton::MsgBox Du hast die linke Maustaste gedr&uuml;ckt, w&auml;hrend du die rechte gedr&uuml;ckt hielst.
RButton &amp; WheelUp::MsgBox Du hast das Mausrad nach oben gedreht, w&auml;hrend du die rechte Maustaste gedr&uuml;ckt hielst.
</pre>
      <p>Der <a href="commands/Suspend.htm">Suspend</a>-Befehl kann vor&uuml;bergehend alle Hotkeys deaktivieren, au&szlig;er solche, bei denen du eine Ausnahme gemacht hast. Um solche Hotkeys gezielt zu bestimmen, verwende <a href="commands/_IfWinActive.htm">#IfWinActive/Exist</a>.</p>
      <p>Mithilfe des <a href="commands/Hotkey.htm">Hotkey</a>-Befehls k&ouml;nnen Hotkeys dynamisch erstellt werden, w&auml;hrend das Script l&auml;uft. Der Hotkey-Befehl kann zudem Hotkeys, die  im Script bereits vorkommen, einzeln bearbeiten, deaktivieren oder aktivieren.</p>
      <p>Joystick-Hotkeys unterst&uuml;tzen Modifikatortasten wie ^ (STRG) und # (WIN) zurzeit nicht als Pr&auml;fix. Allerdings kannst du <a href="commands/GetKeyState.htm">GetKeyState</a> wie folgt verwenden, um diesen Effekt nachzuahmen:</p>
      <pre>Joy2::
If not GetKeyState("Control")  <em>; Weder die linke noch die rechte STRG-Taste ist gedr&uuml;ckt.</em>
    Return  <em>; also nichts tun.</em>
MsgBox Du hast die zweite Taste vom ersten Joystick gedr&uuml;ckt, w&auml;hrend du die STRG-Taste gedr&uuml;ckt hielst.
Return</pre>
      <p>Manchmal ist es notwendig, dass ein Hotkey auf das Loslassen seiner Modifikatortasten warten muss, bevor er fortfahren kann. Siehe dazu folgendes Beispiel:</p>
      <pre>^!s::Send {Delete}
</pre>
      <p>Durch Dr&uuml;cken von STRG+ALT+S wird das System dazu gebracht, sich so zu verhalten, als h&auml;ttest du STRG+ALT+ENTF gedr&uuml;ckt (aufgrund der aggressiven Erkennung dieser Tastenkombination). Um das zu umgehen, solltest du mit <a href="commands/KeyWait.htm">KeyWait</a> auf das Loslassen der Tasten warten; zum Beispiel:</p>
      <pre>^!s::
KeyWait Control
KeyWait Alt
Send {Delete}
Return</pre>
      <p>Erzeugt ein Hotkey-Label wie <code>#z::</code> ein Fehler wie "Invalid Hotkey" (ung&uuml;ltiger Hotkey), hat die Tastaturbelegung/Sprache deines Systems dieses bestimmte Zeichen m&ouml;glicherweise nicht (in diesem Fall "Z"). Probiere Zeichen aus, von denen du weist, dass sie auf deiner Tastaturbelegung existieren.</p>
      <p>Ein Hotkey-Label kann als Ziel von <a href="commands/Gosub.htm">Gosub</a> oder <a href="commands/Goto.htm">Goto</a> verwendet werden. Zum Beispiel: <code>Gosub ^!s</code>.</p>
      <p>H&auml;ufig werden Hotkeys dazu verwendet, eine wiederholende Aktion zu starten und zu stoppen, wie z. B. mehrere Tastatureingaben oder Mausklicks. Ein Beispiel dazu findest du in <a href="FAQ.htm#repeat">diesem FAQ-Thema</a>.</p>
      <p>Jedes Script kann aus mehreren <a href="misc/Threads.htm">Threads</a> bestehen, wodurch es m&ouml;glich ist, dass ein neuer Hotkey  gestartet werden kann, obwohl eine vorherige Hotkey-Subroutine noch l&auml;uft. Zum Beispiel k&ouml;nnen neue Hotkeys gestartet werden, w&auml;hrend eine <a href="commands/MsgBox.htm">MsgBox</a> mit dem aktuellen Hotkey angezeigt wird.</p>
      <h2 id="AltTabDetail">Alt-Tab-Hotkeys</h2>
      <p>Jeder Alt-Tab-Hotkey muss eine Kombination von zwei Tasten sein, das &uuml;blicherweise mit einem Und-Zeichen (&amp;) erreicht werden kann. Im folgenden Beispiel k&ouml;nntest du die rechte ALT-Taste gedr&uuml;ckt halten und J oder K dr&uuml;cken, um das Alt-Tab-Men&uuml; durchzuschalten:</p>
      <pre>RAlt &amp; j::AltTab
RAlt &amp; k::ShiftAltTab
</pre>
      <p><em>AltTab</em> und <em>ShiftAltTab</em> sind zwei spezielle Befehle, die nur erkannt werden, wenn sie auf der gleichen Zeile des Hotkeys vorkommen. Hier die komplette Liste:</p>
      <p><strong>AltTab</strong>: Ist das Alt-Tab-Men&uuml; sichtbar, wird es durchgeschaltet. Ansonsten wird das Men&uuml; ge&ouml;ffnet (nur wenn der Hotkey eine "&amp;"-Kombination von zwei Tasten ist, sonst passiert nichts).</p>
      <p><strong>ShiftAltTab</strong>: Das gleiche wie oben, nur in die entgegengesetzte Richtung.</p>
      <p><strong>AltTabAndMenu</strong>: Ist das Alt-Tab-Men&uuml; sichtbar, wird es durchgeschaltet. Ansonsten wird das Men&uuml; ge&ouml;ffnet.</p>
      <p><strong>AltTabMenuDismiss</strong>: Schlie&szlig;t das Alt-Tab-Men&uuml;.</p>
      <p>Zur Veranschaulichung der oben genannten Sonderbefehle k&ouml;nnte man beispielsweise das Mausrad als vollst&auml;ndigen Ersatz f&uuml;r Alt-Tab umfunktionieren. Die folgenden Hotkeys w&uuml;rden bewirken, dass durch Klicken der mittleren Maustaste das Men&uuml; ge&ouml;ffnet und durch Drehen des Mausrads das Men&uuml; durchgeschaltet werden kann:</p>
      <pre>MButton::AltTabMenu
WheelDown::AltTab
WheelUp::ShiftAltTab</pre>
      <p>Um ein Alt-Tab-Men&uuml;, das per Hotkey aufgerufen wurde, zu schlie&szlig;en, ohne das ausgew&auml;hlte Fenster zu aktivieren, verwende ein Hotkey wie folgt. M&ouml;glicherweise sind Anpassungen notwendig, je nachdem, womit das Alt-Tab-Men&uuml; urspr&uuml;nglich angezeigt wurde und ob das Script den <a href="commands/_InstallKeybdHook.htm">Tastatur-Hook</a> installiert hat.</p>
      <pre>LCtrl &amp; CapsLock::AltTab
<strong>!</strong>MButton::  <em>; Mittlere Maustaste. Mit dem <strong>!</strong>-Pr&auml;fix kann er nur ausgef&uuml;hrt werden, wenn die ALT-Taste gedr&uuml;ckt wird (sobald das Alt-Tab-Men&uuml; sichtbar ist).</em>
IfWinExist ahk_class #32771  <em>; Zeigt an, dass das Alt-Tab-Men&uuml; auf dem Bildschirm vorhanden ist.</em>
    Send <strong>!</strong>{Escape}{Alt up}
Return</pre>
      <p>Zurzeit m&uuml;ssen alle speziellen Alt-Tab-Aktionen direkt einem Hotkey wie oben zugewiesen werden (das hei&szlig;t, dass sie nicht verwendet werden k&ouml;nnen, als w&auml;ren sie Befehle). Sie werden <span class="red">nicht von <a href="commands/_IfWinActive.htm">#IfWin</a> oder <a href="commands/_If.htm">#If</a> beeinflusst</span>.</p>
      <p>Per Hotkeys k&ouml;nnen auch benutzerdefinierte Alt-Tab-Aktionen erstellt werden. Im folgenden Beispiel k&ouml;nntest du F1 dr&uuml;cken, um das Men&uuml; zu &ouml;ffnen und darin durchzuschalten. Danach F2, um das ausgew&auml;hlte Fenster zu aktivieren (oder ESC dr&uuml;cken, um abzubrechen):</p>
      <pre>*F1::Send {Alt down}{tab} <em>; Sternchen ist in diesem Fall notwendig.</em>
!F2::Send {Alt up}  <em>; L&auml;sst die ALT-Taste los, um das ausgew&auml;hlte Fenster zu aktivieren.</em>
~*Escape::
IfWinExist ahk_class #32771
    Send {Escape}{Alt up}  <em>; Schlie&szlig;t das Men&uuml;, ohne das ausgew&auml;hlte Fenster zu aktivieren.</em>
Return</pre>
    </div>
  </section>
</div>
<script type="text/javascript">WriteFooter(0);</script>
</body>
</html>