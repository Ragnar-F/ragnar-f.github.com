<!DOCTYPE HTML>
<html>
<head>
<title>Joystick mit Tastatur oder Maus neu belegen</title>
<meta name="keywords" content="Grundlage">
<meta name="description" content="Bringt den Joystick mit dieser freien Scriptsprache dazu, Tastatureingaben und Mausklicks zu senden. Erm&ouml;glicht auch, einen Joystick als Maus zu verwenden.">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/ga.js" type="text/javascript"></script>
<!--[if lt IE 9]>
<script src="../static/html5.js"></script>
<![endif]-->
<script src="../navbar/NavScript.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <div id="article">
      <h1>Joystick mit Tastatur oder Maus neu belegen</h1>
      <h2>Inhaltsverzeichnis</h2>
      <ul>
        <li><a href="#imp">Wichtige Hinweise</a></li>
        <li><a href="#button">Mit einer Joystick-Taste Tastatureingaben oder Mausklicks senden</a></li>
        <li><a href="#axis">Mit einer Joystick-Achse oder einem Rundblickschalter Tastatureingaben oder Mausklicks senden</a></li>
        <li><a href="#Remarks">Bemerkungen</a></li>
      </ul>
      <h2 id="imp">Wichtige Hinweise</h2>
      <ul>
        <li>Obwohl eine Joystick-Taste oder -Achse mit einer Taste oder Maustaste neu belegt werden kann, ist es nicht m&ouml;glich, diese Taste/Achse mit anderen Joystick-Tasten oder -Achsen neu zubelegen. Das w&auml;re nur mithilfe eines Joystick-Emulators wie <a href="http://www.autohotkey.com/forum/topic50596.html">PPJoy</a> m&ouml;glich.</li>
        <li>AutoHotkey identifiziert jede Joystick-Taste mit einer eindeutigen Zahl zwischen 1 und 32. Um diese Zahlen zu ermitteln, verwendet den <a href="../scripts/JoystickTest.htm">Joystick-Testscript</a>.</li>
      </ul>
      <h2 id="button">Mit einer Joystick-Taste Tastatureingaben oder Mausklicks senden</h2>
      <p>Hierbei sind drei Ans&auml;tze, von einfach bis komplex. Die komplexeste Methode funktioniert mit der h&ouml;chsten Wahrscheinlichkeit (z. B. bei Spiele, in denen eine Taste oder Maustaste gedr&uuml;ckt gehalten werden muss).</p>
      <p><strong> Methode #1</strong>: Diese Methode sendet einfache Tastatureingaben und Mausklicks. Zum Beispiel:</p>
      <pre>Joy1::<a href="../commands/Send.htm">Send</a> {Left}  <em>; Mit der Taste #1 die linke Pfeiltaste senden.</em>
Joy2::<a href="../commands/Click.htm">Click</a>  <em>; Mit der Taste #2 die linke Maustaste senden.</em>
Joy3::Send a{Esc}{Space}{Enter}  <em>; Mit der Taste #3 die Taste "a" gefolgt von Escape, Leerzeichen und Enter senden.</em>
Joy4::Mit freundlichen Gr&uuml;&szlig;en,{Enter}John Smith  <em>; Mit der Taste #4 eine zweizeilige Signatur senden.</em></pre>
      <p>Damit eine Taste mehr als einen Befehl senden kann, setzt den ersten Befehl <em>unter</em> den Tastennamen und f&uuml;gt als letzten Befehl ein <a href="../commands/Return.htm">Return</a> hinzu. Zum Beispiel:</p>
      <pre>Joy5::
Run Notepad
WinWait Unbenannt - Editor
WinActivate
Send Das ist der Text, der im Editor erscheinen wird.{Enter}
Return</pre>
      <p>In der <a href="../KeyList.htm">Tastenliste</a> k&ouml;nnen alle Tastennamen der Tastatur, Maus und des Joysticks gefunden werden.</p>
      <br>
      <p><strong>Methode #2</strong>: Diese Methode ist notwendig, wenn eine Taste oder Maustaste gedr&uuml;ckt gehalten werden muss, w&auml;hrend eine Joystick-Taste gedr&uuml;ckt gehalten wird. Im folgenden Beispiel verh&auml;lt sich die zweite Joystick-Taste wie die NACH-LINKS-Taste:</p>
      <pre>Joy2::
Send {Left down}  <em>; H&auml;lt die linke Pfeiltaste gedr&uuml;ckt.</em>
<a href="../commands/KeyWait.htm">KeyWait</a> Joy2  <em>; Wartet, bis die Joystick-Taste losgelassen wird.</em>
Send {Left up}  <em>; L&auml;sst die linke Pfeiltaste los.</em>
Return</pre>
      <br>
      <p><strong> Methode #3</strong>: Diese Methode ist notwendig, wenn mehr als ein Joystick-Hotkey von Methode #2 vorhanden ist und solche Hotkeys gleichzeitig gedr&uuml;ckt gehalten oder losgelassen werden m&uuml;ssen. Im folgenden Beispiel verh&auml;lt sich die dritte Joystick-Taste wie die linke Maustaste:</p>
      <pre>Joy3::
Send {LButton down}   <em>; H&auml;lt die linke Maustaste gedr&uuml;ckt.</em>
SetTimer, AufTaste3Warten, 10
Return

AufTaste3Warten:
If <a href="../Functions.htm#GetKeyState">GetKeyState</a>("Joy3")  <em>; Falls die Taste weiterhin gedr&uuml;ckt gehalten wird, warten.</em>
    Return
<em>; Ansonsten wurde die Taste losgelassen.</em>
Send {LButton up}   <em>; Die linke Maustaste loslassen.</em>
SetTimer, AufTaste3Warten, off
Return

</pre>
      <br>
      <p><strong>Automatische Wiederholung einer Tastatureingabe</strong>: Bei einigen Programmen oder Spiele muss eine Taste m&ouml;glicherweise mehrmals gesendet werden (wie als w&uuml;rde die Taste gedr&uuml;ckt gehalten werden). Mit dem folgenden Beispiel wird das erreicht, indem die Leertaste mehrmals gesendet wird, w&auml;hrend die zweite Joystick-Taste gedr&uuml;ckt gehalten wird.</p>
      <pre>Joy2::
Send {Space down}   <em>; H&auml;lt die Leertaste gedr&uuml;ckt.</em>
SetTimer, WaitForJoy2, <strong>30</strong>  <em>; Reduziert die Zahl <strong>30</strong> auf 20 oder 10, um die Taste schneller zu senden. Erh&ouml;ht sie, um die Taste langsamer zu senden.</em>
Return

AufJoy2Warten:
If not GetKeyState("Joy2")  <em>; Die Taste wurde losgelassen.</em>
{
    Send {Space up}  <em>; Leertaste loslassen.</em>
    SetTimer, AufJoy2Warten, off  <em>; &Uuml;berwachung der Taste stoppen.</em>
    Return
}
<em>; Da kein "Return" erfolgt, wird die Taste weiterhin gedr&uuml;ckt gehalten.</em>
Send {Space down}  <em>; Eine andere Leertaste senden.</em>
Return</pre>
      <p><strong>Kontextabh&auml;ngige Joystick-Tasten</strong>: Die Direktiven <a href="../commands/_IfWinActive.htm">#IfWinActive/Exist</a> k&ouml;nnen verwendet werden, damit bestimmte Joystick-Tasten unterschiedliche Aktionen je nach Typ des aktiven oder vorhandenen Fensters durchf&uuml;hren.</p>
      <p><strong>Joystick als Maus verwenden</strong>: Das <a href="../scripts/JoystickMouse.htm">Joystick-zu-Maus-Script</a> wandelt ein Joystick durch Neubelegung der Tasten und Achsen-Steuerung in eine Maus um.</p>
      <h2 id="axis">Mit einer Joystick-Achse oder einem Rundblickschalter Tastatureingaben oder Mausklicks senden</h2>
      <p>Damit ein Script auf die Bewegung einer Joystick-Achse oder des Rundblickschalters reagiert, verwendet <a href="../commands/SetTimer.htm">SetTimer</a> und <a href="../commands/GetKeyState.htm">GetKeyState</a>. Im folgenden Beispiel verhalten sich die X- und Y-Achsen des Joysticks wie die Pfeiltasten auf der Tastatur (links, rechts, oben und unten):</p>
      <pre>#Persistent  <em>; H&auml;lt das Script aufrecht, bis der Benutzer es direkt beendet.</em>
<a href="../commands/SetTimer.htm">SetTimer</a>, Achsen&uuml;berwachung, 5
Return

Achsen&uuml;berwachung:
<a href="../commands/GetKeyState.htm">GetKeyState</a>, JoyX, JoyX  <em>; Position der X-Achse ermitteln.</em>
GetKeyState, JoyY, JoyY  <em>; Position der Y-Achse ermitteln.</em>
VorherGedr&uuml;ckteTaste = %Gedr&uuml;ckteTaste%  <em>; VorherGedr&uuml;ckteTaste enth&auml;lt nun die Taste, die vorher gedr&uuml;ckt wurde (falls vorhanden).</em>

If JoyX &gt; 70
    Gedr&uuml;ckteTaste = Right
Else If JoyX &lt; 30
    Gedr&uuml;ckteTaste = Left
Else If JoyY &gt; 70
    Gedr&uuml;ckteTaste = Down
Else If JoyY &lt; 30
    Gedr&uuml;ckteTaste = Up
Else
    Gedr&uuml;ckteTaste =

If Gedr&uuml;ckteTaste = %VorherGedr&uuml;ckteTaste%  <em>; Die richtige Taste wird bereits gedr&uuml;ckt (oder es ist keine Taste notwendig).</em>
    Return  <em>; Nichts machen.</em>

<em>; Ansonsten die vorherige Taste loslassen und neue Taste dr&uuml;cken:</em>
SetKeyDelay -1  <em>; Verhindert eine Verz&ouml;gerung zwischen den Tastatureingaben.</em>
If VorherGedr&uuml;ckteTaste   <em>; Vorherige Taste verf&uuml;gbar, die losgelassen werden kann.</em>
    Send, {%VorherGedr&uuml;ckteTaste% up}  <em>; Loslassen.</em>
If Gedr&uuml;ckteTaste   <em>; Taste verf&uuml;gbar, die gedr&uuml;ckt werden kann.</em>
    Send, {%Gedr&uuml;ckteTaste% down}  <em>; Dr&uuml;cken.</em>
Return</pre>
      <p>&nbsp;</p>
      <p>Im folgenden Beispiel verh&auml;lt sich der Rundblickschalter des Joysticks wie die Pfeiltasten auf der Tastatur (links, rechts, oben und unten):</p>
      <pre>#Persistent  <em>; H&auml;lt das Script aufrecht, bis der Benutzer es direkt beendet.</em>
SetTimer, POV&Uuml;berwachung, 5
Return

POV&Uuml;berwachung:
GetKeyState, POV, JoyPOV  <em>; Position der POV-Steuerung ermitteln.</em>
VorherGedr&uuml;ckteTaste = %Gedr&uuml;ckteTaste%  <em>; VorherGedr&uuml;ckteTaste enth&auml;lt nun die Taste, die vorher gedr&uuml;ckt wurde (falls vorhanden).</em>

<em>; Einige Joysticks haben m&ouml;glicherweise eine reibungslose/stetige POV anstelle eines POVs in regelm&auml;&szlig;igen Abst&auml;nden.
; Damit alle unterst&uuml;tzt werden, verwendet einen Bereich:</em>
If POV &lt; 0   <em>; Keine Achse zu melden</em>
    Gedr&uuml;ckteTaste =
Else If POV &gt; 31500                 <em>; 315 bis 360 Grad: Nach vorne gerichtet</em>
    Gedr&uuml;ckteTaste = Up
Else If POV between 0 and 4500      <em>; 0 bis 45 Grad: Nach vorne gerichtet</em>
    Gedr&uuml;ckteTaste = Up
Else If POV between 4501 and 13500  <em>; 45 bis 135 Grad: Nach rechts gerichtet</em>
    Gedr&uuml;ckteTaste = Right
Else If POV between 13501 and 22500 <em>; 135 bis 225 Grad: Nach hinten gerichtet</em>
    Gedr&uuml;ckteTaste = Down
Else                                <em>; 225 bis 315 Grad: Nach links gerichtet</em>
    Gedr&uuml;ckteTaste = Left

If Gedr&uuml;ckteTaste = %VorherGedr&uuml;ckteTaste%  <em>; Die richtige Taste wird bereits gedr&uuml;ckt (oder es ist keine Taste notwendig).</em>
    Return  <em>; Nichts machen.</em>

<em>; Ansonsten die vorherige Taste loslassen und neue Taste dr&uuml;cken:</em>
SetKeyDelay -1  <em>; Verhindert eine Verz&ouml;gerung zwischen den Tastatureingaben.</em>
If VorherGedr&uuml;ckteTaste   <em>; Vorherige Taste verf&uuml;gbar, die losgelassen werden kann.</em>
    Send, {%VorherGedr&uuml;ckteTaste% up}  <em>; Loslassen.</em>
If Gedr&uuml;ckteTaste   <em>; Taste verf&uuml;gbar, die gedr&uuml;ckt werden kann.</em>
    Send, {%Gedr&uuml;ckteTaste% down}  <em>; Dr&uuml;cken.</em>
Return</pre>
      <p>&nbsp;</p>
      <p><strong>Automatische Wiederholung einer Tastatureingabe</strong>: Die beiden oberen Beispiele k&ouml;nnen so ge&auml;ndert werden, dass die Taste mehrmals gesendet wird, anstatt sie gedr&uuml;ckt zuhalten (d. h., dass der physische Tastendruck simuliert wird). Ersetzt daf&uuml;r die folgende Zeile:</p>
      <pre>Return  <em>; Nichts machen.</em></pre>
      <p>MIT:</p>
      <pre>{
    If Gedr&uuml;ckteTaste
        Send, {%Gedr&uuml;ckteTaste% down}  <em>; Automatische Wiederholung der Taste.</em>
    Return
}</pre>
      <h2 id="Remarks">Bemerkungen</h2>
      <p>Es kann ein beliebiger Joystick verwendet werden, indem der Taste oder dem Achsennamen die Nummer des Joysticks vorangestellt wird. Zum Beispiel ist <code>2Joy1</code> die erste Taste des zweiten Joysticks.</p>
      <p>Besucht das <a href="http://www.autohotkey.com/forum/">AutoHotkey-Forum</a> f&uuml;r weitere n&uuml;tzliche Joystick-Scripts. Mit Schl&uuml;sselw&ouml;rtern wie <em>Joystick und GetKeyState und Send</em> k&ouml;nnen interessante Themen gefunden werden.</p>
      <h2>Verwandte Befehle</h2>
      <p><a href="../scripts/JoystickMouse.htm">Joystick-zu-Maus-Script (ein Joystick als Maus verwenden)</a><br>
        <a href="../KeyList.htm#Joystick">Liste mit Tasten, Achsen und Steuerungen des Joysticks</a><br>
        <a href="../commands/GetKeyState.htm">GetKeyState</a><br>
        <a href="Remap.htm">Tastatur und Maus neubelegen</a></p>
    </div>
  </section>
</div>
</body>
</html>