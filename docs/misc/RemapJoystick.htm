<!DOCTYPE HTML>
<html>
<head>
<title>Joystick mit Tastatur oder Maus neu belegen</title>
<meta name="keywords" content="Grundlage">
<meta name="description" content="Bringt den Joystick mit dieser freien Scriptsprache dazu, Tastatureingaben und Mausklicks zu senden. Ermöglicht auch, einen Joystick als Maus zu verwenden.">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../navbar/NavScript.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <article>
      <h1>Joystick mit Tastatur oder Maus neu belegen</h1>
      <h2>Inhaltsverzeichnis</h2>
      <ul>
        <li><a href="#imp">Wichtige Hinweise</a></li>
        <li><a href="#button">Mit einer Joystick-Taste Tastatureingaben oder Mausklicks senden</a></li>
        <li><a href="#axis">Mit einer Joystick-Achse oder einem Rundblickschalter Tastatureingaben oder Mausklicks senden</a></li>
        <li><a href="#Remarks">Bemerkungen</a></li>
      </ul>
      <h2 id="imp">Wichtige Hinweise</h2>
      <ul>
        <li>Obwohl eine Joystick-Taste oder -Achse mit einer Taste oder Maustaste neu belegt werden kann, ist es nicht möglich, diese Taste/Achse mit anderen Joystick-Tasten oder -Achsen neu zubelegen. Das wäre nur mithilfe eines Joystick-Emulators wie <a href="http://www.autohotkey.com/forum/topic50596.html">PPJoy</a> möglich.</li>
        <li>AutoHotkey identifiziert jede Joystick-Taste mit einer eindeutigen Zahl zwischen 1 und 32. Um diese Zahlen zu ermitteln, verwendet den <a href="../scripts/JoystickTest.htm">Joystick-Testscript</a>.</li>
      </ul>
      <h2 id="button">Mit einer Joystick-Taste Tastatureingaben oder Mausklicks senden</h2>
      <p>Hierbei sind drei Ansätze, von einfach bis komplex. Die komplexeste Methode funktioniert mit der höchsten Wahrscheinlichkeit (z. B. bei Spiele, in denen eine Taste oder Maustaste gedrückt gehalten werden muss).</p>
      <p><strong>Methode #1</strong>: Diese Methode sendet einfache Tastatureingaben und Mausklicks. Zum Beispiel:</p>
      <pre>Joy1::<a href="../commands/Send.htm">Send</a> {Left}  <em>; Mit der Taste #1 die linke Pfeiltaste senden.</em>
Joy2::<a href="../commands/Click.htm">Click</a>  <em>; Mit der Taste #2 die linke Maustaste senden.</em>
Joy3::Send a{Esc}{Space}{Enter}  <em>; Mit der Taste #3 die Taste "a" gefolgt von Escape, Leerzeichen und Enter senden.</em>
Joy4::Mit freundlichen Grüßen,{Enter}John Smith  <em>; Mit der Taste #4 eine zweizeilige Signatur senden.</em></pre>
      <p>Damit eine Taste mehr als einen Befehl senden kann, setzt den ersten Befehl <em>unter</em> den Tastennamen und fügt als letzten Befehl ein <a href="../commands/Return.htm">Return</a> hinzu. Zum Beispiel:</p>
      <pre>Joy5::
Run Notepad
WinWait Unbenannt - Editor
WinActivate
Send Das ist der Text, der im Editor erscheinen wird.{Enter}
Return</pre>
      <p>In der <a href="../KeyList.htm">Tastenliste</a> können alle Tastennamen der Tastatur, Maus und des Joysticks gefunden werden.</p>
      <br>
      <p><strong>Methode #2</strong>: Diese Methode ist notwendig, wenn eine Taste oder Maustaste gedrückt gehalten werden muss, während eine Joystick-Taste gedrückt gehalten wird. Im folgenden Beispiel verhält sich die zweite Joystick-Taste wie die NACH-LINKS-Taste:</p>
      <pre>Joy2::
Send {Left down}  <em>; Hält die linke Pfeiltaste gedrückt.</em>
<a href="../commands/KeyWait.htm">KeyWait</a> Joy2  <em>; Wartet, bis die Joystick-Taste losgelassen wird.</em>
Send {Left up}  <em>; Lässt die linke Pfeiltaste los.</em>
Return</pre>
      <br>
      <p><strong>Methode #3</strong>: Diese Methode ist notwendig, wenn mehr als ein Joystick-Hotkey von Methode #2 vorhanden ist und solche Hotkeys gleichzeitig gedrückt gehalten oder losgelassen werden müssen. Im folgenden Beispiel verhält sich die dritte Joystick-Taste wie die linke Maustaste:</p>
      <pre>Joy3::
Send {LButton down}   <em>; Hält die linke Maustaste gedrückt.</em>
SetTimer, AufTaste3Warten, 10
Return

AufTaste3Warten:
If <a href="../Functions.htm#GetKeyState">GetKeyState</a>("Joy3")  <em>; Falls die Taste weiterhin gedrückt gehalten wird, warten.</em>
    Return
<em>; Ansonsten wurde die Taste losgelassen.</em>
Send {LButton up}   <em>; Die linke Maustaste loslassen.</em>
SetTimer, AufTaste3Warten, off
Return

</pre>
      <br>
      <p><strong>Automatische Wiederholung einer Tastatureingabe</strong>: Bei einigen Programmen oder Spiele muss eine Taste möglicherweise mehrmals gesendet werden (wie als würde die Taste gedrückt gehalten werden). Mit dem folgenden Beispiel wird das erreicht, indem die Leertaste mehrmals gesendet wird, während die zweite Joystick-Taste gedrückt gehalten wird.</p>
      <pre>Joy2::
Send {Space down}   <em>; Hält die Leertaste gedrückt.</em>
SetTimer, WaitForJoy2, <strong>30</strong>  <em>; Reduziert die Zahl <strong>30</strong> auf 20 oder 10, um die Taste schneller zu senden. Erhöht sie, um die Taste langsamer zu senden.</em>
Return

AufJoy2Warten:
If not GetKeyState("Joy2")  <em>; Die Taste wurde losgelassen.</em>
{
    Send {Space up}  <em>; Leertaste loslassen.</em>
    SetTimer, AufJoy2Warten, off  <em>; Überwachung der Taste stoppen.</em>
    Return
}
<em>; Da kein "Return" erfolgt, wird die Taste weiterhin gedrückt gehalten.</em>
Send {Space down}  <em>; Eine andere Leertaste senden.</em>
Return</pre>
      <p><strong>Kontextabhängige Joystick-Tasten</strong>: Die Direktiven <a href="../commands/_IfWinActive.htm">#IfWinActive/Exist</a> können verwendet werden, damit bestimmte Joystick-Tasten unterschiedliche Aktionen je nach Typ des aktiven oder vorhandenen Fensters durchführen.</p>
      <p><strong>Joystick als Maus verwenden</strong>: Das <a href="../scripts/JoystickMouse.htm">Joystick-zu-Maus-Script</a> wandelt ein Joystick durch Neubelegung der Tasten und Achsen-Steuerung in eine Maus um.</p>
      <h2 id="axis">Mit einer Joystick-Achse oder einem Rundblickschalter Tastatureingaben oder Mausklicks senden</h2>
      <p>Damit ein Script auf die Bewegung einer Joystick-Achse oder des Rundblickschalters reagiert, verwendet <a href="../commands/SetTimer.htm">SetTimer</a> und <a href="../commands/GetKeyState.htm">GetKeyState</a>. Im folgenden Beispiel verhalten sich die X- und Y-Achsen des Joysticks wie die Pfeiltasten auf der Tastatur (links, rechts, oben und unten):</p>
      <pre>#Persistent  <em>; Hält das Script aufrecht, bis der Benutzer es direkt beendet.</em>
<a href="../commands/SetTimer.htm">SetTimer</a>, Achsenüberwachung, 5
Return

Achsenüberwachung:
<a href="../commands/GetKeyState.htm">GetKeyState</a>, JoyX, JoyX  <em>; Position der X-Achse ermitteln.</em>
GetKeyState, JoyY, JoyY  <em>; Position der Y-Achse ermitteln.</em>
VorherGedrückteTaste = %GedrückteTaste%  <em>; VorherGedrückteTaste enthält nun die Taste, die vorher gedrückt wurde (falls vorhanden).</em>

If JoyX &gt; 70
    GedrückteTaste = Right
Else If JoyX &lt; 30
    GedrückteTaste = Left
Else If JoyY &gt; 70
    GedrückteTaste = Down
Else If JoyY &lt; 30
    GedrückteTaste = Up
Else
    GedrückteTaste =

If GedrückteTaste = %VorherGedrückteTaste%  <em>; Die richtige Taste wird bereits gedrückt (oder es ist keine Taste notwendig).</em>
    Return  <em>; Nichts machen.</em>

<em>; Ansonsten die vorherige Taste loslassen und neue Taste drücken:</em>
SetKeyDelay -1  <em>; Verhindert eine Verzögerung zwischen den Tastatureingaben.</em>
If VorherGedrückteTaste   <em>; Vorherige Taste verfügbar, die losgelassen werden kann.</em>
    Send, {%VorherGedrückteTaste% up}  <em>; Loslassen.</em>
If GedrückteTaste   <em>; Taste verfügbar, die gedrückt werden kann.</em>
    Send, {%GedrückteTaste% down}  <em>; Drücken.</em>
Return</pre>
      <p>&nbsp;</p>
      <p>Im folgenden Beispiel verhält sich der Rundblickschalter des Joysticks wie die Pfeiltasten auf der Tastatur (links, rechts, oben und unten):</p>
      <pre>#Persistent  <em>; Hält das Script aufrecht, bis der Benutzer es direkt beendet.</em>
SetTimer, POVÜberwachung, 5
Return

POVÜberwachung:
GetKeyState, POV, JoyPOV  <em>; Position der POV-Steuerung ermitteln.</em>
VorherGedrückteTaste = %GedrückteTaste%  <em>; VorherGedrückteTaste enthält nun die Taste, die vorher gedrückt wurde (falls vorhanden).</em>

<em>; Einige Joysticks haben möglicherweise eine reibungslose/stetige POV anstelle eines POVs in regelmäßigen Abständen.
; Damit alle unterstützt werden, verwendet einen Bereich:</em>
If POV &lt; 0   <em>; Keine Achse zu melden</em>
    GedrückteTaste =
Else If POV &gt; 31500                 <em>; 315 bis 360 Grad: Nach vorne gerichtet</em>
    GedrückteTaste = Up
Else If POV between 0 and 4500      <em>; 0 bis 45 Grad: Nach vorne gerichtet</em>
    GedrückteTaste = Up
Else If POV between 4501 and 13500  <em>; 45 bis 135 Grad: Nach rechts gerichtet</em>
    GedrückteTaste = Right
Else If POV between 13501 and 22500 <em>; 135 bis 225 Grad: Nach hinten gerichtet</em>
    GedrückteTaste = Down
Else                                <em>; 225 bis 315 Grad: Nach links gerichtet</em>
    GedrückteTaste = Left

If GedrückteTaste = %VorherGedrückteTaste%  <em>; Die richtige Taste wird bereits gedrückt (oder es ist keine Taste notwendig).</em>
    Return  <em>; Nichts machen.</em>

<em>; Ansonsten die vorherige Taste loslassen und neue Taste drücken:</em>
SetKeyDelay -1  <em>; Verhindert eine Verzögerung zwischen den Tastatureingaben.</em>
If VorherGedrückteTaste   <em>; Vorherige Taste verfügbar, die losgelassen werden kann.</em>
    Send, {%VorherGedrückteTaste% up}  <em>; Loslassen.</em>
If GedrückteTaste   <em>; Taste verfügbar, die gedrückt werden kann.</em>
    Send, {%GedrückteTaste% down}  <em>; Drücken.</em>
Return</pre>
      <p>&nbsp;</p>
      <p><strong>Automatische Wiederholung einer Tastatureingabe</strong>: Die beiden oberen Beispiele können so geändert werden, dass die Taste mehrmals gesendet wird, anstatt sie gedrückt zuhalten (d. h., dass der physische Tastendruck simuliert wird). Ersetzt dafür die folgende Zeile:</p>
      <pre>Return  <em>; Nichts machen.</em></pre>
      <p>MIT:</p>
      <pre>{
    If GedrückteTaste
        Send, {%GedrückteTaste% down}  <em>; Automatische Wiederholung der Taste.</em>
    Return
}</pre>
      <h2 id="Remarks">Bemerkungen</h2>
      <p>Es kann ein beliebiger Joystick verwendet werden, indem der Taste oder dem Achsennamen die Nummer des Joysticks vorangestellt wird. Zum Beispiel ist <code>2Joy1</code> die erste Taste des zweiten Joysticks.</p>
      <p>Besucht das <a href="http://www.autohotkey.com/forum/">AutoHotkey-Forum</a> für weitere nützliche Joystick-Scripts. Mit Schlüsselwörtern wie <em>Joystick und GetKeyState und Send</em> können interessante Themen gefunden werden.</p>
      <h2>Verwandte Befehle</h2>
      <p><a href="../scripts/JoystickMouse.htm">Joystick-zu-Maus-Script (ein Joystick als Maus verwenden)</a><br><a href="../KeyList.htm#Joystick">Liste mit Tasten, Achsen und Steuerungen des Joysticks</a><br><a href="../commands/GetKeyState.htm">GetKeyState</a><br><a href="Remap.htm">Tastatur und Maus neubelegen</a></p>
    </article>
  </section>
</div>
</body>
</html>
