<!DOCTYPE HTML>
<html>
<head>
<title>Threads</title>
<meta name="keywords" content="Grundlage">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../navbar/NavScript.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <article>
      <h1>Threads</h1>
      <p>Der <em>aktuelle Thread</em>, auch bezeichnet als Ausführungsablauf, wird vom aktuellsten Ereignis aufgerufen; dazu zählen <a href="../Hotkeys.htm">Hotkeys</a>, <a href="../commands/SetTimer.htm">SetTimer-Subroutinen</a>, <a href="../commands/Menu.htm">benutzerdefinierte Menüpunkte</a> und <a href="../commands/Gui.htm#Events">GUI-Ereignisse</a>. Der <em>aktuelle Thread</em> kann Befehle ausführen, die in der eigenen oder in einer anderen Subroutine, aufgerufen durch die eigene Subroutine, enthalten sind.</p>
      <p>AutoHotkey ist eigentlich nicht in der Lage, mehrere Threads gleichzeitig auszuführen, trotzdem wird dieses Verhalten teilweise nachgeahmt: Sobald ein zweiter Thread gestartet wird (wenn beispielsweise ein weiterer Hotkey gedrückt wird, während der vorherige noch ausgeführt wird), wird der <em>aktuelle Thread</em> unterbrochen (vorübergehend angehalten), damit der neue Thread zum <em>aktuellen Thread</em> wird. Sobald ein dritter Thread gestartet wird, während der zweite noch ausgeführt wird, dann ist sowohl der zweite als auch der erste Thread im Ruhezustand, und so weiter.</p>
      <p>Sobald der <em>aktuelle Thread</em> endet, wird der gerade unterbrochene Thread fortgesetzt und so weiter, bis alle Threads abgeschlossen sind. Wenn ein Thread fortgesetzt wird, werden seine Einstellungen wie <a href="ErrorLevel.htm">ErrorLevel</a> und <a href="../commands/SendMode.htm">SendMode</a> automatisch auf die Werte wiederhergestellt, die vor der Unterbrechung galten; das heißt, dass ein Thread keine Nebeneffekte von der Unterbrechung erfährt (außer bei einer möglichen Änderung im <a href="../commands/WinActivate.htm">aktiven Fenster</a>).</p>
      <p>Hinweis: Der Befehl bzw. Menüpunkt <a href="../commands/KeyHistory.htm">KeyHistory</a> zeigt an, wie viele Threads im unterbrochenen Zustand sind. Zudem verdeutlicht der Befehl bzw. Menüpunkt <a href="../commands/ListHotkeys.htm">ListHotkeys</a>, welche Hotkeys Threads haben.</p>
      <p>Ein Script kann mehrere Dialogfenster wie <a href="../commands/MsgBox.htm">MsgBox</a>, <a href="../commands/InputBox.htm">InputBox</a>, <a href="../commands/FileSelectFile.htm">FileSelectFile</a> und <a href="../commands/FileSelectFolder.htm">FileSelectFolder</a> gleichzeitig anzeigen. Das wird erreicht, indem ein neuer Thread ausgeführt wird (via <a href="../Hotkeys.htm">Hotkey</a>, <a href="../commands/SetTimer.htm">zeitlich festgelegte Subroutine</a>, <a href="../commands/Menu.htm">benutzerdefinierter Menüpunkt</a> und so weiter), während ein vorheriger Thread bereits ein Dialogfenster anzeigt.</p>
      <p>Standardmäßig kann eine bereits laufende <a href="../Hotkeys.htm">Hotkey</a> oder <a href="../Hotstrings.htm">Hotstring</a>-Subroutine nicht zum zweiten Mal ausgeführt werden. Verwendet <a href="../commands/_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a>, um dieses Verhalten zu ändern.</p>
      <h2>Thread-Priorität</h2>
      <p>Jeder Thread <a href="../Hotkeys.htm">(Hotkey</a>, <a href="../commands/SetTimer.htm">zeitlich festgelegte Subroutine</a>, <a href="../commands/Menu.htm">benutzerdefinierter Menüpunkt</a> und so weiter) mit einer Priorität niedriger als die Priorität des <em>aktuellen Threads</em> kann nicht unterbrochen werden. In dieser Zeit werden solche Timer nicht ausgeführt, dabei kann der Benutzer weder einen Thread erstellen noch einen zwischenspeichern (z. B. durch Drücken eines <a href="../Hotkeys.htm">Hotkeys</a> oder einer <a href="../commands/GuiControls.htm#Button">GUI-Schaltfläche</a>). Deshalb sollten Threads mit hoher Priorität so schnell wie möglich zum Abschluss kommen oder <a href="../commands/Critical.htm">Critical</a> anstelle der hohen Priorität verwenden.</p>
      <p>Die Standard-Priorität ist 0. Alle Threads verwenden die Standard-Priorität, es sei denn, sie wird durch eine der folgenden Methoden geändert:<br></p>
      <ul>
        <li>Die Priorität einer zeitlich festgelegten Subroutine wird mittels <a href="../commands/SetTimer.htm">SetTimer</a> geändert.</li>
        <li>Die Priorität eines Hotkeys wird mithilfe des <a href="../commands/Hotkey.htm">Hotkey</a>-Befehls geändert.</li>
        <li>Die Priorität eines Hotstrings wird mithilfe des <a href="../Hotstrings.htm">Hotstring</a>-Befehls oder der <a href="../commands/_Hotstring.htm">#Hotstring</a>-Direktive geändert.&nbsp;</li>
        <li>Die Priorität eines benutzerdefinierten Menüpunkts wird mithilfe des <a href="../commands/Menu.htm">Menu</a>-Befehls geändert.</li>
        <li>Der <em>aktuelle Thread</em> bestimmt seine eigene Priorität mithilfe des <a href="../commands/Thread.htm">Thread</a>-Befehls.</li>
      </ul>
      <p>Die <a href="../commands/OnExit.htm">OnExit</a>-Subroutine (falls vorhanden) wird bei Bedarf immer ausgeführt, unabhängig von der Priorität des <em>aktuellen Threads</em>.</p>
    </article>
  </section>
</div>
<script type="text/javascript">WriteFooter(1);</script>
</body>
</html>
