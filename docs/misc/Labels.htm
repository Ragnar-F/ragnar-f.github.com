<!DOCTYPE HTML>
<html>
<head>
<title>Label</title>
<meta name="keywords" content="Grundlage">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../navbar/NavScript.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <article>
      <h1>Label</h1>
      <p>Ein Label identifiziert eine Codezeile. Es dient als Ziel von <a href="../commands/Goto.htm">Goto</a> oder formt eine <a href="../commands/Gosub.htm">Subroutine</a>.</p>
      <pre class="Syntax">Labelname:</pre>
      <p>Die Zeile muss einen Labelnamen mit nachfolgendem Doppelpunkt enthalten, damit das Label erstellt wird. Neben Leerzeichen und Kommentare darf sich kein anderer Code auf derselben Zeile befinden.</p>
      <p><strong>Namen:</strong> Labelnamen sind nicht von der Groß- und Kleinschreibung abhängig und bestehen aus beliebigen Zeichen, außer Leerzeichen, Tabulator, Komma und <a href="../commands/_EscapeChar.htm">Escapezeichen</a> (`). Allerdings ist es aufgrund von Stilkonventionen generell besser, Variablen nur mit Buchstaben, Zahlen und Unterstriche zu benennen (zum Beispiel: <em>EigenesListView</em>, <em>Menü_Datei_Öffnen</em> und <em>outer_loop</em>). Labelnamen dürfen nur einmal im ganzen Script vorkommen.</p>
      <p><strong>Ziel:</strong> Das Ziel eines Labels ist die nächste Zeile mit ausführbarem Code. Ausführbarer Code beinhaltet Befehle, Zuweisungen, <a href="../Variables.htm#Expressions">Ausdrücke</a> und <a href="../commands/Block.htm">Blöcke</a>, aber nicht Direktiven, Label, Hotkeys oder Hotstrings. Im folgenden Beispiel verweisen <code>run_notepad</code> und <code>#n</code> auf dieselbe <code>Run</code>-Zeile:</p>
      <pre>run_notepad:
#n::
    Run Notepad
    return
</pre>
      <p><strong>Ausführung:</strong> Labels haben wie Direktiven keine Wirkung, wenn sie während einer normalen Ausführung erreicht werden. Im folgenden Beispiel wird eine MsgBox zweimal angezeigt - einmal beim Ausführen der Subroutine durch <a href="../commands/Gosub.htm">Gosub</a> und nochmals, nachdem die Subroutine ihr Return erreicht hat:</p>
      <pre>gosub Label1

Label1:
MsgBox <a href="../Variables.htm#ThisLabel">%A_ThisLabel%</a>
return</pre>
      <h2>Subroutinen</h2>
      <p>Eine Subroutine ist ein Teil des Codes, der <em>aufgerufen</em> werden kann, um eine bestimmte Aufgabe durchzuführen. Die Ausführung einer Subroutine beginnt beim Ziel eines Labels und endet, wenn ein <a href="../commands/Return.htm">Return</a> oder <a href="../commands/Exit.htm">Exit</a> erreicht wird. Da das Ende einer Subroutine abhängig von der Ablaufsteuerung ist, kann jedes Label als Goto-Ziel und als Beginn einer Subroutine fungieren.</p>
      <h2>Dynamische Label</h2>
      <p>Viele Befehle, die einen Labelnamen akzeptieren, akzeptieren auch einen <a href="../Variables.htm">Variablen</a>verweis wie %EigenesLabel%. In diesem Fall wird der Name, der in der Variable enthalten ist, als Ziel verwendet. Allerdings ist dadurch die Performance ein wenig beeinträchtigt, weil das Ziellabel jedes Mal neu eingelesen werden muss, anstatt nur einmal, wenn das Script geladen wird.</p>
      <h2>Hotkeys und Hotstrings</h2>
      <p><a href="../Hotkeys.htm">Hotkey-</a> und <a href="../Hotstrings.htm#label">Hotstring</a>-Label sind auch gültige Ziele für <a href="../commands/Goto.htm">Goto</a>, <a href="../commands/Gosub.htm">Gosub</a> und andere Befehle. Wenn ein Hotkey oder Hotstring jedoch mehrere <a href="../commands/_IfWinActive.htm">Varianten</a> hat, dann wird die oberste Variante im Script verwendet. Alle Modifikatoren des Hotkeys oder Optionen des Hotstrings gehören auch zum Labelnamen, aber die zwei Doppelpunkte (::) werden weggelassen.</p>
      <h2>Benannte Schleifen</h2>
      <p>Ein Label kann auch dazu verwendet werden, eine Schleife für die Befehle <a href="../commands/Continue.htm">Continue</a> und <a href="../commands/Break.htm">Break</a> zu identifizieren. Dadurch kann das Script einfach eine beliebige Anzahl an verschachtelten Schleifen fortsetzen oder unterbrechen.</p>
      <h2>Verwandte Befehle</h2>
      <p><a href="../Functions.htm#IsLabel">IsLabel()</a>, <a href="../Variables.htm#ThisLabel">A_ThisLabel</a>, <a href="../commands/Gosub.htm">Gosub</a>, <a href="../commands/Goto.htm">Goto</a>, <a href="../commands/OnExit.htm">OnExit</a>, <a href="../commands/SetTimer.htm">SetTimer</a>, <a href="../commands/Hotkey.htm">Hotkey</a>, <a href="../commands/Gui.htm#Labels">Gui-Ereignisse</a>, <a href="../commands/Gui.htm#label">g-Label</a>, <a href="Clipboard.htm#OnClipboardChange">OnClipboardChange</a></p>
    </article>
  </section>
</div>
<script type="text/javascript">WriteFooter(1);</script>
</body>
</html>
