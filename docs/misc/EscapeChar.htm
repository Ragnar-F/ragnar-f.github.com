<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Schutzsequenzen</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<link href="../css/default.css" rel="stylesheet" type="text/css">
</head>
<body>
<script src="../../NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<h1>Schutzsequenzen</h1>

<p>Mit dem Schutzzeichen ` (Gravis oder Akzent) wird kenntlich gemacht, dass das nachfolgende Zeichen anders als normal interpretiert werden soll.</p>

<table class="info">
  <tbody>
<tr>
    <th>Das eingeben </th>
    <th>um das zu erhalten </th>
  </tr>
  <tr>
    <td width="15%">`,</td>
    <td width="85%">, (direktes Komma). <strong>Hinweis:</strong> Kommas, die im letzten 
Parameter eines Befehls angegeben werden, m&uuml;ssen nicht mit einem 
Schutzzeichen vorangestellt werden, weil das Programm diese Kommas 
direkt behandelt. Das Gleiche gilt auch f&uuml;r alle Parameter der <a href="../commands/MsgBox.htm">MsgBox</a>, weil es eine intelligente Komma-Handhabung hat.</td>
  </tr>
  <tr>
    <td>`%</td>
    <td>% (direktes Prozentzeichen)</td>
  </tr>
  <tr>
    <td>``</td>
    <td>` (direktes Akzent; d. h. zwei aufeinanderfolgende Schutzzeichen ergeben ein direktes Zeichen)</td>
  </tr>
  <tr>
    <td>`;</td>
    <td>; (direktes Semikolon). <strong>Hinweis:</strong> <u>Nur</u> 
erforderlich, wenn ein Semikolon ein Leerzeichen oder Tabulator davor 
hat. Ist das nicht der Fall, dann wird es korrekt erkannt, ohne dass ein
 Schutzzeichen vorangestellt werden muss.</td>
  </tr>
  <tr>
    <td>`::</td>
    <td>:: (direkt vorhandenes Doppelpunkt-Paar). Seit v1.0.40 muss diesem Paar nicht l&auml;nger ein Schutzzeichen vorangestellt werden.</td>
  </tr>
  <tr>
    <td>`n</td>
    <td>Neuzeile (Zeilenvorschub/LF)</td>
  </tr>
  <tr>
    <td>`r</td>
    <td>Zeilenumschaltung (CR)</td>
  </tr>
  <tr>
    <td>`b</td>
    <td>R&uuml;cktaste</td>
  </tr>
  <tr>
    <td>`t</td>
    <td>Tabulator (die h&auml;ufigere verwendete horizontale Variante)</td>
  </tr>
  <tr>
    <td>`v</td>
    <td> vertikaler Tabulator - entspricht dem ASCII-Wert 11. Kann auch in einigen Anwendungen mit Steuerung+K erzeugt werden.</td>
  </tr>
  <tr>
    <td>`a</td>
    <td>Alarm (Glocke) - entspricht dem ASCII-Wert 7. Kann auch in einigen Anwendungen mit Steuerung+G erzeugt werden.</td>
  </tr>
  <tr>
    <td>`f</td>
    <td>Seitenvorschub - entspricht dem ASCII-Wert 12. Kann auch in einigen Anwendungen mit Steuerung+L erzeugt werden.</td>
  </tr>
  <tr>
    <td>Send</td>
    <td>Wenn <a href="../commands/Send.htm">Send-Befehle</a> oder <a href="../Hotstrings.htm">Hotstrings</a> in ihrem Standardmodus verwendet werden (nicht raw), dann haben Zeichen wie {}^!+# eine besondere Bedeutung. Umschlie&szlig;t sie deshalb mit Klammern, damit sie direkt verwendet werden k&ouml;nnen. Zum Beispiel: Send {<strong>^</strong>}{<strong>!</strong>}{<strong>{</strong>}</td>
  </tr>
  <tr>
    <td>""</td>
    <td>Innerhalb eines <a href="../Variables.htm#Expressions">Ausdrucks</a> mit direktem String kann ein direktes Anf&uuml;hrungszeichen erzeugt werden, wenn zwei aufeinanderfolgende Anf&uuml;hrungszeichen verwendet werden. Zum Beispiel: Var := "Die Farbe ""Rot"" wurde gefunden."</td>
  </tr>
</tbody></table>

<h3>Beispiele</h3>
<pre>MsgBox Zeile 1<strong>`n</strong>Zeile 2</pre>
</body></html>