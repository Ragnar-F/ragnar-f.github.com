<!DOCTYPE HTML>
<html>
<head>
<title>Numpad-Taste 000</title>
<meta name="keywords" content="Script">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../navbar/NavScript.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <article>
      <h1>Numpad-Taste 000</h1>
      <p>Dieses Beispiel-Script wandelt die 000-Sondertaste bei einigen Ziffernblöcken in eine Gleichheitstaste. Diese Aktion kann geändert werden, wenn die Zeile "Send, =" je nach Bedarf mit einer anderen Zeile ersetzt wird. </p>
      <p><a href="Numpad000.ahk">Dieses Script herunterladen</a> &nbsp;| &nbsp;<a href="index.htm">Andere Beispiel-Scripts</a> &nbsp;| &nbsp;<a href="../index.htm">Home</a></p>
      <pre class="NoIndent">#MaxThreadsPerHotkey 5  <em>; Erlaubt mehrere Threads für diesen Hotkey.</em>
$Numpad0::
#MaxThreadsPerHotkey 1
<em>; Oben: Mit einem $ wird der Hook erzwungen, wodurch eine
; Endlosschleife verhindert wird, da diese Subroutine selbst Numpad0 sendet,
; ansonsten würde sie sich selbst rekursiv aufrufen.</em>
SetBatchLines, 100 <em>; Damit wird das Script ein wenig schneller ausgeführt.</em>
DelayBetweenKeys = 30 <em>; Diesen Wert anpassen, falls es nicht funktionieren sollte.</em>
if A_PriorHotkey = %A_ThisHotkey%
{
    if A_TimeSincePriorHotkey &lt; %DelayBetweenKeys%
    {
        if Numpad0Count =
            Numpad0Count = 2 <em>; d.h. dieser Tastendruck plus vorherigen Tastendruck.</em>
        else if Numpad0Count = 0
            Numpad0Count = 2
        else
        {
            <em>; Da wir hier sind, muss Numpad0Count wie bei</em>
            <em>; vorherigen Aufrufen eine 2 sein, das heißt, dass das hier</em>
            <em>; der dritte Tastendruck ist. Daher sollte die Hotkey-Sequenz</em>
            <em>; ausgeführt werden:</em>
            Numpad0Count = 0
            Send, = <em>; ******* Die Aktion für die 000-Taste</em>
        }
        <em>; In allen obigen Fällen kehren wir ohne weitere Aktion zurück:</em>
        CalledReentrantly = y
        return
    }
}
<em>; Ansonsten ist dieses Numpad0-Ereignis das erste in der Reihe
; oder wurde zu lange nach dem ersten ausgeführt (z. B. hält
; der Benutzer die Numpad0-Taste automatisch wiederholend gedrückt,
; dass wir erlauben wollen).  Deshalb werden wir nach einer kurzen Verzögerung (während ein
; anderes Numpad0-Hotkey-Ereignis diese Subroutine
; wiederholend aufruft), die Taste senden, falls kein weiterer Aufruf
; erfolgt:</em>
Numpad0Count = 0
CalledReentrantly = n
<em>; Während dieser Ruhephase kann diese Subroutine wiederholend
; aufgerufen werden (d. h. ein simultaner "Thread", der parallel zum jetzigen
; Aufruf ausgeführt wird):</em>
Sleep, %DelayBetweenKeys%
if CalledReentrantly = y <em>; Ein anderer "Thread" hat diesen Wert geändert.</em>
{
    <em>; Da es wiederholend aufgerufen wurde, war dieses Tastenereignis das</em>
    <em>; erste in der Sequenz, daher sollte es unterdrückt werden (im System versteckt werden):</em>
    CalledReentrantly = n
    return
}
<em>; Ansonsten gehört es nicht zur Sequenz, daher werden wir es normal senden.
; Das heißt, dass die *echte* Numpad0-Taste gedrückt wurde, daher wollen
; wir den normalen Effekt:</em>
Send, {Numpad0}
return

</pre>
    </article>
  </section>
</div>
<script type="text/javascript">WriteFooter(1);</script>
</body>
</html>
