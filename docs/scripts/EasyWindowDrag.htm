<!DOCTYPE HTML>
<html>
<head>
<title>Einfache Fensterverschiebung (benötigt XP/2k/NT)</title>
<meta name="keywords" content="Script">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<link href="../static/font.css" rel="stylesheet" type="text/css" />
<script src="../static/jquery-1.11.0.min.js"type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../navbar/NavScript.js" type="text/javascript"></script>
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">WriteHeader(1);</script>
<div id="content">
  <section>
    <article>
      <h1>Einfache Fensterverschiebung (benötigt XP/2k/NT)</h1>
      <p>Normalerweise kann ein Fenster nur verschoben werden, wenn die Titelleiste angeklickt wird. Dieses Script erweitert diese Funktion, sodass jeder Punkt in einem Fenster angeklickt werden kann. Um diesen Modus zu aktivieren, haltet die Feststelltaste oder die mittlere Maustaste beim Klicken gedrückt und verschiebt das Fenster danach zur gewünschten Position. </p>
      <p><a href="EasyWindowDrag.ahk">Dieses Script herunterladen</a> &nbsp;| &nbsp;<a href="index.htm">Andere Beispiel-Scripts</a> &nbsp;| &nbsp;<a href="../index.htm">Home</a></p>
      <pre class="NoIndent"><em>; Hinweis: Die Feststelltaste oder mittlere Maustaste kann optional losgelassen werden, nachdem
; die Maustaste gedrückt wurde, anstatt die Taste die ganze Zeit gedrückt zu halten.
; Dieses Script benötigt v1.0.25+.</em>

~MButton &amp; LButton::
CapsLock &amp; LButton::
CoordMode, Mouse  <em>; Auf Bildschirm-/absolute Koordinaten wechseln.</em>
MouseGetPos, EWD_MouseStartX, EWD_MouseStartY, EWD_MouseWin
WinGetPos, EWD_OriginalPosX, EWD_OriginalPosY,,, ahk_id %EWD_MouseWin%
WinGet, EWD_WinState, MinMax, ahk_id %EWD_MouseWin%
if EWD_WinState = 0  <em>; Nur, wenn das Fenster nicht maximiert ist.</em>
    SetTimer, EWD_WatchMouse, 10 <em>; Die Maus verfolgen, wenn sie vom Benutzer gezogen wird.</em>
return

EWD_WatchMouse:
GetKeyState, EWD_LButtonState, LButton, P
if EWD_LButtonState = U  <em>; Taste wurde losgelassen, daher ist das Ziehen abgeschlossen.</em>
{
    SetTimer, EWD_WatchMouse, off
    return
}
GetKeyState, EWD_EscapeState, Escape, P
if EWD_EscapeState = D  <em>; Escape wurde gedrückt, daher wird das Ziehen abgebrochen.</em>
{
    SetTimer, EWD_WatchMouse, off
    WinMove, ahk_id %EWD_MouseWin%,, %EWD_OriginalPosX%, %EWD_OriginalPosY%
    return
}
<em>; Ansonsten das Fenster neu positionieren, damit es den Mauskoordinaten entspricht,
; bedingt durch das Ziehen der Maus:</em>
CoordMode, Mouse
MouseGetPos, EWD_MouseX, EWD_MouseY
WinGetPos, EWD_WinX, EWD_WinY,,, ahk_id %EWD_MouseWin%
SetWinDelay, -1   <em>; Fenster wird schneller/flüssiger verschoben.</em>
WinMove, ahk_id %EWD_MouseWin%,, EWD_WinX + EWD_MouseX - EWD_MouseStartX, EWD_WinY + EWD_MouseY - EWD_MouseStartY
EWD_MouseStartX := EWD_MouseX  <em>; Für den nächsten Timer-Aufruf auf diese Subroutine aktualisieren.</em>
EWD_MouseStartY := EWD_MouseY
return

</pre>
    </article>
  </section>
</div>
<script type="text/javascript">WriteFooter(1);</script>
</body>
</html>
