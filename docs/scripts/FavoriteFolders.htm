<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Einfacher Zugriff auf Lieblingsordner -- von Savage</title>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<link rel="alternate" type="application/rss+xml" title="AutoHotkey Forum RSS" href="/forum/rss.php">
<link href="../css/default.css" rel="stylesheet" type="text/css">
</head>
<body>

<h1>Einfacher Zugriff auf Lieblingsordner -- von Savage</h1>

<p>Wenn die mittlere Maustaste gedr&uuml;ckt wird, w&auml;hrend bestimmte Fenstertypen aktiv sind, dann zeigt dieses Script ein Men&uuml; mit den Lieblingsordnern an.  Nachdem ein Ordner ausgew&auml;hlt wurde, wechselt das Script innerhalb des aktiven Fensters sofort auf diesen Ordner.  Die folgenden Fenstertypen werden unterst&uuml;tzt: 1) Standard-Dialogfenster zum &Ouml;ffnen oder Speichern von Dateien; 2) Explorer-Fenster; 3) Konsolenfenster (Eingabeaufforderung). Das Men&uuml; kann optional auch f&uuml;r nicht unterst&uuml;tzte Fenstertypen angezeigt werden, in diesem Fall wird der ausgew&auml;hlte Ordner in einem neuen Explorer-Fenster ge&ouml;ffnet.
</p>
<p><a href="FavoriteFolders.ahk">Dieses Script herunterladen</a> &nbsp;| &nbsp;<a href="index.htm">Andere Beispiel-Scripts</a> &nbsp;| &nbsp;<a href="../index.htm">Home</a></p>

<pre class="NoIndent"><em>; Hinweis: Wenn "Ansicht > Symbolleisten > Adressleiste" im Fenster-Explorer deaktiviert ist,
; dann wird das Men&uuml; nicht angezeigt, wenn der unten ausgew&auml;hlte Hotkey
; ein Tilde-Zeichen hat.  Wenn ein Tilde-Zeichen vorhanden ist, dann wird das Men&uuml; angezeigt,
; aber der Ordner bleibt wird in einem neuen Explorer-Fenster ge&ouml;ffnet, anstatt
; das aktive Fenster auf diesen Ordner zu wechseln.</em>

<em>; KONFIGURATION: HOTKEY AUSW&Auml;HLEN
; Wenn die aktuelle Maus mehr als 3 Tasten hat, dann kann
; XButton1 (die 4.) oder XButton2 (die 5.) anstelle von MButton ausprobiert werden.
; Modifizierte Maustasten (wie ^MButton) oder
; ein Tastatur-Hotkey k&ouml;nnen auch verwendet werden.  Im Falle von MButton sollte das Tilde-Zeichen (~) als Pr&auml;fix
; verwendet werden, damit die normale Funktionalit&auml;t von MButton nicht verloren geht,
; sobald andere Fenstertypen wie ein Browser angeklickt werden.  Das Vorhandensein
; eines Tilde-Zeichens hindert das Script daran, das Men&uuml; f&uuml;r
; nicht unterst&uuml;tzte Fenstertypen anzuzeigen. Das hei&szlig;t, wenn kein Tilde-Zeichen vorhanden ist,
; zeigt der Hotkey das Men&uuml; immer an; und nach dem Ausw&auml;hlen
; eines Lieblingsordners, w&auml;hrend ein nicht unterst&uuml;tzter Fenstertyp aktiv ist,
; wird ein neues Explorer-Fenster ge&ouml;ffnet, um den Inhalt des Ordners
; anzuzeigen.</em>
f_Hotkey = ~MButton

<em>; KONFIGURATION: LIEBLINGSORDNER AUSW&Auml;HLEN
; Aktualisiert den unteren Sonderkommentarbereich, um die Lieblingsordner
; auszuw&auml;hlen.  Bestimmt zuerst den Namen des Men&uuml;punkts, gefolgt von einem
; Semikolon und dem Namen des aktuellen Pfads vom Lieblingsordner.
; Verwendet eine leere Zeile f&uuml;r eine Trennlinie.</em>

<em>/*
MEN&Uuml;ELEMENTE &lt;-- Diesen String nicht &auml;ndern.
Desktop      <em>; %A_Desktop%</em>
Favoriten    <em>; %A_Desktop%\..\Favorites</em>
Eigene Dokumente <em>; %A_MyDocuments%</em>

Programme; %A_ProgramFiles%
*/</em>


<em>; ENDE DER KONFIGURATION
; Hier danach keine &Auml;nderungen durchf&uuml;hren, es sei denn, die allgemeine
; Funktionalit&auml;t des Scripts soll ge&auml;ndert werden.</em>

#SingleInstance  <em>; Notwendig, da der Hotkey dynamisch erstellt wird.</em>

Hotkey, %f_Hotkey%, f_DisplayMenu
StringLeft, f_HotkeyFirstChar, f_Hotkey, 1
if f_HotkeyFirstChar = ~  <em>; Men&uuml; nur f&uuml;r bestimmte Fenstertypen anzeigen.</em>
    f_AlwaysShowMenu = n
else
    f_AlwaysShowMenu = y

<em>; Wird verwendet, um zuverl&auml;ssig festzustellen, ob das Script kompiliert ist:</em>
SplitPath, A_ScriptName,,, f_FileExt
if f_FileExt = Exe  <em>; Men&uuml;punkte von einer externen Datei lesen.</em>
    f_FavoritesFile = %A_ScriptDir%\Favorites.ini
else  <em>; Men&uuml;punkte direkt von diesem Script lesen.</em>
    f_FavoritesFile = %A_ScriptFullPath%

<em>;----Konfigurationsdatei lesen.</em>
f_AtStartingPos = n
f_MenuItemCount = 0
Loop, Read, %f_FavoritesFile%
{
    if f_FileExt &lt;&gt; Exe
    {
        <em>; Da die Men&uuml;punkte direkt von diesem Script gelesen werden,</em>
        <em>; werden alle Zeilen &uuml;bersprungen, bis die Startzeile</em>
        <em>; erreicht wird.</em>
        if f_AtStartingPos = n
        {
            IfInString, A_LoopReadLine, MEN&Uuml;ELEMENTE
                f_AtStartingPos = y
            continue  <em>; Neuen Schleifendurchlauf starten.</em>
        }
        <em>; Ansonsten kennzeichnet das schlie&szlig;ende Kommentarsymbol das Ende der Liste.</em>
        if A_LoopReadLine = */
            break  <em>; Schleife unterbrechen</em>
    }
    <em>; Men&uuml;trennlinien m&uuml;ssen auch mitgez&auml;hlt werden, damit die Kompatibilit&auml;t</em>
    <em>; mit A_ThisMenuItemPos gew&auml;hrleistet wird:</em>
    f_MenuItemCount++
    if A_LoopReadLine =  <em>; Leer kennzeichnet eine Trennlinie.</em>
        Menu, Favorites, Add
    else
    {
        StringSplit, f_line, A_LoopReadLine, `;
        f_line1 = %f_line1%  <em>; F&uuml;hrende und nachfolgende Leerzeichen entfernen.</em>
        f_line2 = %f_line2%  <em>; F&uuml;hrende und nachfolgende Leerzeichen entfernen.</em>
        <em>; Referenzen auf Variablen innerhalb jeden Feldes aufl&ouml;sen, und</em>
        <em>; ein neues Array-Element mit dem Ordnerpfad erstellen:</em>
        Transform, f_path%f_MenuItemCount%, deref, %f_line2%
        Transform, f_line1, deref, %f_line1%
        Menu, Favorites, Add, %f_line1%, f_OpenFavorite
    }
}
return  <em>;----Ende des automatischen Ausf&uuml;hrungsbereichs.</em>


<em>;----Ausgew&auml;hlten Lieblingsordner &ouml;ffnen</em>
f_OpenFavorite:
<em>; Array-Element abfangen, das dem ausgew&auml;hlten Men&uuml;punkt entspricht:</em>
StringTrimLeft, f_path, f_path%A_ThisMenuItemPos%, 0
if f_path =
    return
if f_class = #32770    <em>; Es ist ein Dialogfenster.</em>
{
    if f_Edit1Pos &lt;&gt;   <em>; Und hat ein Edit1-Steuerelement.</em>
    {
        <em>; Aktiviert das Fenster, sodass nachfolgende Klicks auch au&szlig;erhalb des Dialogfensters</em>
        <em>; funktionieren, falls der Benutzer die mittlere Maustaste dr&uuml;ckt:</em>
        WinActivate ahk_id %f_window_id%
        <em>; Ermittelt jeden Dateinamen, der bereits im Feld vorhanden ist,</em>
        <em>; sodass er wiederhergestellt werden kann, nachdem zum neuen Ordner gewechselt wurde:</em>
        ControlGetText, f_text, Edit1, ahk_id %f_window_id%
        ControlSetText, Edit1, %f_path%, ahk_id %f_window_id%
        ControlSend, Edit1, {Enter}, ahk_id %f_window_id%
        Sleep, 100  <em>; Bei einigen Dialogfenstern oder in einigen F&auml;llen wird zus&auml;tzliche Zeit ben&ouml;tigt.</em>
        ControlSetText, Edit1, %f_text%, ahk_id %f_window_id%
        return
    }
    <em>; dann springe ans Ende der Subroutine, um die Standardaktion auszuf&uuml;hren.</em>
}
else if f_class in ExploreWClass,CabinetWClass  <em>; Ordner im Explorer wechseln.</em>
{
    if f_Edit1Pos &lt;&gt;   <em>; Und hat ein Edit1-Steuerelement.</em>
    {
        ControlSetText, Edit1, %f_path%, ahk_id %f_window_id%
        <em>; Tekl hat Folgendes berichtet: "Wenn ich auf den Ordner L:\folder wechseln will,</em>
        <em>; dann zeigt die Adressleiste http://www.L:\folder.com. Als &Uuml;bergangsl&ouml;sung</em>
        <em>; habe ich {right} vor {Enter} hinzugef&uuml;gt":</em>
        ControlSend, Edit1, {Right}{Enter}, ahk_id %f_window_id%
        return
    }
    <em>; dann springe ans Ende der Subroutine, um die Standardaktion auszuf&uuml;hren.</em>
}
else if f_class = ConsoleWindowClass <em>; CD im Konsolenfenster verwenden, um auf das Verzeichnis zu springen.</em>
{
    WinActivate, ahk_id %f_window_id% <em>; Weil es durch mclick manchmal deaktiviert wird.</em>
    SetKeyDelay, 0  <em>; ; Nur w&auml;hrend des Hotkey-Threads wirksam.</em>
    IfInString, f_path, :  <em>; Es enth&auml;lt einen Laufwerksbuchstaben</em>
    {
        StringLeft, f_path_drive, f_path, 1
        Send %f_path_drive%:{enter}
    }
    Send, cd %f_path%{Enter}
    return
}
<em>; Da oben keine R&uuml;ckgabe erfolgt, gilt eins der folgenden Angaben:
; 1) Es ist ein nicht unterst&uuml;tzter Fenstertyp, aber f_AlwaysShowMenu ist y (ja).
; 2) Es ist ein unterst&uuml;tzter Fenstertyp, es fehlt jedoch ein Edit1-Steuerelement,
;    um die benutzerdefinierte Aktion zu erleichtern, daher soll stattdessen die untere Standardaktion durchgef&uuml;hrt werden.</em>
Run, Explorer %f_path%  <em>; K&ouml;nnte ohne Anf&uuml;hrungszeichen mit mehr Systemen funktionieren.</em>
return


<em>;----Das Men&uuml; anzeigen</em>
f_DisplayMenu:
<em>; Diese ersten paar Variablen werden hier bestimmt und von f_OpenFavorite verwendet:</em>
WinGet, f_window_id, ID, A
WinGetClass, f_class, ahk_id %f_window_id%
if f_class in #32770,ExploreWClass,CabinetWClass  <em>; Dialogfenster oder Explorer.</em>
    ControlGetPos, f_Edit1Pos,,,, Edit1, ahk_id %f_window_id%
if f_AlwaysShowMenu = n  <em>; Das Men&uuml; sollte nur selektiv angezeigt werden.</em>
{
    if f_class in #32770,ExploreWClass,CabinetWClass  <em>; Dialogfenster oder Explorer.</em>
    {
        if f_Edit1Pos =  <em>; Das Steuerelement ist nicht vorhanden, daher das Men&uuml; nicht anzeigen</em>
            return
    }
    else if f_class &lt;&gt; ConsoleWindowClass
        return <em>; Wenn anderer Fenstertyp, dann Men&uuml; nicht anzeigen.</em>
}
<em>; Ansonsten sollte das Men&uuml; f&uuml;r diesen Fenstertyp pr&auml;sentiert werden:</em>
Menu, Favorites, show
return

</pre>
</body>
</html>