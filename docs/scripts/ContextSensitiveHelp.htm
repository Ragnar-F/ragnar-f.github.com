<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Kontextabh&auml;ngige Hilfe in einem beliebigen Editor - von Rajat</title>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<link rel="alternate" type="application/rss+xml" title="AutoHotkey Forum RSS" href="/forum/rss.php">
<link href="../css/default.css" rel="stylesheet" type="text/css">
</head>
<body>
<script src="../../NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<h1>Kontextabh&auml;ngige Hilfe in einem beliebigen Editor - von Rajat</h1>

<p>Damit kann mit Strg+2 (oder ein anderer Hotkey) die Hilfe-Dateiseite f&uuml;r den markierten AutoHotkey-Befehl oder Schl&uuml;sselwort angezeigt werden. Wenn nichts markiert ist, dann wird der Befehlsname vom Anfang der aktuellen Zeile extrahiert.
</p>
<p><a href="ContextSensitiveHelp.ahk">Dieses Script herunterladen</a> &nbsp;| &nbsp;<a href="index.htm">Andere Beispiel-Scripts</a> &nbsp;| &nbsp;<a href="../index.htm">Home</a></p>

<pre class="NoIndent"><em>; Der unten genannte Hotkey nutzt die Zwischenablage, um die Kompatibilit&auml;t mit
; den meisten Editoren zu gew&auml;hrleisten (da ControlGet nicht immer
; funktioniert). Danach wird der originale Inhalt der Zwischenablage wieder-
; hergestellt, jedoch als Klartext, was immer noch besser als gar nichts ist.</em>

$^2::
<em>; Die folgenden Werte sind nur w&auml;hrend des Hotkey-Threads wirksam.
; Deshalb ist es nicht notwendig, deren urspr&uuml;ngliche Werte wiederherzustellen,
; weil das automatisch geschieht, sobald der Thread endet:</em>
SetWinDelay 10
SetKeyDelay 0
AutoTrim, On

if A_OSType = WIN32_WINDOWS  <em>; Windows 9x</em>
    Sleep, 500  <em>; Damit der Benutzer Zeit hat, die Taste loszulassen.</em>

C_ClipboardPrev = %clipboard%
clipboard =
<em>; Verwendet das hervorgehobene Wort, falls vorhanden (da der Benutzer
; manchmal etwas absichtlich hervorhebt, das kein Befehl ist):</em>
Send, ^c
ClipWait, 0.1
if ErrorLevel &lt;&gt; 0
{
    <em>; Die gesamte Zeile abrufen, weil Editoren die Cursor-Navigationstasten
    ; unterschiedlich behandeln:</em>
    Send, {home}+{end}^c
    ClipWait, 0.2
    if ErrorLevel &lt;&gt; 0  <em>; Selten, daher kein Fehler melden.</em>
    {
        clipboard = %C_ClipboardPrev%
        return
    }
}
C_Cmd = %clipboard%  <em>; Tabulator- & Leerzeichen davor oder danach entfernen.</em>
clipboard = %C_ClipboardPrev%  <em>; Die vorherige Zwischenablage wiederherstellen.</em>
Loop, parse, C_Cmd, %A_Space%`,  <em>; Das erste Leerzeichen oder Komma kennzeichnet das Ende des Befehls.</em>
{
    C_Cmd = %A_LoopField%
    break <em>; d.h. wir ben&ouml;tigen nur einen Durchlauf.</em>
}
IfWinNotExist, AutoHotkey Help
{
    <em>; Den Standort von AutoHotkey ermitteln:</em>
    RegRead, ahk_dir, HKEY_LOCAL_MACHINE, SOFTWARE\AutoHotkey, InstallDir
    if ErrorLevel  <em>; Nichts gefunden, so in anderen h&auml;ufigen Standorten nachschauen.</em>
    {
        if A_AhkPath
            SplitPath, A_AhkPath,, ahk_dir
        else IfExist ..\..\AutoHotkey.chm
            ahk_dir = ..\..
        else IfExist %A_ProgramFiles%\AutoHotkey\AutoHotkey.chm
            ahk_dir = %A_ProgramFiles%\AutoHotkey
        else
        {
            MsgBox AutoHotkey-Ordner konnte nicht gefunden werden.
            return
        }
    }
    Run %ahk_dir%\AutoHotkey.chm
    WinWait AutoHotkey Help
}
<em>; Der obere Befehl bestimmt das "zuletzt gefundene" Fenster, das unten verwendet wird:</em>
WinActivate
WinWaitActive
StringReplace, C_Cmd, C_Cmd, #, {#}
send, !n{home}+{end}%C_Cmd%{enter}
return

</pre>
</body>
</html>