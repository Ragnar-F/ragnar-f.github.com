<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Einfache Fensterverschiebung -- KDE-Style (ben&ouml;tigt XP/2k/NT) -- von Jonny</title>
<meta name="keywords" content="">
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<link rel="alternate" type="application/rss+xml" title="AutoHotkey Forum RSS" href="/forum/rss.php">
<link href="../css/default.css" rel="stylesheet" type="text/css">
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-28224374-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
</head>
<body>
<script src="../navbar/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(1);</script>


<h1>Einfache Fensterverschiebung -- KDE-Style (ben&ouml;tigt XP/2k/NT) -- von Jonny</h1>

<p>Mit diesem Script ist es bedeutend einfacher, ein Fenster zu verschieben oder zu skalieren: 1) Haltet die ALT-Taste gedr&uuml;ckt und klickt mit der linken Maustaste irgendwo auf das Fenster, um es zur gew&uuml;nschten Position zu verschieben; 2) Haltet die ALT-Taste gedr&uuml;ckt und klickt mit der rechten Maustaste irgendwo auf das Fenster, um dessen Gr&ouml;&szlig;e einfach zu &auml;ndern; 3) Dr&uuml;ckt die ALT-Taste zweimal, bevor jedoch der zweite Tastendruck losgelassen wird, klickt mit der linken Maustaste, um das Fenster unter dem Mauszeiger zu minimieren, klickt mit der rechten Maustaste, um es zu maximieren oder klickt mit der mittleren Maustaste, um es zu schlie&szlig;en.
</p>
<p><a href="EasyWindowDrag_(KDE).ahk">Dieses Script herunterladen</a> &nbsp;| &nbsp;<a href="index.htm">Andere Beispiel-Scripts</a> &nbsp;| &nbsp;<a href="../index.htm">Home</a></p>

<pre class="NoIndent"><em>; Dieses Script wurde inspiriert von und beruht auf
; das Forum, wie viele andere Scripts auch. Der Dank geht an ck, thinkstorm, Chris,
; und aurelian f&uuml;r eine gute Arbeit.</em>

<em>; &Auml;nderungen:
; 7. November 2006: Skalierungscode in !RButton optimiert, mit freundlicher Genehmigung von bluedawn.
; 5. Februar 2006: Fehler mit Doppel-Alt behoben (der ~Alt-Hotkey), damit das Script mit den aktuellsten Versionen von AHK funktioniert.</em>

<em>; Der Doppel-Alt-Modifikator wird beim zweimaligen Dr&uuml;cken von
; Alt aktiviert, &auml;hnlich wie ein Doppelklick. Haltet die zweite Taste
; gedr&uuml;ckt, bis ein Klick erfolgt.
;
; Die Tastenkombinationen:
;  Alt + linke Maustaste  : Ziehen, um ein Fenster zu verschieben.
;  Alt + rechte Maustaste  : Ziehen, um die Gr&ouml;&szlig;e eines Fensters zu &auml;ndern.
;  Doppel-Alt + linke Maustaste  : Ein Fenster minimieren.
;  Doppel-Alt + rechte Maustaste  : Ein Fenster maximieren/skalieren.
;  Doppel-Alt + mittlere Maustaste  : Ein Fenster schlie&szlig;en.
;
; Die Alt-Taste kann optional nach dem ersten Klick losgelassen werden,
; anstatt die Taste die ganze Zeit gedr&uuml;ckt zu halten.</em>

If (A_AhkVersion &lt; "1.0.39.00")
{
    MsgBox,20,,Dieses Script funktioniert m&ouml;glicherweise nicht mit der aktuellen Version von AutoHotkey. Weiter?
    IfMsgBox,No
    ExitApp
}


<em>; Die Einstellung, die auf meinem System
; fl&uuml;ssig l&auml;uft. Abh&auml;ngig von der aktuellen Grafikkarte und CPU,
; kann dieser Wert erh&ouml;ht oder verringert werden.</em>
SetWinDelay,2

CoordMode,Mouse
return

!LButton::
If DoubleAlt
{
    MouseGetPos,,,KDE_id
    <em>; Diese Nachricht ist meist gleichbedeutend mit WinMinimize,</em>
    <em>; verhindert jedoch einen Fehler mit PSPad.</em>
    PostMessage,0x112,0xf020,,,ahk_id %KDE_id%
    DoubleAlt := false
    return
}
<em>; Ermittelt die anf&auml;ngliche Mausposition und Fenster-ID, und
; abbrechen, falls das Fenster maximiert ist.</em>
MouseGetPos,KDE_X1,KDE_Y1,KDE_id
WinGet,KDE_Win,MinMax,ahk_id %KDE_id%
If KDE_Win
    return
<em>; Ermittelt die anf&auml;ngliche Mausposition.</em>
WinGetPos,KDE_WinX1,KDE_WinY1,,,ahk_id %KDE_id%
Loop
{
    GetKeyState,KDE_Button,LButton,P <em>; Unterbrechen, falls die Taste losgelassen wurde.</em>
    If KDE_Button = U
        break
    MouseGetPos,KDE_X2,KDE_Y2 <em>; Ermittelt die aktuelle Mausposition.</em>
    KDE_X2 -= KDE_X1 <em>; Ermittelt den Offset von der anf&auml;nglichen Mausposition.</em>
    KDE_Y2 -= KDE_Y1
    KDE_WinX2 := (KDE_WinX1 + KDE_X2) <em>; Wendet diesen Offset auf die Fensterposition an.</em>
    KDE_WinY2 := (KDE_WinY1 + KDE_Y2)
    WinMove,ahk_id %KDE_id%,,%KDE_WinX2%,%KDE_WinY2% <em>; Verschiebt das Fenster zur neuen Position.</em>
}
return

!RButton::
If DoubleAlt
{
    MouseGetPos,,,KDE_id
    <em>; Zwischen maximierten und wiederhergestellten Zustand umschalten.</em>
    WinGet,KDE_Win,MinMax,ahk_id %KDE_id%
    If KDE_Win
        WinRestore,ahk_id %KDE_id%
    Else
        WinMaximize,ahk_id %KDE_id%
    DoubleAlt := false
    return
}
<em>; Ermittelt die anf&auml;ngliche Mausposition und Fenster-ID, und
; abbrechen, falls das Fenster maximiert ist.</em>
MouseGetPos,KDE_X1,KDE_Y1,KDE_id
WinGet,KDE_Win,MinMax,ahk_id %KDE_id%
If KDE_Win
    return
<em>; Ermittelt die anf&auml;ngliche Mausposition und Gr&ouml;&szlig;e.</em>
WinGetPos,KDE_WinX1,KDE_WinY1,KDE_WinW,KDE_WinH,ahk_id %KDE_id%
<em>; Definiert den Fensterbereich f&uuml;r die aktuelle Maus.
; Die vier Bereiche sind Up und Left, Up und Right, Down und Left, Down und Right.</em>
If (KDE_X1 &lt; KDE_WinX1 + KDE_WinW / 2)
   KDE_WinLeft := 1
Else
   KDE_WinLeft := -1
If (KDE_Y1 &lt; KDE_WinY1 + KDE_WinH / 2)
   KDE_WinUp := 1
Else
   KDE_WinUp := -1
Loop
{
    GetKeyState,KDE_Button,RButton,P <em>; Unterbrechen, falls die Taste losgelassen wurde.</em>
    If KDE_Button = U
        break
    MouseGetPos,KDE_X2,KDE_Y2 <em>; Ermittelt die aktuelle Mausposition.</em>
    <em>; Ermittelt die aktuelle Fensterposition und Gr&ouml;&szlig;e.</em>
    WinGetPos,KDE_WinX1,KDE_WinY1,KDE_WinW,KDE_WinH,ahk_id %KDE_id%
    KDE_X2 -= KDE_X1 <em>; Ermittelt den Offset von der anf&auml;nglichen Mausposition.</em>
    KDE_Y2 -= KDE_Y1
    <em>; Danach in Bezug auf den definierten Bereich agieren.</em>
    WinMove,ahk_id %KDE_id%,, KDE_WinX1 + (KDE_WinLeft+1)/2*KDE_X2  <em>; X des skalierten Fensters</em>
                            , KDE_WinY1 +   (KDE_WinUp+1)/2*KDE_Y2  <em>; Y des skalierten Fensters</em>
                            , KDE_WinW  -     KDE_WinLeft  *KDE_X2  <em>; W des skalierten Fensters</em>
                            , KDE_WinH  -       KDE_WinUp  *KDE_Y2  <em>; H des skalierten Fensters</em>
    KDE_X1 := (KDE_X2 + KDE_X1) <em>; Die urspr&uuml;ngliche Position f&uuml;r den n&auml;chsten Durchlauf wiederherstellen.</em>
    KDE_Y1 := (KDE_Y2 + KDE_Y1)
}
return

<em>; "Alt + MButton" ist m&ouml;glicherweise einfacher, ich
; bevorzuge jedoch eine zus&auml;tzliche Absicherung
; mit einer Operation wie diese.</em>
!MButton::
If DoubleAlt
{
    MouseGetPos,,,KDE_id
    WinClose,ahk_id %KDE_id%
    DoubleAlt := false
    return
}
return

<em>; Dadurch werden "Doppelklicks" der Alt-Taste erkannt.</em>
~Alt::
DoubleAlt := A_PriorHotKey = "~Alt" AND A_TimeSincePriorHotkey &lt; 400
Sleep 0
KeyWait Alt  <em>; Dadurch wird die St&ouml;rung der automatischen Wiederholfunktion der Tastatur unterdr&uuml;ckt.</em>
Return

</pre>
</body>
</html>