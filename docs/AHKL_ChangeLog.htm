<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>&Auml;nderungen und neue Funktionen</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<link href="css/default.css" rel="stylesheet" type="text/css">
</head>

<body>
<h1>&Auml;nderungen und neue Funktionen</h1>
<p>Dieses Changelog betrifft nur AutoHotkey_L. Siehe <a href="ChangeLogHelp.htm">Changelog von AutoHotkey</a>.</p>

<!--neue Revisionen erfolgen hier-->
<h2>1.1.03.00 - 28. August 2011</h2>

<p>Unterst&uuml;tzung f&uuml;r GUI-Namen hinzugef&uuml;gt.</p>
<p>Unterst&uuml;tzung f&uuml;r das Identifizieren eines GUI's mittels HWND hinzugef&uuml;gt.</p>
<p>Gui-Option <code>+Parent%ParentGui%</code> hinzugef&uuml;gt.</p>
<p>Gui-Fenster k&ouml;nnen mithilfe von <code>+Owner%HWND%</code> einem externen Fenster zugeordnet werden.</p>
<p>Unterbefehl Name f&uuml;r GuiControlGet hinzugef&uuml;gt.</p>
<p>Unterst&uuml;tzung f&uuml;r ActiveX-Steuerelemente mithilfe des Gui-Befehls hinzugef&uuml;gt.</p>
<p>Fehler behoben: Leeres Hotkey-Steuerelement hat "vk00" zur&uuml;ckgegeben.</p>
<p>Fehler behoben: Abst&uuml;rze und Speicherlecks in Bezug auf COM-Ereignisse/ComObjConnect.</p>
<p>Fehler behoben: <code>GuiControlGet OutputVar, Subcmd, <b>%OutputVar%</b></code> schlug immer fehl.</p>
<p>Fehlermeldungen "Missing (/[/{" zum besseren Verst&auml;ndnis auf "Unexpected )/]/}" ge&auml;ndert.</p>
<p>ListLines ge&auml;ndert, damit die While- und Until-Zeilen angezeigt werden, die jeden Durchlauf ausf&uuml;hren.</p>
<p>Ausdrucksoperator ~= hat nun h&ouml;here Priorit&auml;t als =/!=/&lt;/&gt;/&lt;=/&gt;=, jedoch niedriger als Verkettung, au&szlig;erdem wurde er zur Dokumentation hinzugef&uuml;gt.</p>

<h2>1.1.02.03 - 21. August 2011</h2>
<p>Fehler behoben (Debugger): Attribut "numchildren" enthielt nicht Objekt.Base.</p>

<h2>1.1.02.02 - 20. August 2011</h2>
<p>Fehler behoben: Variablenkapazit&auml;t war bei x64-Versionen auf 2 GB limitiert.</p>
<p>Fehler behoben: Das zuletzt gefundene Fenster wurde nicht von #if WinExist(T) gesetzt.</p>

<h2>1.1.02.01 - 13. August 2011</h2>
<p>A_PriorKey ge&auml;ndert, damit die Up-Ereignisse der Tasten ausgeschlossen werden.</p>
<p>Fehler beim Abruf des Prozessnamens/-pfades in bestimmten F&auml;llen behoben:</p>
<ul>
        <li>Name/Pfad eines 64-Bit-Prozesses von einem 32-Bit-Script abrufen.</li>
        <li>Name/Pfad eines erh&ouml;hten Prozesses von einem nicht erh&ouml;hten Prozess (UAC) abrufen.</li>
</ul>

<h2>1.1.02.00 - 6. August 2011</h2>
<p>TV_SetImageList() hinzugef&uuml;gt.</p>
<p>Zeichen, die nicht standardm&auml;&szlig;ige Umschaltzust&auml;nde 16 und 32 ben&ouml;tigen, verwenden nun eine R&uuml;ckfallmethode, anstatt falsche Tastatureingaben zu erzeugen.</p>
<p>Umgang mit toten Tasten &uuml;berarbeitet, um Probleme zu verhindern, wenn mehrere Scripts mit Hotstrings aktiv sind.</p>

<h2>1.1.01.00 - 30. Juli 2011</h2>
<p>Zus&auml;tzliche Unterst&uuml;tzung f&uuml;r Instanzvariablen in Klassendefinitionen, mit einfache Zuweisungssyntax.</p>
<p>Schl&uuml;sselwort <code>var</code> entfernt, das in Klassendefinitionen verwendet wurde; benutzt stattdessen <code>static</code>.</p>
<p>Neue interne Variablen hinzugef&uuml;gt: A_ScriptHwnd und A_PriorKey.</p>
<p>Neue interne Funktionen hinzugef&uuml;gt: GetKeyName(), GetKeyVK(), GetKeySC() und IsByRef().</p>
<p>Neuer Unterbefehl hinzugef&uuml;gt: WinGet, Ausgabevariable, ProcessPath.</p>
<p>Die F&auml;higkeit hinzugef&uuml;gt, ein Fenster mithilfe des Prozessnamens oder -pfads anzugeben: <code>ahk_exe %Name%.exe</code> oder <code>ahk_exe %Vollst&auml;ndigerPfad%</code>.</p>
<p>ProcessName-Unterbefehl von WinGet optimiert.</p>
<p>SetTimer ge&auml;ndert, indem A_ThisLabel verwendet wird, wenn das Label nicht vorhanden ist.</p>
<p>ComObjConnect() aktualisiert, damit ein Objekt anstelle eines Funktionsnamenpr&auml;fix verwendet werden kann.</p>
<p>ComObjConnect() verbessert, damit das Pr&auml;fix/Objekt aktualisiert werden kann, ohne es erst zu trennen.</p>
<p>Parsing von Fortsetzungsbereiche verbessert, damit Ausdr&uuml;cke wie <code>(x.y)[z]()</code> m&ouml;glich sind, ohne "(" sch&uuml;tzen zu m&uuml;ssen.</p>
<p>Methode ersetzt, die verwendet wurde, um Script-Texte in 32-Bit-kompilierte Scripts zu speichern; nun in Einklang mit 64-Bit.</p>
<p>Fehler beim Erkennen von AltGr auf der Tastaturbelegung des aktiven Fensters behoben (bei Unicode-Versionen).</p>
<p>Fehler mit SendInput behoben, wobei ein &uuml;berfl&uuml;ssiges LCtrl-Up-Ereignis nach einem AltGr-Up-Ereignis durchgef&uuml;hrt wurde.</p>

<h2>1.1.00.01 - 17. Juli 2011</h2>
<p>Fehler behoben: Modifikatortasten wurden beim Senden von Sonderzeichen nicht automatisch losgelassen.</p>
<p>Fehler behoben: Konflikte beim Neubelegen mit Scancode/Modifikatortaste wie sc1xx anstelle von ^sc0xx.</p>
<p>Fehler behoben: $ und #UseHook waren unwirksam, wenn sie nur bei der zweiten oder nachfolgenden Instanzen eines Hotkeys verwendet wurden.</p>
<p>Fehler behoben: Potentieller Absturz bei der R&uuml;ckgabe eines Werts von einer __Delete-Meta-Funktion.</p>
<p>Fehler behoben: Warnungen "Nicht initialisierte Variable" wurden vom Debugger ausgel&ouml;st.</p>
<p>Ge&auml;ndert: base.Methode() l&ouml;st nun nicht mehr eine Standard-Meta-Funktion oder eine Warnung aus.</p>
<p>Ge&auml;ndert: Gui +(Ex)Style versteckt/zeigt nicht l&auml;nger das GUI-Fenster.</p>
<p>Debugger ge&auml;ndert, damit er bei nicht initialisierten Variablen Typ="undefined" meldet.</p>
<p>&Uuml;berpr&uuml;fung hinzugef&uuml;gt, um das Senden von falschen Zeichen zu verhindern, die die Hankaku-Taste ben&ouml;tigen.
<p>Zus&auml;tzliche Unterst&uuml;tzung f&uuml;r Integer als Variablennamen von Klassen.</p>
<p>Das Schl&uuml;sselwort "Static" f&uuml;r die Deklaration von Klassenvariablen hinzugef&uuml;gt.</p>

<h2>1.1.00.00 - 1. Mai 2011</h2>
<h4>Neue Funktionen:</h4>
<p>Einfache <a href="Objects.htm#Custom_Classes">Syntax f&uuml;r Klassendefinition</a> implementiert.</p>
<p>Schl&uuml;sselwort <a href="Objects.htm#Custom_NewDelete"><code>new</code></a> f&uuml;r die Erstellung eines verzweigten Objekts.</p>
<p><a href="Functions.htm#Func">Func()</a> f&uuml;r das Abrufen einer Referenz auf einer vorhandenen Funktion hinzugef&uuml;gt und <a href="Functions.htm#IsFunc">IsFunc</a> verbessert, um <a href="Objects.htm#Function_References">Funktionsreferenzen</a> zu erkennen.</p>
<p>Zus&auml;tzliche Unterst&uuml;tzung f&uuml;r <code>++</code> und <code>--</code> mit Objektfeldern, wie z. B. <code>x.y[z]++</code>.</p>

<h4>&Auml;nderungen:</h4>
<p>__Delete l&ouml;st nicht mehr __Call aus.</p>
<p>OnClipboardChange verwendet AddClipboardFormatListener je nach Verf&uuml;gbarkeit (d. h. in Windows Vista oder h&ouml;her), um die Zuverl&auml;ssigkeit zu verbessern.</p>
<p>Autoverkettung mit <code>(</code> ist genauer, daher funktionieren einige ung&uuml;ltige Ausdr&uuml;cke wie <code>12(34)</code> nicht l&auml;nger.</p>

<h4>Fehlerbehebungen:</h4>
<p><code>SetTimer Label, -0</code> f&uuml;hrt nun dazu, dass das Label "einmal und sehr bald" ausgef&uuml;hrt wird.</p>
<p>A_MyDocuments usw. verwendet nun SHGetFolderPath anstelle eines nicht dokumentierten Registrierungsschl&uuml;ssels.</p>
<p>Fehler mit nicht leerer Textausnahme behoben, dass Fenster ohne Text ausgeschlossen werden.</p>

<h2>1.0.97.02 - 14. April 2011</h2>
<p>Fehler durch Fehlinterpretation des Kommas als Argument-Trennzeichen behoben, wenn es mit <code>{}</code> in einem Ausdruck umschlossen wird.</p>
<p>For-Loop setzt A_Index erst nach der Auswertung des <i>Ausdruck</i>-Arguments, damit der &auml;u&szlig;ere Wert der Schleife verwendet werden kann.</p>
<p>Standardposition des Scripts basiert nun auf das Verzeichnis mit der EXE (wie dokumentiert) und nicht auf das Arbeitsverzeichnis.</p>
<p>Verbesserte G&uuml;ltigkeitspr&uuml;fung w&auml;hrend der Ladezeit, um ung&uuml;ltige Versuche zu erkennen, mit Goto aus einer Funktion "herauszuspringen".</p>

<h2>1.0.97.01 - 2. April 2011</h2>
<p>Fehler in der 64-Bit-Version behoben, um HWNDs oder SendMessage/PostMessage-Parameter nicht auf 32 Bit zu verk&uuml;rzen.</p>
<p><code>*/::</code> ist nicht l&auml;nger ein ung&uuml;ltiger Hotkey (fehlerhaft seit L54).</p>
<p>Fehler mit den Icons behoben.</p>
<h2>1.0.97.00 - 28. M&auml;rz 2011</h2>
<p><code>{key: value}</code> als vereinfachte Syntax f&uuml;r <code>Object("key", value)</code>.</p>
<p><code>[x, y, z]</code> als vereinfachte Syntax f&uuml;r <code>Array(x, y, z)</code>, dass  <code>Object(1, x, 2, y, 3, z)</code> entspricht.</p>
<p>Kleine Optimierung: jeder Referenz auf True, False, A_PtrSize oder A_IsUnicode wird w&auml;hrend der Ladezeit in Ausdr&uuml;cke aufgel&ouml;st.</p>
<p>Hotkey-Parser behandelt <code>x &amp; ^y</code> nun als Fehler, anstatt <code>^</code> zu ignorieren.</p>

<h2>1.0.96.00 - 21. M&auml;rz 2011</h2>
<h4><b>Neue Funktionen:</b></h4>
<p><a href="commands/ComObjQuery.htm">ComObjQuery</a>: Abfragen eines COM-Objekts f&uuml;r eine Schnittstelle oder Dienst.</p>
<p><a href="commands/ComObjFlags.htm">ComObjFlags</a>: Ermittelt oder &auml;ndert Flags, die das Verhalten eines COM-Wrapper-Objekts kontrollieren.</p>
<p><a href="commands/ComObjCreate.htm">ComObjCreate</a> k&ouml;nnen Non-Dispatch-Objekte erstellen, wenn eine Schnittstelle-ID (IID) gegeben ist.</p>
<p><a href="commands/ComObjArray.htm">COM-Arrays</a> unterst&uuml;tzen For-Schleifen und die Clone()-Methode.</p>
<p>ListVars zeigt zus&auml;tzlich zur Adresse des Wrappers den inneren Typ und Wert einer Variante von jedem COM-Wrapper-Objekt an.</p>
<h4><b>&Auml;nderungen:</b></h4>
<p>Wenn eine direkt vorhandene Integer oder Variable mit einem numerischen String und zwischengespeicherte Bin&auml;r-Integer einem Objekt-Feld zugewiesen werden, dann wird eine Integer anstelle eines Strings gespeichert. Dadurch werden insbesondere Scripts beim Aufrufen von COM-Methoden beg&uuml;nstigt, die Integer anstelle von Strings akzeptieren oder sich je nach Werttyp unterschiedlich verhalten.</p>
<p>NULL-Werte k&ouml;nnen nun mit ComObjParameter f&uuml;r die Typen VT_UNKNOWN und VT_DISPATCH verwendet werden.</p>
<p>Verbesserte Unterst&uuml;tzung f&uuml;r CLR-Objekte (Common Language Runtime [.NET]) mithilfe von COM.</p>
<p>FileRecycle sollte nun vorher warnen, wenn eine Datei gel&ouml;scht wird, die zu gro&szlig; f&uuml;r den Papierkorb ist.</p>
<p>Wenn ein SafeArray, mit ComObjArray erstellt, einem Element eines anderen SafeArrays zugewiesen ist, dann wird eine seperate Kopie erstellt. Dadurch wird verhindert, dass das Script aufgrund des zweiten Versuchs abst&uuml;rzt, den Array zu "zerst&ouml;ren". Mit ComObjFlags kann dieses Verhalten verhindert werden.</p>
<h4><b>Fehlerbehebungen:</b></h4>
<p>Bei dem Versuch, einem COM-Array des Typs VT_DISPATCH oder VT_UNKNOWN etwas zuzuweisen, st&uuml;rzte das Script ab.</p>
<p>Break und Pause wurden manchmal au&szlig;erhalb von Schleifen toleriert.</p>
<p>Ein alleinstehendes CR-Zeichen (`r) wurde nicht korrekt als Zeilenende interpretiert.</p>
<p>MouseMove berechnete negative Koordinaten im SendInput- und SendEvent-Modus falsch.</p>
<p>Das Ausw&auml;hlen von <i>Edit This Script</i> im Tray-Men&uuml; oder Verwenden des Edit-Befehls f&uuml;hrte zum Absturz des Scripts (fehlerhaft seit v1.0.95).</p>
<p>Fehlermeldungen zeigten manchmal auf irrelevante Codezeilen.</p>

<h2>1.0.95.00 - 12. M&auml;rz 2011</h2>
<p>Alle Datei-Eingaben/Ausgaben wurden stark optimiert.</p>
<p><a href="commands/_Warn.htm">#Warn</a> f&uuml;r Fehleranalyse; urspr&uuml;ngliches Design von <a href="http://www.autohotkey.com/forum/profile.php?mode=viewprofile&u=48847">ac</a>.</p>
<p>Wenn standardm&auml;&szlig;ig <i>name_var</i> einen Funktionsnamen enth&auml;lt, dann ruft <code>name_var.()</code> eine Funktion auf. Das kann wie zuvor mithilfe des <a href="Objects.htm#Default_Base_Object">Standard-Basis-Objekt</a> &uuml;berschrieben werden.</p>
<p>Run unterst&uuml;tzt nun Verben mit Parametern, wie z. B. <code>Run *RunAs %A_ScriptFullPath% /Param</code>.</p>
<p>Wenn ein Operator nach einem direkt vorhandenen String in Anf&uuml;hrungszeichen erfolgt, der entweder einen Operand (<code>&amp;x</code>) oder zwei <i>numerische</i> Operanden (<code>x &amp; y</code>) akzeptieren kann, dann erfolgt die Auto-Verkettung und der Operator nur f&uuml;r den rechten Operanden. Denn direkt vorhandene Strings in Anf&uuml;hrungszeichen werden immer als nicht-numerisch betrachtet und sind deshalb keine g&uuml;ltige Eingaben f&uuml;r numerische Operationen. Zum Beispiel funktionieren nun Ausdr&uuml;cke wie <code>"x" &amp;y</code> und <code>"x" ++y</code>.</p>
<p><b>Fehler behoben:</b></p>
<ul>
<li>Platzhalter-Hotkeys respektieren in bestimmten F&auml;llen keine Modifikatoren wie <code>^!+</code>.</li>
<li>Datei.Pos gab bei nicht-suchenden Dateitypen irgendwelchen M&uuml;ll zur&uuml;ck; es gibt nun -1 zur&uuml;ck.</li>
<li>Datei.AtEOF war manchmal f&auml;lschlicherweise wahr.</li>
<li>COM-Wrapper-Objekte setzten A_LastError manchmal nicht.</li>
<li>GUI-Untermen&uuml;-Icons funktionierten nicht in Windows 2000/XP/Server 2003.</li>
<li>SplashImage beschnitt das Bild, falls H&ouml;he > Breite war.</li>
<li>ComObjConnect gab keinen Alarm, wenn der erste Parameter ung&uuml;ltig war.</li>
<li>SplashImage verwendet jetzt nur noch GDI+, wenn die anderen Methoden aus Kompatibilit&auml;tsgr&uuml;nden fehlschlagen.</li>
<li>Das Tilde-Zeichen in <code>~x::</code> beeinflusst nun <code>x &amp; y::</code> auf die gleiche Weise wie <code>~x &amp; z::</code>, anstatt ohne Effekt.</li>
<li>A_PriorHotkey und A_TimeSincePriorHotkey haben jetzt die erwarteten Werte, wenn mit #If verwendet.</li>
<li>RegExReplace bearbeite den String nicht richtig weiter, nachdem ein &Uuml;bereinstimmungsfehler durch Nicht-ASCII-Zeichen im String auftrat.</li>
</ul>
<h2>1.0.92.02 - 19. Januar 2011</h2>
<p>Speicherleck behoben, der auftrat, wenn der R&uuml;ckgabewert eines Objektaufrufs oder einer internen Funktion nicht verwendet wurde, wie z. B. <code>file.ReadLine()</code> oder <code>SubStr(x,y,z)</code> allein in einer Zeile.</p>
<p>Die Fehlerbehebung von v1.0.92.01 wurde mit einer besseren Fehlerbehebung ersetzt, wodurch auch der Fehler bei <code>k::MsgBox(),x:=y</code> behoben wird und <code>If()</code> nicht defekt ist.</p>
<h2>1.0.92.01 - 18. Januar 2011</h2>
<p>Ge&auml;ndert: FileCreateDir setzt nun A_LastError.</p>
<p>Fehler behoben: <code>GuiControl()</code> oder &Auml;hnliches wurde manchmal als Befehl fehlinterpretiert.</p>

<h2>1.0.92.00 - 13. Januar 2011</h2>
<p>Zus&auml;tzliche Unterst&uuml;tzung f&uuml;r Verbundzuweisungen wie <code>x.y += z</code>.</p>
<p>IniWrite in Unicode-Versionen verbessert, damit die leere Zeile am Anfang jeder neuen Datei nicht mehr auftaucht.</p>
<p>Der Parser ist nun toleranter damit, was nach <code>{</code>/<code>}</code>/<code>Else</code> folgen kann, besonders wenn sie kombiniert werden.</p>

<h2>1.0.91.05 - 1. Januar 2011</h2>
<p>Fehler behoben: Der Cleanup-Code in COM-Methode-Aufrufen gab die falschen Parameter frei.</p>
<p>Fehler behoben (ANSI): DllCall setzte eine inkorrekte L&auml;nge f&uuml;r wstr-Parameter bei der Ausgabe.</p>
<p>Fehler behoben: Variadische Funktionsaufrufe waren instabil, wenn ein param-Objekt leer war.</p>

<h2>1.0.91.04 - 29. Dezember 2010</h2>
<p>Fehler behoben (Unicode): RegExReplace lie&szlig; den ganzen Text bis zur Startposition weg (fehlerhaft seit v1.0.90.00).</p>

<h2>1.0.91.03 - 27. Dezember 2010</h2>
<p>Fehler behoben: RegEx-Callout-Teilausdruck-Variablen - fehlerhaft seit v1.0.90.00.</p>

<h2>1.0.91.02 - 26. Dezember 2010</h2>
<p>COM: Zus&auml;tzlicher Schutz gegen NULL-IDispatch/IUnknown-Pointer.</p>
<p>COM: QueryInterface f&uuml;r IDispatch &uuml;berspringen, sobald VT_DISPATCH direkt &uuml;bergeben wird.</p>
<p>Kleine Fehlerbehebung f&uuml;r die Wartbarkeit: <code>obj.field := var</code> ergibt nun korrekt SYM_STRING, nicht SYM_OPERAND.</p>

<h2>1.0.91.01 - 24. Dezember 2010</h2>
<p>Fehler behoben: Unerwartete Ergebnisse mit <code>File.Write(Str)</code>, nachdem der Text eingelesen wurde.</p>
<p>Fehler behoben: Die &Uuml;berpr&uuml;fung der UTF-St&uuml;ckliste verursachte unerwartete Ergebnisse in Dateien ohne St&uuml;ckliste.</p>
<p>Fehler behoben (ANSI): Parsing-Schleife und <code>File.ReadLine()</code> behandelten <code>Chr(255)</code> als EOF.</p>
<p>Fehler behoben (Unicode): RegExReplace-Fehler, wo sich UTF-8- und UTF-16-L&auml;ngen unterschieden.</p>
<p>Fehler behoben: Deaktiviert den Abbruch von Input durch den letzten Hook-Hotkey.</p>
<p>Hinzugef&uuml;gt: Einfache Optimierungen f&uuml;r RegExMatch/Replace.</p>

<h2>1.0.91.00 - 21. Dezember 2010</h2>
<p><i>Alle &Auml;nderungen in dieser Version beziehen sich auf COM.</i></p>
<p>Hinzugef&uuml;gt: <a href="commands/ComObjError.htm">ComObjError</a> gibt nun die vorherige Einstellung zur&uuml;ck.</p>
<p>Hinzugef&uuml;gt: <a href="commands/ComObjType.htm">ComObjType(co)</a> und <a href="commands/ComObjValue.htm">ComObjValue(co)</a>.</p>
<p>Hinzugef&uuml;gt: <a href="commands/ComObjActive.htm">ComObjMissing()</a>.</p>
<p>Hinzugef&uuml;gt: <a href="commands/ComObjArray.htm">ComObjArray()</a> und einfache SAFEARRAY-Unterst&uuml;tzung.</p>
<p>Hinzugef&uuml;gt: "&Uuml;bernehmen"-Parameter f&uuml;r <a href="commands/ComObjActive.htm">ComObjParameter()</a>.</p>
<p>Ge&auml;ndert: Werte, die an COM-Funktionen mithilfe von ComObjParameter &uuml;bergeben werden, werden nicht l&auml;nger w&auml;hrend dem Aufruf der Funktion freigegeben.</p>
<p>Ge&auml;ndert: <code>ComObj.x()</code> f&auml;llt nun auf PROPERTYGET zur&uuml;ck, wenn Element 'x' nicht gefunden wird. Dadurch werden Fehler in For-Schleifen f&uuml;r einige Objekte behoben.</p>
<p>Ge&auml;ndert: Verpackt unbehandelte Variantentypen in ein Objekt, anstatt einen Integer-Wert zur&uuml;ckzugeben.</p>
<p>Ge&auml;ndert: Verwaltet standardm&auml;&szlig;ig die Lebensdauer von VT_UNKNOWN / VT_ARRAY automatisch.</p>

<h2>1.0.90.00 - 27. November 2010</h2>
<p>Fehler behoben: URLDownloadToFile in Unicode-Versionen niedriger als Windows 7.</p>
<p>Fehler behoben: Gro&szlig;geschriebene ANSI-Zeichen wurden als Alt+0 in der ANSI-Version gesendet.</p>
<p>Fehler behoben: Datei.Pos wurde nach dem Versuch inkorrekt, das letzte EOF einzulesen.</p>
<p>Fehler behoben: Schutzsequenzen in #If-Ausdr&uuml;cke und statischen Initialisierungen.</p>
<p>Fehler behoben: ClipboardAll f&uuml;hrte manchmal zum Absturz des Scripts in bestimmten Formaten.</p>
<p>Fehler behoben: Transform HTML berechnete die L&auml;nge f&uuml;r "&#NNN;"-Entit&auml;ten falsch.</p>
<p>Fehler behoben: VarSetCapacity ignoriert nun korrekterweise #MaxMem bei ByRef-Variablen.</p>
<p>Fehler behoben: FileAppend,,Datei.txt setzt ErrorLevel auf 1, selbst bei Erfolg.</p>
<p>Fehler behoben: &Uuml;bereinstimmungsl&auml;nge wurde bei RegEx-Callouts mit der P)-Option falsch berechnet.</p>
<p>Sean's Verbesserungen f&uuml;r die Zahlhandhabung in eine COM-Interoperation integriert.</p>
<p>RegExReplace und RegExMatch in Unicode-Versionen optimiert.</p>

<h2>Revision 61 - 3. Oktober 2010</h2>
<p>Hinzugef&uuml;gt: <code>ObjClone(Object)</code> wurde vergessen, als <code>Object.Clone()</code> implementiert wurde.</p>
<p>Hinzugef&uuml;gt: Unterst&uuml;tzung f&uuml;r RegEx-Unicode-Eigenschaften in Unicode-Versionen. Au&szlig;erdem wurde PCRE auf 8.10 aktualisiert.</p>
<p>Hinzugef&uuml;gt: <code>Object.Remove(int, "")</code> entfernt <code>Object[int]</code> ohne dabei andere Tasten zu beeinflussen.</p>
<p>Ge&auml;ndert: <code>ComObj.xyz()</code> wird nun immer als Methodenaufruf behandelt.</p>
<p>Ge&auml;ndert: <code>Var := 123</code> bleibt nun aus Konsistenzgr&uuml;nden ein Ausdruck. Dadurch sind <code>Var := 123</code> und <code>Var := (123)</code> gleichwertig, w&auml;hrend fr&uuml;her dem Vorherigen nur ein String und dem Letzteren sowohl ein String als auch ein zwischengespeicherter Bin&auml;r-Integer zugewiesen wurde. Insbesondere werden dadurch einige verwirrende Typenunvertr&auml;glichkeiten mit COM-Objekten verhindert.</p>
<p>Fehler behoben: Dynamische variadische Aufrufe von Funktionen mit vorgeschriebenen Parametern.</p>
<p>Fehler behoben: Der letzte Parameter einer global-angesehenen variadischen Funktion musste eindeutig lokal deklariert werden.</p>
<p>Fehler behoben: Statische Initialisierungen interferieren mit der Einstellung der Haltemarke.</p>
<p>Fehler behoben: Mehr Pointergr&ouml;&szlig;e-Fehler bei PCRE-Callouts in x64-Versionen.</p>
<p>Fehler behoben: Eingabe mit 'M'-Option behandelte Strg+M (<code>`r</code>) als Strg+J (<code>`n</code>).</p>
<p>Fehler behoben: <code>Object.Remove(n)</code> gab 0 zur&uuml;ck (nicht ""), wenn <code>Object[n]</code> nicht vorhanden war.</p>

<h2>Revision 60 - 24. September 2010</h2>
<p>Hinzugef&uuml;gt: <a href="objects/File.htm#Encoding">Datei.Encoding</a> f&uuml;r das &Auml;ndern oder Abrufen des Zeichensatzes mithilfe eines Datei-Objekts.</p>
<p>Hinzugef&uuml;gt: <a href="Functions.htm#Variadic">Variadische Funktionen und Funktionsaufrufe</a> und <a href="commands/RegisterCallback.htm#Indirect">indirekter Modus</a> f&uuml;r Callbacks.</p>
<p>Hinzugef&uuml;gt: <a href="objects/Object.htm#Clone">Object.Clone()</a></p>
<p>Ge&auml;ndert: ByRef-Parameter ben&ouml;tigen nicht l&auml;nger den Aufrufer, um eine Variable zu liefern.</p>
<p>Ge&auml;ndert: <code>Obj.foo := ""</code> gibt nun den Inhalt von foo wie vorgesehen frei (aber entfernt immer noch nicht das Feld).</p>
<p>Ge&auml;ndert: OnMessage-Funktionen tolerieren nun optionale Parameter und ByRef-Parameter.</p>
<p>Ge&auml;ndert: RegisterCallback erm&ouml;glicht nun Ausf&uuml;hrungszugriff auf Callbacks in 32-Bit-Versionen (in 64-Bit-Versionen bereits m&ouml;glich).</p>
<p>Ge&auml;ndert: RegisterCallback behandelt Parameteranzahl = "" eindeutig als weggelassen.</p>
<p>Fehler behoben: For-Schleife behandelte Nicht-Ausdruck "0" als wahr f&uuml;r gescriptete Enumeratoren.</p>
<p>Fehler behoben: ComEvent (ComObjConnect) funktionierte nicht in der ANSI-Version.</p>
<p>Fehler behoben: ComEvent (ComObjConnect) hat nicht korrekt lokale Variablen abgesichert/wiederhergestellt, wenn eine Funktion aufgerufen wurde, die bereits l&auml;uft.</p>
<p>Fehler behoben: Puffer&uuml;berlauf in A_EndChar, wenn kein Endzeichen vorhanden ist.</p>
<p>Fehler behoben: Func->mNextFunc nicht auf NULL initialisiert (wird nur von systemnahen Scripts verwendet).</p>
<p>Debugger: Erm&ouml;glicht das Abrufen des Inhalts vom Objekt (mit einem unterst&uuml;tzten Debugger-Client).</p>
<p>Debugger: Einige Fehler behoben.</p>

<h2>Revision 59 - 12. September 2010</h2>
<p>Fehler behoben: #If <i>Ausdruck</i> sollte nun jeden <i>Ausdruck</i> h&ouml;chstens einmal pro Tastatureingabe in allen F&auml;llen auswerten.
<p>Ge&auml;ndert: SplashImage verwendete g&auml;ngige Bild-ladende Routinen und unterst&uuml;tzt nun PNG und &Auml;hnliches, aber die Ergebnisse unterscheiden sich m&ouml;glicherweise von Icons.</p>
<p>Hinzugef&uuml;gt: <code><a href="commands/For.htm">For</a> x,y in z</code>.</p>
<p>Hinzugef&uuml;gt: <code>Loop .. <a href="commands/Until.htm">Until</a> <i>Ausdruck</i></code>, mit jeder Schleife oder For-Schleife verwendbar.</p>
<p>Hinzugef&uuml;gt: Benannte Schleifen; <code><a href="commands/Continue.htm">continue</a> &auml;u&szlig;ere_Schleife</code>, <code><a href="commands/Break.htm">break</a> 2</code>, usw.</p>
<p>Debugger: Kodiert stdout- und stderr-Pakete in UTF-8.</p>
<p>Debugger: Erlaubt das Abbrechen, <b>Wiederholen</b> oder Ignorieren, wenn die erste Verbindung fehlschl&auml;gt.</p>
<p>Debugger: Erlaubt das <a href="Scripts.htm#debug_attach">Anbringen eines Debugger-Clients</a>, wenn dem Script eine registrierte Fensternachricht gesendet wird.</p>
<p>Debugger: Erlaubt das Abtrennen des Debugger-Clients, wenn der Befehl f&uuml;r das "Abtrennen" von DBGp gesendet wird.</p>

<h2>Revision 58 - 5. September 2010</h2>
<p>Hinzugef&uuml;gt: <code>static Variable := Ausdruck</code></p>
<h2>Revision 57 - 4. September 2010</h2>
<p>Fehler bei den DllCall-R&uuml;ckgabetypen Str*, WStr* und AStr* auf x64 behoben.</p>
<p>Zus&auml;tzliche Funktionalit&auml;t f&uuml;r <a href="Functions.htm#InStr">InStr</a>, um es in Einklang mit StringGetPos zubringen:</p>
<ul>
  <li>Wenn die <i>Startposition</i> negativ ist, dann erfolgt die Suche von rechts nach links, beginnend beim Offset am Ende.</li>
  <li>Ein zus&auml;tzlicher Parameter ist verf&uuml;gbar, um das <i>Vorkommen</i> eines Strings zu bestimmen, der gefunden werden soll.</li>
</ul>
<p><code><a href="commands/_Include.htm">#Include</a> &lt;<i>Bibliotheksname</i>&gt;</code> hinzugef&uuml;gt, um ein Script von einem <a href="Functions.htm#lib">Funktionsbibliotheksordner</a> direkt einzuf&uuml;gen.</p>
<p>Zus&auml;tzliche Funktionalit&auml;t f&uuml;r <a href="commands/IniRead.htm">IniRead</a> und <a href="commands/IniWrite.htm">IniWrite</a>, um eine ganze Sektion zu lesen oder zu schreiben.</p>
<p>Zus&auml;tzliche Funktionalit&auml;t f&uuml;r <a href="commands/IniRead.htm">IniRead</a>, um eine Liste mit Sektionen abzurufen.</p>
<p>Zus&auml;tzliche Unterst&uuml;tzung von <a href="commands/Run.htm#verbs">benutzerdefinierten Verben</a> in Run/RunWait: <code>Run *<i>Verb Datei</i></code>.</p>
<p><a href="Compat.htm#Run">Verbesserungen</a> f&uuml;r die Vorgehensweise von Run/RunWait, die Aktion und seine Parameter vom <i>Ziel</i>-Parameter zu extrahieren.</p>
<p><a href="Functions.htm#NumGet">NumGet</a>/<a href="Functions.htm#NumPut">NumPut</a> ge&auml;ndert, damit <i>Offset</i> ganz weggelassen werden kann, da der <i>Typ</i> immer nicht-numerisch ist.</p>
<p>Einschr&auml;nkung entfernt, dass Label nicht auf das Ende eines Blocks verweisen k&ouml;nnen.</p>

<h2>Revision 56 - 29. August 2010</h2>
<p>Zus&auml;tzliche Unterst&uuml;tzung f&uuml;r x64-kompilierte Scripts. Ben&ouml;tigt Ahk2Exe_L und x64 AutoHotkeySC.bin.</p>
<p>Fehler behoben: Deref-Operator (<code>*addr</code>) hat Adressen au&szlig;erhalb des 32-Bit-Bereichs abgelehnt.</p>
<p>Fehler behoben: <code>#If <i>Ausdruck</i></code> Speicherzuweisungsfehler in der x64-Version.</p>
<p>Fehler behoben: Benutzerdefinierte Hotstring-Endzeichen mit Codepunkte gr&ouml;&szlig;er als U+00FF.</p>
<p>Fehler behoben: Sonderzeichen wurden nicht in der richtigen Reihenfolge von SendInput/Play gesendet.</p>
<p>Fehler behoben: <code>*/</code> wurde in Fortsetzungsbereichen verworfen (siehe L54).</p>

<h2>Revision 55 - 19. August 2010</h2>
<p>Fehler behoben: GroupActivate setzt ErrorLevel nicht auf 1, wenn kein Label angegeben wurde.</p>
<p>Fehler behoben: Tab-Steuerelemente in x64-Versionen.</p>
<p>Fehler behoben: String-kopierender Modus von StrPut, wenn L&auml;nge weggelassen wird; fehlerhaft seit L53.</p>
<p>Fehler behoben: Datenabgleichprobleme in x64-Versionen.</p>
<p>Ge&auml;ndert: A_LastError wird bei mehreren File*-Befehlen gesetzt, um Debuggen zu unterst&uuml;tzen.</p>
<p>Dazu z&auml;hlen FileAppend, FileRead, FileReadLine, FileDelete, FileCopy, FileMove, FileGetAttrib/Time/Size/Version und FileSetAttrib/Time.</p>
<p>Jedoch nicht FileCopyDir, FileRecycle, FileMoveDir, FileRemoveDir, FileRecycleEmpty, FileCreateDir und FileInstall, weil die APIs nicht immer ein Win32-Fehlercode setzen oder zur&uuml;ckgeben.</p>

<h2>Revision 54 - 15. August 2010</h2>
<p>Fehler behoben: RunAs in der Unicode-Version. <a href="http://www.autohotkey.com/forum/viewtopic.php?p=372973#372973">[jackieku]</a></p>
<p>Fehler behoben: RegisterCallback in der x64-Version. <a href="http://www.autohotkey.com/forum/viewtopic.php?p=374773#374773">[fincs]</a></p>
<p>Fehler behoben: Ausf&uuml;hrbare Dateien laufen nicht auf Win2k und WinXP unter SP2. Win2k ben&ouml;tigt SP4 und Updates (wahrscheinlich <a href="http://support.microsoft.com/kb/816542">KB 816542</a>). XP nicht getestet.</p>
<p>Fehler behoben: Dialogfenster wie MsgBox reagierten nicht mehr, wenn sie von anderen Script-Threads unterbrochen wurden. Nachrichtenfilter/&Uuml;bergangsl&ouml;sung von L45 wurde entfernt. <a href="http://www.autohotkey.com/forum/viewtopic.php?p=358029#358029">[Fehlerbericht]</a></p>
<p>Fehler behoben: Multi-Byte-Zeichen im Standard-ANSI-Zeichensatz; verursachte auch ein Speicherleck. <a href="http://www.autohotkey.com/forum/viewtopic.php?p=375342#375342">[Fehlerbericht]</a></p>
<p>Fehler behoben: ComObject erlaubt nun reine numerische Eigenschafts-/Methodennamen. <a href="http://www.autohotkey.com/forum/viewtopic.php?p=375393#375393">[Fehlerbericht]</a></p>
<p>Benutzerfreundlichkeit und Funktionen von FileOpen/Datei-Objekten verbessert.</p>
<ul>
  <li><i>Flags</i>-Parameter von FileOpen akzeptiert einen von Menschen lesbaren String mit Flags.</li>
  <li>Die "update"-Methode von FileOpen wurde in "read/write" umbenannt und erstellt nun die Datei, wenn sie nicht vorhanden ist.</li>
  <li>FileOpen setzt A_LastError wie vorgesehen.</li>
  <li><code>Datei := FileOpen(handle,"h")</code> verpackt eine vorhandene Datei in ein Objekt.</li>
  <li><code>Datei.Seek(n)</code> benutzt standardm&auml;&szlig;ig SEEK_END, wenn n negativ ist.</li>
  <li><code>Datei.Pos</code> (oder <code>Datei.Position</code>) kann anstelle von Tell und Seek verwendet werden.</li>
  <li><code>Datei.Pos</code>, <code>Datei.Length</code>, <code>Datei.AtEOF</code> und <code>Datei.__Handle</code> kann ohne leere Klammern<code>()</code> verwendet werden.</li>
  <li><code>Datei.Length</code> kann wie in <code>Datei.Length:=n</code> gesetzt werden.</li>
  <li><code>Datei.Read<i>Num</i>()</code> and <code>Datei.Write<i>Num</i>(n)</code> schreibt oder liest eine Zahl, wobei <i>Num</i> ein NumGet-kompatibler Typenname ist.</li>
  <li><code>Datei.WriteLine(s)</code> ist gleichwertig mit <code>Datei.Write(s "`n")</code>, als Ausgleich f&uuml;r <code>File.ReadLine()</code>.</li>
  <li><code>Datei.Read()</code> liest und gibt den Rest der Datei zur&uuml;ck, wenn keine Parameter verwendet werden.</li>
  <li>Datei-Objekte gibt nun "" bei unbekannten Methoden und bei ung&uuml;ltiger Syntax zur&uuml;ck, anstatt die numerische <i>Adresse</i> von "".</li>
</ul>
<p>Ge&auml;ndert: Der Label-Parameter von GroupAdd gilt nun f&uuml;r die gesamte Gruppe. <a href="http://www.autohotkey.com/forum/topic61362.html">[Diskussion]</a></p>
<p>Ge&auml;ndert: GroupActivate setzt ErrorLevel bei Erfolg/Misserfolg. (Die gleiche Diskussion wie oben)</p>
<p>Ge&auml;ndert: <code>*/</code> am Anfang einer Zeile wird ignoriert, wenn kein <code>/*</code> vorhanden ist. <a href="http://www.autohotkey.com/forum/topic61109.html">[Diskussion]</a></p>
<p>Die Unterbefehle ToCodePage und FromCodePage von Transform wurden entfernt.</p>

<h2>Revision 53 - 8. August 2010</h2>

<p><b>Mit AutoHotkey64 zusammengef&uuml;hrt</b> - COM-Unterst&uuml;tzung und x64-Kompatibilit&auml;t.</p>
<p><b>x64</b> (<i>&Auml;nderungen seit AutoHotkey64</i>):</p>
<ul>
  <li>Fehler bei Flie&szlig;komma-R&uuml;ckgabewerten und DllCall-Ausnahmebehandlung behoben.</li>
  <li>Fehler bei RegEx-Callouts behoben.</li>
  <li>GetProcAddress-Optimierung f&uuml;r DllCall wieder aktiviert.</li>
  <li>NumPut und NumGet benutzen standardm&auml;&szlig;ig "Int64" in x64-Versionen.</li>
</ul>
<p><b>COM</b> (<i>&Auml;nderungen seit AutoHotkey64</i>):</p>
<ul>
  <li>Erlaubt ComObjParameter das Verpacken von 64-Bit-Werte in 32-Bit-Versionen.</li>
  <li>Noch mehr Standard-Referenzz&auml;hlung-Konventionen in ComObjActive implementiert.</li>
  <li>Fremdes AddRef f&uuml;r neue ComObjects werden in bestimmten F&auml;llen verhindert.</li>
  <li>R&uuml;ckgabewert von pdispVal == NULL wird beim Aufruf nicht als Fehler behandelt.</li>
  <li>Ein Fehlschlag ist vorhersehbarer, wenn ein falscher Typ des Objekts &uuml;bergeben wird.</li>
  <li>Der zweite Parameter in ComObjType wird direkt ben&ouml;tigt, ohne dabei "IID" zu &uuml;bernehmen.</li>
  <li>Lokale Variablen werden freigegeben, nachdem ComEvent eine Funktion aufgerufen hat.</li>
  <li>Den pVarResult-Parameter von ComEvent wurde entfernt; verwendet stattdessen den R&uuml;ckgabewert.</li>
  <li>Das originale Wrapper-ComObject wird bei jedem ComEvent-Aufruf &uuml;bergeben.</li>
  <li>Kontext bei ComError-Dialogfenster hinzugef&uuml;gt; die Schaltfl&auml;chen sind eindeutiger.</li>
</ul>
<p>G&auml;ngige Syntaxvalidierung f&uuml;r Enumeratoren implementiert. <code>Enum[]</code> und <code>Enum.Next()</code> werden nun mit oder ohne Parameter unterst&uuml;tzt. <code>Enum[]:=Wert</code> und &auml;hnliche unklare Formen, die in AutoHotkey_COM/AutoHotkey64 funktionierten, sind nicht mehr erlaubt.</p>
<p>"Ptr"-Type ist f&uuml;r maximale Flexibilit&auml;t und Konsistenz immer noch signed (im Gegensatz zu AutoHotkey64).</p>
<p><b>Weitere &Auml;nderungen:</b></p>
<p>Hinzugef&uuml;gt: <code>Objekt.<b>HasKey</b>(Schl&uuml;ssel)</code>.</p>
<p>Hinzugef&uuml;gt: <code>Object(obj)</code>erh&ouml;ht die Referenzz&auml;hlung von obj und gibt dessen Adresse zur&uuml;ck.</p>
<p>Hinzugef&uuml;gt: <code>ObjAddRef()</code> und <code>ObjRelease()</code>.</p>
<p>Fehler behoben: A_ThisHotkey hat jetzt den erwarteten Wert, wenn mit #If verwendet.</p>
<p>Fehler behoben: RunAs in der Unicode-Version (Fehler von jackieku behoben).</p>
<p>Ge&auml;ndert: Standard-Script-Zeichensatz f&uuml;r ANSI-Version ist nun CP0 (ANSI).</p>
<p>Ge&auml;ndert: <code>x.y[]</code> ist nun gleichwertig mit <code>(x.y)[]</code> anstatt mit <code>x["y"]</code>.</p>
<p>Ge&auml;ndert: Interne Methoden k&ouml;nnen nun mit oder ohne Unterstrich-Pr&auml;fix aufgerufen werden (z. B. <code>obj.MaxIndex()</code> oder <code>obj._MaxIndex()</code>).</p>

<h2>Revision 52 (nochmal) - 10. Juli 2010</h2>
<p>Zus&auml;tzliche Unterst&uuml;tzung f&uuml;r interne Variablen und Umgebungsvariablen in Doppeldereferenzen.</p>
<p>Verbesserte Unterst&uuml;tzung f&uuml;r Multi-Byte-Zeichen in bestimmten Zeichens&auml;tzen (bisher wurden nur 932, 936, 949, 950 und 1361 unterst&uuml;tzt).</p>
<p>Fehler behoben: StrPut schlug bei Zeichens&auml;tzen fehl, die WC_NO_BEST_FIT_CHARS wie UTF-7 nicht unterst&uuml;tzten.</p>
<p>Fehler behoben: Doppeldereferenz als Objekt - <code>literal%var%.literal</code>.</p>
<p>Fehler behoben: <code>StrPut("", Kodierung)</code> 0-terminierte eine ung&uuml;ltige Adresse.</p>

<h2>Revision 52 - 12. Juni 2010</h2>
<p>Fehler behoben: Der Schl&uuml;sselparameter von ObjRemove ist wie bei <a href="objects/Object.htm#Remove">Object._Remove</a> nun optional.</p>
<p>Fehler behoben: Dateien wurden im Gegensatz zu &auml;lteren Versionen w&auml;hrend des Lesens nicht ordnungsgem&auml;&szlig; gesperrt.</p>
<p>Fehler behoben: Gro&szlig;geschriebenes Hex-Format verursachte negative Integer, dass unsigned zu Folge hatte.</p>
<p>Fehler behoben: RegExMatch machte Ausgabe-Array-Elemente unbrauchbar, wenn bestimmte Bedingungen erf&uuml;llt wurden. Siehe <a href="http://www.autohotkey.com/forum/topic59120.html">Fehlerbericht</a>.</p>

<h2>Revision 51 - 11. April 2010</h2>
<p>Ge&auml;ndert: Verwendet &lt;EXENAME&gt;.ahk anstelle von AutoHotkey.ini oder AutoHotkey.ahk.</p>
<p>Ge&auml;ndert: Verwendet standardm&auml;&szlig;ig UTF-8 f&uuml;r Script-Dateien; mit /CPnnn &uuml;berschreiben.</p>
<p>Fehler behoben: Hebt die Pause auf, falls das Script beendet wird, damit die __Delete-Metafunktion des Objekts ausgef&uuml;hrt werden kann.</p>

<h2>Revision 50 - 27. M&auml;rz 2010</h2>
<p>Verbesserte Flexibilit&auml;t f&uuml;r <a href="objects/Object.htm#Insert">Objekt._Insert</a>.
<ul>
  <li><code>Objekt._Insert(x)</code> - x wird bei <code>_MaxIndex()="" ?</code> eingef&uuml;gt<code> 1 : _MaxIndex() + 1</code>.</li>
  <li><code>Objekt._Insert(i,x,y,z)</code> - <code>x,y,z</code> wird bei <code>i,i+1,i+2</code> eingef&uuml;gt.</p></li>
</ul>
<p>Verbesserte Flexibilit&auml;t f&uuml;r <a href="objects/Object.htm#Remove">Objekt._Remove</a>.
<ul>
  <li><code>Objekt._Remove(k)</code> - entfernt und gibt den Wert von k zur&uuml;ck.</li>
  <li><code>Objekt._Remove()</code> - entfernt und gibt den Wert von _MaxIndex() zur&uuml;ck.</p></li>
</ul>
<p>Freigabemodus-Flags f&uuml;r FileOpen hinzugef&uuml;gt [von jackieku].</p>
<p>Fehler behoben: P-Option von RegExMatch gab f&auml;lschlicherweise 1 f&uuml;r Teilausdr&uuml;cke zur&uuml;ck, dass mit nichts &uuml;bereinstimmte.</p>
<p>Fehler behoben: <code>Objekt._SetCapacity(Schl&uuml;ssel,n)</code> wurde in einigen F&auml;llen nicht 0-terminiert.</p>
<p>Fehler behoben: StatusBarGetText gab nur den halben Text in den Unicode-Versionen zur&uuml;ck.</p>

<h2>Revision 49 - 14. M&auml;rz 2010</h2>
<p><a href="objects/Object.htm#NewEnum">obj._NewEnum()</a> hinzugef&uuml;gt.</p>
<p><a href="objects/Object.htm">ObjMethod(obj)</a> f&uuml;r jede interne <code>obj._Method()</code> hinzugef&uuml;gt.</p>
<p>Ge&auml;ndert: ObjSet/Get/Call kann nicht l&auml;nger vom Script aufgerufen/&uuml;berschrieben werden.</p>
<p>Fehler behoben: Potentieller Absturz durch die VK_PACKET-&Uuml;berpr&uuml;fung, die in L48 hinzugef&uuml;gt wurde.</p>
<p>Fehler behoben: Zeichencodes in VK_PACKET-Ereignisse wurden potenziell als Scancodes fehlinterpretiert.</p>
<p>Fehler behoben: Ausnahmetext wurde nach dem ersten &uuml;bereinstimmenden Steuerelement ineffektiv.</p>

<h2>Revision 48 - 21. Februar 2010</h2>
<p>Fehler behoben: Alleinstehendes <code>obj.()</code> wurde nicht als g&uuml;ltiger Ausdruck erkannt.</p>
<p>ControlSend verwendet nun WM_CHAR, um Zeichen zu unterst&uuml;tzen, die keinen dazugeh&ouml;rigen Tastencode haben.  Zum Beispiel gilt das f&uuml;r "?" (en-US), Unendlichzeichen in einer Unicode-Version und <code>{U+221e}</code> in jeder Version.</p>
<p>KeyHistory zeigt nun den kompletten 16-Bit-Zeichencode von VK_PACKET-Ereignisse (VK=E7) an.  Mit <a href="commands/Send.htm#Unicode">Send</a> wurden sie m&ouml;glicherweise f&uuml;r Unicode-Zeichen erzeugt.</p>

<h2>Revision 47 - 13. Februar 2010</h2>
<p>Fehler behoben (Unicode): ControlGet,List mit ListView-Steuerelemente.</p>

<h2>Revision 46 - 11. Februar 2010</h2>
<p>A_FileEncoding hinzugef&uuml;gt, um die aktuelle Standard-Dateikodierung zur&uuml;ck zugeben.</p>
<p><a href="commands/StrPutGet.htm">StrPut</a> hinzugef&uuml;gt und <a href="commands/StrPutGet.htm">StrGet</a> mit zus&auml;tzlichen Funktionen erweitert.</p>

<h2>Revision 45 - 8. Februar 2010</h2>
<p>_GetAddress hinzugef&uuml;gt; _SetCapacity/_GetCapacity bearbeitet nun m&ouml;glicherweise ein gegebenes Feld.  <a href="objects/Object.htm">[mehr Information]</a></p>
<p>&Uuml;bergangsl&ouml;sung f&uuml;r WM_PAINT-Endlosschleifen hinzugef&uuml;gt, die h&auml;ufig durch Unterklassen verursacht wurden.</p>
<p>Erlaubt <code>obj.()</code>, um die Standard-Methode eines Objekts aufzurufen; vergleichbar mit <code>obj[""]()</code>.</p>
<p>Entwickler: L&ouml;sung und Projekt-Dateien f&uuml;r MSBuild 4.0 &amp; VS2010 hinzugef&uuml;gt.  <a href="http://github.com/Lexikos/AutoHotkey_L/commit/ed81ea089c223b46c883036c14454aa4386d3801">[mehr Information]</a></p>
<p>Fehler behoben (Unicode): 'Running'-Spalte in ListHotkeys.</p>

<h2>Revision 44 - 7. Februar 2010</h2>
<p>Fehler behoben: Der Versuch "nichts" zu setzen, f&uuml;hrte zum Absturz des Scripts. Zum Beispiel <code>x[]:=z</code>.</p>
<p>Fehler behoben (Unicode): Nicht in der Lage, das Standard-Script zu finden (Documents\AutoHotkey.ahk).</p>
<p>Fehler behoben (Unicode): A_Desktop, A_ProgramFiles und mehrere andere interne Variablen, die deren Wert aus der Registrierung lesen, terminierten Strings nicht richtig.</p>
<p>Fehler behoben (ANSI): Zeichen im Bereich 0x80 bis 0xFF konnten nicht von InStr oder StringReplace gefunden werden.</p>
<p>Ge&auml;ndert (ANSI): Behandelt ToCodePage/FromCodePage wie andere nicht unterst&uuml;tzte/ung&uuml;ltige Unterbefehle.</p>

<h2>Revision 43 - 29. Januar 2010</h2>
<p>Fehler behoben: obj.Func() gibt eine zuf&auml;llige Integer zur&uuml;ck, wenn es ein leerer String sein soll.</p>

<h2>Revision 42 - 28. Januar 2010</h2>
<p>Mit AutoHotkeyU zusammengef&uuml;hrt.</p>
<p>Zahlreiche Fehlerbehebungen und Verbesserungen, einige im Zusammenhang mit der Zusammenf&uuml;hrung.</p>

<h2>Revision 41 - 20. Dezember 2009</h2>
<p>Fehler behoben: Flie&szlig;kommazahlen waren gleichwertig mit einem leeren String, wenn sie als Schl&uuml;ssel in Objekten verwendet wurden.  Sie werden nun wie vorgesehen in numerische Strings umgewandelt, abh&auml;ngig vom <a href="commands/SetFormat.htm">Flie&szlig;komma-Format</a>.</p>

<h2>Revision 40 - 13. Dezember 2009</h2>
<p>Das Verhalten von Meta-Funktionen und Multi-Parameter wurde ge&auml;ndert, um die Flexibilit&auml;t zu verbessern.  Meta-Funktionen werden nun aufgerufen, *bevor* nach einem geeigneten Feld in jedem Basis-Objekt gesucht wird; Werte in x.base werden Meta-Funktionen allerdings &uuml;berschreiben, die in x.base.base definiert wurden.  Die Verkettung von Meta-Funktionen (Vererbung) ist nun m&ouml;glich, indem "Return" vermieden wird.</p>
<p>Verbesserte Standardbasis-Funktionalit&auml;t, um best&auml;ndiger mit realen Objekten zu sein.</p>
<p>Ge&auml;ndert (Debugger): W&auml;hrend der Code durchlaufen wird, werden alle Klammern &uuml;bersprungen, nur nicht solche, die eine Funktion beenden.</p>
<p>Ge&auml;ndert (Debugger): Das versteckte "Exit" am Ende des Scripts befindet sich nun *unter* der letzten physischen Zeile, um Verwirrung zu vermeiden.</p>

<h2>Revision 39 - 2. Dezember 2009</h2>
<p>Fehler behoben (Debugger): Fehler in der Base64-Dekodierung, die von property_set verwendet wird.</p>

<h2>Revision 38 - 17. November 2009</h2>
<p>Hinzugef&uuml;gt: <a href="commands/_MenuMaskKey.htm">#MenuMaskKey</a>-Anweisung, um eine Taste zu bestimmen, die Alt/Win-Up-Ereignisse verbirgt.  Siehe <a href="http://www.autohotkey.com/forum/topic22378.html">diesen Thread</a> f&uuml;r Hintergrundinformationen.</p>
<p>Ge&auml;ndert: Wenn <code>x[1,2]:=3</code> ein Objekt f&uuml;r <code>x[1]</code> erstellt, dann wird dessen Basis nicht l&auml;nger auf <code>x.base</code> gesetzt.  Siehe <a href="Objects.htm#Subclassing_aoa">die Dokumentation</a> f&uuml;r ein Verfahren zur Steuerung dieses Verhaltens.</p>

<h2>Revision 37 - 7. November 2009</h2>
<p>Hinzugef&uuml;gt: Unterst&uuml;tzung f&uuml;r die Objektaufrufsyntax <code>obj[Methodenname](Parameter)</code>.</p>

<h2>Revision 36 - 4. November 2009</h2>
<p>Ge&auml;ndert: Wenn nach <code>x.y</code> oder &Auml;hnliches unmittelbar eine &ouml;ffnende eckige Klammer (<code>[</code>) erfolgt, dann wird die Kennung ganz rechts vor der Klammer als erster Parameter der Operation behandelt.  Zum Beispiel ist <code>a.b.c[d]</code> gleichwertig mit <code>ObjGet(a.b,"c",d)</code> und <code>x.y[z]:=v</code> ist gleichwertig mit <code>ObjSet(x,"y",z,v)</code>. Zuvor wurde jeder Unterausdruck vor einer eckigen Klammer separat ausgewertet.</p>
<p>Ge&auml;ndert: Wenn nach einem Methodenaufruf wie <code>x.y()</code> unmittelbar eine Zuweisung erfolgt, dann werden die Klammern als eckige Klammern behandelt. Zum Beispiel ist <code>x.y(z):=v</code> nun gleichwertig mit <code>ObjSet(x,"y",z,v)</code>.</p>
<p>Fehler behoben: If(Ausdruck) und While(Ausdruck) ohne trennendes Leerzeichen oder Komma.</p>

<h2>Revision 35 - 25. Oktober 2009</h2>
<p>Fehler behoben: Alleinstehende Ausdr&uuml;cke mit zwei oder mehr "Punkten" am Anfang, wie z. B. <code>x.y.z()</code> (fehlerhaft seit L34) Beachtet, dass '(' oder '[' oder ':=' immer noch notwendig ist.</p>

<h2>Revision 34 - 24. Oktober 2009</h2>
<p>Ge&auml;ndert: Das Setzen eines Wertes auf einen leeren String innerhalb eines Objekts speichert nun den leeren String, anstatt das Schl&uuml;ssel-Wert-Paar vom Objekt zu entfernen.  _Remove kann immer noch verwendet werden, um Schl&uuml;ssel-Wert-Paare vollst&auml;ndig zu entfernen.</p>
<p>Ge&auml;ndert: Befehlsnamen m&uuml;ssen mit einem Leerzeichen, Tabulator oder Komma terminiert werden.  Die folgenden Zeichen umgehen nicht l&auml;nger diese Anforderung: <span class="Code">&lt;&gt;:+-*/!~&amp;|^[]</span>.  Zum Beispiel werden Syntaxfehler wie <span class="Code">MsgBox&lt; foo</span> und <code>If!foo</code> nun bei der Ladezeit abgefangen.</p>
<p>Fehler behoben: Return behandelt nun Ausdr&uuml;cke korrekt, wodurch eine Variable ein Objekt enthalten kann.  Zum Beispiel sollte <code>Return x:=y</code>, <code>Return (x)</code>, <code>Return x,...</code> und &auml;hnliches nun richtig funktionieren (<code>Return x</code> hat bereits funktioniert).</p>
<p>Fehler behoben: Multi-Parameter get/set unterst&uuml;tzte Meta-Funktionen f&uuml;r mehrere Objekte nicht richtig (wie z. B. f&uuml;r <code>x</code> <i>und</i> <code>x[y]</code> im Ausdruck <code>x[y,z]</code>).</p>
<p>Fehler behoben: Hintereinanderfolgende Objektzuweisungen wie z. B. <code>x[y]:=z</code> in <code>r:=x[y]:=z</code> ergaben keine Zahlen oder Objekte - fehlerhaft seit L33.</p>
<p>Fehler behoben: <code>x._Remove(y)</code> f&uuml;hrte zum Absturz des Scripts oder entfernte das falsche Element, wenn <code>x</code> nicht <code>y</code> enthielt.</p>
<p>Fehler behoben: <code>x.=y</code>, <code>If x.y=...</code> und &Auml;hnliches.  Betrifft wahrscheinlich auch andere Ausdr&uuml;cke.</p>
<p>Fehler behoben: Allein stehende tern&auml;re Ausdr&uuml;cke ben&ouml;tigen nicht l&auml;nger Leerr&auml;ume.  Zum Beispiel ist <code>x? F(1) : F(2)</code> nicht l&auml;nger erlaubt.</p>
<p>Debugger: Beim Beenden des Scripts wird der Debugger getrennt, *nachdem* Objekte freigegeben wurden, um das Debuggen von __Delete-Handler zu erm&ouml;glichen.</p>

<h2>Revision 33 - 3. Oktober 2009</h2>
<p>Fehler behoben: Lokale Variablen wurden nicht automatisch f&uuml;r Funktionen freigegeben, die Objekte oder reine Zahlen zur&uuml;ckgaben.</p>
<p>Fehler behoben: Zwei separate Referenzz&auml;hlungsfehler beim tern&auml;ren Operator und Object().</p>
<p>Fehler behoben: Wenn einer Variable ein String zugewiesen wurde, der von einer gescripteten Objektfunktion zur&uuml;ckgegeben wurde, dann wurde die L&auml;nge der Variable falsch gesetzt.</p>
<p>Fehler behoben: Wenn die letzte Operation in einem Ausdruck einen String aus einem tempor&auml;ren Objekt ermittelte, dann wurde das Objekt und der String vorzeitig freigegeben.</p>
<p>Fehler behoben: Numerische Strings mit speziellen Formatierungen wurden nicht beibehalten, wenn sie von einer Funktion mittels einer Variable zur&uuml;ckgegeben oder an einer rekursiven Funktion weitergegeben wurde.</p>
<p>Fehler behoben: Wenn das Endergebnis eines Ausdrucks (mit Ausnahme von Return) ein Objekt ist, dann wird korrekt ein leerer String ausgegeben, anstatt den Thread unauff&auml;llig zu abzubrechen.</p>
<p>Fehler behoben: __Delete-Meta-Funktionen &uuml;berschrieb manchmal tempor&auml;re Werte im Dereferenz-Zwischenspeicher.</p>
<p>Hinzugef&uuml;gt: Eine ermittelte Adresse mittels &amp;object kehrt m&ouml;glicherweise mithilfe von Object(Adresse) als Objektreferenz zur&uuml;ck.</p>

<h2>Revision 32 - 26. September 2009</h2>
<p>Fehler behoben: Send/PostMessage f&uuml;hrt zum Absturz, wenn weniger als drei Parameter angegeben wurden.</p>

<h2>Revision 31 - 26. September 2009</h2>
<p>Hinzugef&uuml;gt: Objekt/Array-Unterst&uuml;tzung und zahlreiche kleinere &Auml;nderungen, um das zu erm&ouml;glichen.</p>
<p>Hinzugef&uuml;gt: Unterst&uuml;tzung f&uuml;r While(Ausdruck) ohne Leerr&auml;ume.</p>
<p>Hinzugef&uuml;gt: Trim, LTrim, RTrim.</p>
<p>Hinzugef&uuml;gt: A ~= B; entspricht RegExMatch(A, B).  Das wird m&ouml;glicherweise in einer zuk&uuml;nftigen Version entfernt.</p>
<p>Fehler behoben: Eine Inkompatibilit&auml;t mit LowLevel.</p>
<p>Ge&auml;ndert: Die Zeichen [, ] und ? sind nicht l&auml;nger in Variablennamen g&uuml;ltig.  Folglich ben&ouml;tigt ? (tern&auml;r) nicht l&auml;nger ein Leerzeichen auf jeder Seite.</p>
<p>Ge&auml;ndert: Optionale Parameter k&ouml;nnen nun &uuml;berall in der Parameterliste eines nicht-dynamischen Funktionsaufrufs weggelassen werden. Da das mittels Einf&uuml;gen des Parameter-Standardwerts w&auml;hrend der Ladezeit funktioniert, wird es nicht unterst&uuml;tzt und ist f&uuml;r dynamische Funktionsaufrufe nicht erlaubt.</p>
<p>Debugger: Verschiedene kleinere &Auml;nderungen, um den Programmablauf zu vereinfachen, w&auml;hrend der Code durchlaufen wird.</p>
<p>Optimierung: Wenn der erste Parameter von DllCall ein direkt vorhandener String ist, der einer bereits vorhandenen Funktion im Speicher entspricht, dann wird er mit der aktuellen Adresse der Funktion ersetzt.</p>
<p>Von v1.0.48.03 auf v1.0.48.04 aktualisiert.</p>

<h2>Revision 30 - 31. Mai 2009</h2>
<p>Von v1.0.48.02 auf v1.0.48.03 aktualisiert.</p>

<h2>Revision 29 - 2. Mai 2009</h2>
<p>Alle unterst&uuml;tzten Bildformate k&ouml;nnen jetzt als Men&uuml;-Icons verwendet werden.  Derzeit ist es notwendig, die tats&auml;chliche Gr&ouml;&szlig;e anzugeben, wenn die Transparenz des Icons in Windows Vista oder h&ouml;her bewahrt werden soll. Zum Beispiel:
<pre>Menu, Men&uuml;name, Icon, Men&uuml;punktname, Dateiname.png,, 0</pre></p>

<h2>Revision 28 - 2. Mai 2009</h2>
<p>Verbesserte durchschnittliche Performance von dynamischen Funktionsaufrufen mittels Implementierung von bin&auml;rer Suche nach Funktionsnamen. Diese &Auml;nderung gilt auch f&uuml;r andere Bereiche, wie Aufl&ouml;sung von Funktionsreferenzen in Ausdr&uuml;cken w&auml;hrend der Ladezeit und Aufl&ouml;sung von OnMessage, RegisterCallback, etc. w&auml;hrend der Laufzeit.</p>

<h2>Revision 27 - 26. April 2009</h2>
<p>Von v1.0.48.00 auf v1.0.48.02 aktualisiert.</p>

<h2>Revision 26 - 11. April 2009</h2>
<p>Fehler behoben: Men&uuml;-Icons wurden nicht bei Elementen gezeichnet, die Untermen&uuml;s haben, wenn Owner-Drawing verwendet wurde.</p>
<p>Fehler behoben: Men&uuml;-Icons wurden nicht freigegeben, wenn alle Men&uuml;punkte gleichzeitig gel&ouml;scht wurden.</p>
<p>Ge&auml;ndert (Source): AutoHotkey.sln in AutoHotkey_L.sln umbenannt, damit das VS-Fenster leichter identifiziert werden kann.</p>

<h2>Revision 25 - 30. M&auml;rz 2009</h2>
<p>Fehler behoben: Send {U+xxxx} setzt nun korrekt den Modifikatorstatus wie bei normalen Tasten.</p>
<p>Fehler behoben: Send {U+..xx} l&ouml;st nicht l&auml;nger Hotkey SCxx aus.</p>

<h2>Revision 24 - 30. M&auml;rz 2009</h2>
<p>Hinzugef&uuml;gt: Unterst&uuml;tzung f&uuml;r Send {U+xxxx}. SendInput() wird verwendet, wenn eine ordnungsgem&auml;&szlig;e Unicode-Unterst&uuml;tzung verf&uuml;gbar ist, ansonsten wird wieder Alt+Numpad benutzt.</p>

<h2>Revision 23 - 30. M&auml;rz 2009</h2>
<p>Fehler behoben: GuiControl, Enable/Disable setzt den Fokus nur noch neu, wenn das fokussierte Steuerelement deaktiviert war.</p>

<h2>Revision 22 - 26. M&auml;rz 2009</h2>
<p>If var [not] in/contains &Uuml;bereinstimmungsliste optimiert, besonders f&uuml;r lange Listen mit kurzen Feldern.</p>

<h2>Revision 21 - 16. M&auml;rz 2009</h2>
<p>Kleinere Optimierungen f&uuml;r While. [Danke, Chris]</p>
<p>Fehler behoben (Debugger): Revisionen 19 und 20 lie&szlig; Timer-Threads von der Aufrufliste weg.</p>
<p>Fehler behoben (Debugger): XML-reservierte Zeichen wurden in den meisten F&auml;llen nicht gesch&uuml;tzt.</p>
<p>Fehler behoben (Debugger): Falscher Befehl und transaction_id wurden in der letzten Antwort verwendet, bevor das Script beendet wurde.</p>

<h2>Revision 20 - 27. Februar 2009</h2>
<p>Ge&auml;ndert: Wenn ein Icon nicht mit einer neuen Methode geladen werden kann, dann soll die alte Methode wieder verwendet werden.</p>

<h2>Revision 19 - 26. Februar 2009</h2>
<p>Hinzugef&uuml;gt: Neue Option Gui, Font, qN, um die Schriftartqualit&auml;t zu setzen bzw. Anti-Aliasing zu kontrollieren, wobei N zwischen 0 und 5 liegt.</p>
<p>Fehler behoben: IL_Add l&auml;dt nun Icons in der geeignetsten Gr&ouml;&szlig;e, wenn mehrere Gr&ouml;&szlig;en vorhanden sind.</p>
<p>Mit AutoHotkey v1.0.48 zusammengef&uuml;hrt, f&uuml;r Fehlerbehebungen, Optimierungen und anderen &Auml;nderungen von Chris. Einige AutoHotkey_L-Funktionen wurden in der Hauptversion integriert; folgende &Auml;nderungen wurden an diesen Funktionen seit den vorherigen Revisionen vorgenommen:</p>
<ul>
  <li>Verhaltensmuster gilt nicht l&auml;nger f&uuml;r While - z. B. wird "While %x%" korrekt als Doppeldereferenz anstelle von "While x" interpretiert.</li>
  <li>One-True-Brace-Stil wird nun f&uuml;r While unterst&uuml;tzt.</li>
  <li>Statische Variablen k&ouml;nnen nun in statisch-angenommenen Funktionen deklariert und initialisiert werden.</li>
  <li>Die &Uuml;bergabe von zu <em>wenigen</em> Parametern an einem dynamischen Funktionsaufruf ist nicht mehr zul&auml;ssig, da der Aufrufer der Funktion den Designer der Funktion im Nachhinein anzweifeln kann, das Erkennen von Script-Fehlern w&auml;hrend der Laufzeit einschr&auml;nkt wird und zum Absturz der Anwendung f&uuml;hren kann, wenn eine interne Funktion aufgerufen wird.</li>
</ul>

<h2>Revision 18 - 21. Februar 2009</h2>
<p>Fehler behoben: Durch die unvollst&auml;ndige Fehlerbehebung in der vorherigen Revision bewirkte eine Verkettung gefolgt von einer Zuweisung, dass der Rest des Ausdrucks in einigen F&auml;llen &uuml;bersprungen wurde.</p>

<h2>Revision 17 - 20. Februar 2009</h2>
<p>Hinzugef&uuml;gt: Men&uuml;-Icons mithilfe der Unterbefehle Icon und NoIcon im Menu-Befehl.</p>
<p>Ge&auml;ndert: Negative Iconnummern k&ouml;nnen nun verwendet werden, um einen Ressourcen-Bezeichner innerhalb einer ausf&uuml;hrbaren Datei zu kennzeichnen.</p>
<p>Ge&auml;ndert: Standard-Style von Men&uuml;s um MNS_CHECKORBMP erweitert.</p>
<p>Ge&auml;ndert: Sowohl die kleinen als auch gro&szlig;en Versionen von benutzerdefinierten Tray-Icons werden geladen, damit die richtigen Icons an den geeigneten Stellen angezeigt werden.</p>
<p>Fehler behoben: Das Laden von Icons von ausf&uuml;hrbaren Dateien mit anderen Gr&ouml;&szlig;en als die Systemgr&ouml;&szlig;e klein/gro&szlig;.</p>

<h2>Revision 16 - 4. Februar 2009</h2>
<p>Fehler behoben: Das L&ouml;schen eines Men&uuml;punktes l&ouml;schte teilweise auch sein dazugeh&ouml;riges Untermen&uuml;.</p>

<h2>Revision 15 - 1. Februar 2009</h2>
<p>Fehler behoben: Die Pr&auml;senz von SetFormat in einem *kompiliertem* Script deaktivierte nicht den Bin&auml;rzahl-Schreibcache. SetFormat sollte nun ordnungsgem&auml;&szlig; in kompilierten Scripts funktionieren.</p>

<h2>Revision 14 - 1. Februar 2009</h2>
<p>Zahlreiche Fehlerbehebungen und Optimierungen von Chris (pre-v1.0.48 beta).</p>
<p>Hinzugef&uuml;gt: Unterst&uuml;tzung f&uuml;r RegEx-Callouts und die Auto-Callout-Option 'C'.</p>
<p>Ge&auml;ndert: A_AhkVersion beinhaltet nun die Revisionsnummer. Zum Beispiel 1.0.47.07.L14.</p>
<p>Fehler behoben: HWND's/Fenster-ID's wurden per Vorzeichen auf 64-Bit erweitert. Zum Beispiel wurde 0xb482057e zu 0xffffffffb482057e.</p>

<h2>Revision 13 - 29. November 2008</h2>
<p>Fehler behoben: Ung&uuml;ltige DllCall-Typen wurden als INT in einigen Versionsumgebungen behandelt.</p>
<p>Hinzugef&uuml;gt: &Uuml;bergangsl&ouml;sung f&uuml;r das GuiEscape-Problem beim Deaktivieren des fokussierten Steuerelements.</p>
<p>Ge&auml;nderte Versionsinformation: InternalName, ProductName und FileDescription sind nun "AutoHotkey_L" anstelle von "AutoHotkey".</p>

<h2>Revision 12 - 6. September 2008</h2>
<p>Fehler behoben: M&ouml;gliche Zugriffsverletzung beim Verwenden von property_get in einer internen Variable. -- DBGP</p>

<h2>Revision 11 - 5. September 2008</h2>
<p>Fehler behoben: Pr&uuml;fsumme von AutoHotkeySC.bin mittels Post-Build-Script entfernt (AutoHotkey muss installiert sein).</p>
<p>Hinzugef&uuml;gt: .L-Suffix f&uuml;r A_AhkVersion.</p>
<p>Hinzugef&uuml;gt: Vorl&auml;ufige Unterst&uuml;tzung f&uuml;r DBGp (interaktives Debuggen).</p>

<h2>Revision 10 - 2. August 2008</h2>
<p>Fehler behoben: WheelLeft/WheelRight-Unterst&uuml;tzung, dass seit Revision 9 fehlerhaft war.</p>

<h2>Revision 9 - 29. Juli 2008</h2>
<p>Fehler behoben: Erm&ouml;glicht Break/Continue in While.</p>
<p>Fehler behoben: TrayTip in Windows-Versionen au&szlig;er Englisch und m&ouml;glicherweise andere Nebeneffekte beim Verwenden von Vista-Versionen.</p>

<h2>Revision 8 - 27. Juli 2008</h2>
<p>Hinzugef&uuml;gt: #IfTimeout-Anweisung, um die Zeit&uuml;berschreitung f&uuml;r Auswertungen von #If-Ausdr&uuml;cke zu bestimmen (in Millisekunden). 1000 ist Standard.</p>
<p>Hinzugef&uuml;gt: Statisch-angenommener Modus f&uuml;r Funktionen. "Static" muss jeder lokalen/globalen Variablendeklaration vorangestellt werden.</p>
<p>Hinzugef&uuml;gt: One-True-Brace-Unterst&uuml;tzung f&uuml;r While.</p>
<p>Ge&auml;ndert: While setzt nun A_Index, wenn der Durchlauf beginnt.</p>

<h2>Revision 7 - 26. Juli 2008</h2>
<p>Hinzugef&uuml;gt: IsFunc(Funktionsname) - Gibt eine Zahl ungleich 0 zur&uuml;ck, wenn der Funktionsname im Script oder als interne Funktion existiert.</p>

<h2>Revision 5 - 19. Juli 2008</h2>
<p>Veraltete Referenzen auf Test-Scripts entfernt.</p>
<p>Einfacher Standard-Test-Script hinzugef&uuml;gt.</p>

<h2>Revision 4 - 18. Juli 2008</h2>
<p>Hinzugef&uuml;gt: #If (Ausdruck) - Vergleichbar mit #IfWinActive, aber f&uuml;r beliebige Ausdr&uuml;cke.</p>
<p>Hinzugef&uuml;gt: WheelLeft, WheelRight - Unterst&uuml;tzung f&uuml;r WM_MOUSEHWHEEL, eingef&uuml;hrt durch Windows Vista. (Ben&ouml;tigt Vista).</p>
<p>Hinzugef&uuml;gt: While, Ausdruck - Schleife, w&auml;hrend eine Bedingung wahr ist.</p>
<p>Hinzugef&uuml;gt: A_IsPaused - Wahr, wenn der darunterliegende Thread pausiert ist.</p>
<p>Hinzugef&uuml;gt: A_IsCritical - Wahr, wenn der aktuelle Thread mithilfe des "Critical"-Befehls als unterbrechungsfrei markiert ist.</p>
<p>Ge&auml;ndert: Erlaubt eine beliebige Anzahl an Parametern, die an dynamischen Funktionsaufrufen &uuml;bergeben werden k&ouml;nnen.</p>
<p>Fehler behoben: Zugriffsverletzung, verursacht durch WinGetClass und Unterklassenfenster.</p>
<p>Fehler behoben: Zugriffsverletzung, verursacht durch leere dynamische Funktionsreferenzen.</p>

<p>&nbsp;</p>
</body>
</html>