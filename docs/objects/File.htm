<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Datei-Objekt</title>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<link href="../css/default.css" rel="stylesheet" type="text/css">
</head>
<body>
<script src="../../NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<h1>Datei-Objekt <span class="ver">[AHK_L 42+]</span></h1>

<p>Erm&ouml;glicht eine Schnittstelle f&uuml;r die Dateibearbeitung. <a href="../commands/FileOpen.htm">FileOpen</a> gibt ein Objekt dieses Typs zur&uuml;ck.</p>

<div class="methodShort" id="Read"><h2>Read</h2>
<p>Liest eine Zeichenfolge aus der Datei und r&uuml;ckt dabei den Dateizeiger vor.</p>
<pre class="Syntax">String := Datei.Read([Zeichen])</pre>
<table class="info">
  <tr><td width="15%">Zeichen</td><td width="85%">Die maximale Anzahl der zu lesenden Zeichen. Wenn weggelassen, dann wird der Rest der Datei gelesen und als ein String zur&uuml;ckgegeben.</td></tr>
  <tr><td><b>R&uuml;ckgabe</b></td><td>Ein String.</td></tr>
</table></div>

<div class="methodShort" id="Write"><h2>Write</h2>
<p>Schreibt eine Zeichenfolge in die Datei und r&uuml;ckt dabei den Dateizeiger vor.</p>
<pre class="Syntax">Datei.Write(String)</pre>
<table class="info">
  <tr><td width="15%">String</td><td width="85%">Ein String.</td></tr>
  <tr><td><b>R&uuml;ckgabe</b></td><td>Die Anzahl der Bytes (nicht Zeichen), die geschrieben wurden. </td></tr>
</table></div>

<div class="methodShort" id="ReadLine"><h2>ReadLine</h2>
<p>Liest eine Textzeile aus der Datei und r&uuml;ckt dabei den Dateizeiger vor.</p>
<pre class="Syntax">Zeile := Datei.ReadLine()</pre>
<table class="info">
  <tr><td width="15%"><b>R&uuml;ckgabe</b></td><td width="85%">Eine Textzeile.  Sie enth&auml;lt <code>`n</code>, <code>`r`n</code> oder <code>`r</code>, abh&auml;ngig von der Datei und den EOL-Flags, die zum &Ouml;ffnen der Datei verwendet wurden.</td></tr>
</table></div>

<div class="methodShort" id="WriteLine"><h2>WriteLine</h2>
<p>Schreibt eine Zeichenfolge gefolgt von <code>`n</code> oder <code>`r`n</code>, abh&auml;ngig von den EOL-Flags, die zum &Ouml;ffnen der Datei verwendet wurden. Der Dateizeiger wird dabei vorger&uuml;ckt.</p>
<pre class="Syntax">Datei.WriteLine([String])</pre>
<table class="info">
  <tr><td width="15%">String</td><td width="85%">Ein optionaler String.</td></tr>
  <tr><td><b>R&uuml;ckgabe</b></td><td>Die Anzahl der Bytes (nicht Zeichen), die geschrieben wurden. </td></tr>
</table></div>

<div class="methodShort" id="ReadNum"><h2>Read<i>Num</i></h2>
<p>Liest eine Zahl aus der Datei und r&uuml;ckt dabei den Dateizeiger vor.</p>
<pre class="Syntax">Zahl := Datei.Read<i>Zahlentyp</i>()</pre>
<table class="info">
  <tr><td width="15%"><i>Zahlentyp</i></td><td width="85%">Einen der folgenden Typen direkt als Teil der Funktion angegeben:<br>UInt, Int, Int64, Short, UShort, Char, UChar, Double oder Float.</td></tr>
  <tr><td><b>R&uuml;ckgabe</b></td><td>Eine Zahl bei Erfolg, ansonsten ein leerer String.</td></tr>
</table></div>

<div class="methodShort" id="WriteNum"><h2>Write<i>Num</i></h2>
<p>Schreibt eine Zahl in die Datei und r&uuml;ckt dabei den Dateizeiger vor.</p>
<pre class="Syntax">Datei.Write<i>Zahlentyp</i>(Zahl)</pre>
<table class="info">
  <tr><td width="15%"><i>Zahlentyp</i></td><td width="85%">Einen der folgenden Typen direkt als Teil der Funktion angegeben:<br>UInt, Int, Int64, Short, UShort, Char, UChar, Double oder Float.</td></tr>
  <tr><td>Zahl</td><td>Eine Zahl.</td></tr>
  <tr><td><b>R&uuml;ckgabe</b></td><td>Die Anzahl der Bytes, die geschrieben wurden. Zum Beispiel wird WriteUInt eine 4 bei Erfolg zur&uuml;ckgeben.</td></tr>
</table></div>

<div class="methodShort" id="RawRead"><h2>RawRead</h2>
<p>Liest unbearbeitete Bin&auml;rdaten aus der Datei in den Speicher.  Falls eine Variable angegeben ist, dann wird sie je nach Bedarf automatisch erweitert.</p>
<pre class="Syntax">Datei.RawRead(VarOderAdresse, Bytes)</pre>
<table class="info">
  <tr><td width="15%">VarOderAdresse</td><td width="85%">Eine Variable oder Speicheradresse, in der die Daten kopiert werden.  Die Verwendung hat &Auml;hnlichkeit mit <a href="../Functions.htm#NumGet">NumGet</a>.</td></tr>
  <tr><td>Bytes</td><td>Die maximale Anzahl der zu lesenden Bytes.</td></tr>
  <tr><td><b>R&uuml;ckgabe</b></td><td>Die Anzahl der Bytes, die gelesen wurden.</td></tr>
</table></div>

<div class="methodShort" id="RawWrite"><h2>RawWrite</h2>
<p>Schreibt unbearbeitete Bin&auml;rdaten in die Datei.</p>
<pre class="Syntax">Datei.RawWrite(VarOderAdresse, Bytes)</pre>
<table class="info">
  <tr><td width="15%">VarOderAdresse</td><td width="85%">Eine Variable, die die Daten oder die Adresse der Daten im Speicher enth&auml;lt.  Die Verwendung hat &Auml;hnlichkeit mit <a href="../Functions.htm#NumPut">NumPut</a>.</td></tr>
  <tr><td>Bytes</td><td>Die maximale Anzahl der zu schreibenden Bytes.</td></tr>
  <tr><td><b>R&uuml;ckgabe</b></td><td>Die Anzahl der Bytes, die geschrieben wurden.</td></tr>
</table></div>

<div class="methodShort" id="Seek"><h2>Seek</h2>
<p>Verschiebt den Dateizeiger.</p>
<pre class="Syntax">Datei.Seek(Distanz [, Ausgangspunkt = 0])
Datei.Position := Distanz
Datei.Pos := Distanz</pre>
<table class="info">
  <tr><td width="15%">Distanz</td><td width="85%">Die Anzahl der Bytes, die zur&uuml;ckgelegt werden sollen. Niedrigere Werte sind n&auml;her an den Anfang der Datei.</td></tr>
  <tr><td>Ausgangspunkt</td><td>Startpunkt zum Verschieben des Dateizeigers. Kann nur eine der folgenden Angaben sein:<ul>
      <li>0 (SEEK_SET): Anfang der Datei. <i>Distanz</i> muss 0 oder gr&ouml;&szlig;er sein.</li>
      <li>1 (SEEK_CUR): Aktuelle Position des Dateizeigers.</li>
      <li>2 (SEEK_END): Ende der Datei. <i>Distanz</i> sollte normalerweise negativ sein.</li>
    </ul>Wenn weggelassen, dann ist der <i>Ausgangspunkt</i> standardm&auml;&szlig;ig SEEK_END, solange die Distanz negativ ist, ansonsten SEEK_SET.</td></tr>
  <tr><td><b>R&uuml;ckgabe</b></td><td>Ein Wert ungleich 0 bei Erfolg, ansonsten 0. </td></tr>
</table></div>

<div class="methodShort" id="Tell"><h2>Tell</h2>
<pre class="Syntax">Pos := Datei.Tell()
Pos := Datei.Position
Pos := Datei.Pos</pre>
<table class="info">
  <tr><td width="15%"><b>R&uuml;ckgabe</b></td><td width="85%">Die aktuelle Position des Dateizeigers, wobei 0 der Anfang der Datei ist.</td></tr>
</table></div>

<div class="methodShort" id="Length"><h2>Length</h2>
<p>Ermittelt oder bestimmt die Gr&ouml;&szlig;e der Datei.</p>
<pre class="Syntax">Dateigr&ouml;&szlig;e := Datei.Length
Datei.Length := NeueGr&ouml;&szlig;e</pre>
<table class="info">
  <tr><td width="15%">NeueGr&ouml;&szlig;e</td><td width="85%">Die neue Gr&ouml;&szlig;e der Datei in Bytes.</td></tr>
  <tr><td><b>R&uuml;ckgabe</b></td><td>Die Gr&ouml;&szlig;e der Datei in Bytes.</td></tr>
</table></div>

<div class="methodShort" id="AtEOF"><h2>AtEOF</h2>
<pre class="Syntax">IsAtEOF := Datei.AtEOF</pre>
<table class="info">
  <tr><td width="15%"><b>R&uuml;ckgabe</b></td><td width="85%">Ein Wert ungleich 0, wenn der Dateizeiger das Ende der Datei erreicht hat, ansonsten 0.</td></tr>
</table></div>

<div class="methodShort" id="Close"><h2>Close</h2>
<p>Schlie&szlig;t die Datei, l&ouml;scht alle Daten im Zwischenspeicher auf der Festplatte und hebt die Sperrungen auf.  Obwohl die Datei beim Freigeben des Objekts automatisch geschlossen wird, ist es empfehlenswert, die Datei so schnell wie m&ouml;glich zu schlie&szlig;en.</p>
<pre class="Syntax">Datei.Close()</pre>
<p><i>Keine Parameter oder R&uuml;ckgabewerte.</i></p></div>

<div class="methodShort" id="Encoding"><h2>Encoding</h2>
<p>Ermittelt oder setzt die Textkodierung f&uuml;r das Datei-Objekt.</p>
<pre class="Syntax">Kodierung := Datei.Encoding
Datei.Encoding := Kodierung</pre>
<table class="info">
  <tr><td width="15%">Kodierung</td><td width="85%">Ein Stringformat, das von <a href="../commands/FileEncoding.htm">FileEncoding</a> akzeptiert wird.</td></tr>
</table></div>

<div class="methodShort" id="__Handle"><h2>__Handle</h2>
<pre class="Syntax">Datei.__Handle</pre>
<table class="info">
  <tr><td width="15%"><b>R&uuml;ckgabe</b></td><td width="85%">Ein System-Datei-Handle, das f&uuml;r DllCall verwendet werden kann. Siehe <a href="http://msdn.microsoft.com/en-us/library/aa363858.aspx">CreateFile</a>.</td></tr>
</table></div>

</body>
</html>
