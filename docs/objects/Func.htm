<!DOCTYPE HTML>
<html>
<head>
<title>Funktionsobjekt</title>
<meta name="keywords" content="Objekt">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../css/default.css" rel="stylesheet" type="text/css">
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-28224374-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
</head>
<body>
<div id="wrapper">
  <div id="content"> 
    <script src="../navbar/NavScript.js" type="text/javascript"></script> 
    <script type="text/javascript">WriteNavLink(1);</script>
    <h1>Funktionsobjekt <span class="ver">[v1.1.00+]</span></h1>
    <p>Repr&auml;sentiert eine benutzerdefinierte oder interne Funktion, die vom Script aufgerufen werden kann.</p>
    <p>Ein Verweis auf ein Funktionsobjekt wird auch als <em>Funktionsverweis</em> bezeichnet. Um ein Funktionsverweis zu erhalten, verwendet die Func-Funktion zum Beispiel wie folgt:</p>
    <pre>fn := Func("Func")
MsgBox % fn.Name "() ist " (fn.IsBuiltIn ? "intern." : "benutzerdefiniert.")</pre>
    <br>
    <div class="methodShort" id="Call">
      <h2>Call</h2>
      <p>Ruft die Funktion auf.</p>
      <pre class="Syntax">Funktion.(<i>Parameter</i>)</pre>
      <p>Parameter und R&uuml;ckgabewerte werden durch die Funktion definiert.</p>
      <p>Diese Syntax ist auch g&uuml;ltig, wenn <i>Funktion</i> ein Funktionsname oder ein benutzerdefiniertes Objekt ist, das __Call implementiert.</p>
    </div>
    <div class="methodShort" id="Name">
      <h2>Name</h2>
      <p>Gibt den Funktionsnamen zur&uuml;ck.</p>
      <pre class="Syntax">Funktion.Name</pre>
    </div>
    <div class="methodShort" id="IsBuiltIn">
      <h2>IsBuiltIn</h2>
      <p>Gibt <i>wahr</i> zur&uuml;ck, falls die Funktion eine interne Funktion ist, ansonsten <i>falsch</i>.</p>
      <pre class="Syntax">Funktion.IsBuiltIn</pre>
    </div>
    <div class="methodShort" id="IsVariadic">
      <h2>IsVariadic</h2>
      <p>Gibt <i>wahr</i> zur&uuml;ck, falls die Funktion <a href="../Functions.htm#Variadic">variadisch</a> ist, ansonsten <i>falsch</i>.</p>
      <pre class="Syntax">Funktion.IsVariadic</pre>
    </div>
    <div class="methodShort" id="MinParams">
      <h2>MinParams</h2>
      <p>Gibt die Anzahl der ben&ouml;tigten Parameter zur&uuml;ck.</p>
      <pre class="Syntax">Funktion.MinParams</pre>
    </div>
    <div class="methodShort" id="MaxParams">
      <h2>MaxParams</h2>
      <p>Gibt die Anzahl der offiziell deklarierten Parameter einer benutzerdefinierten Funktion oder die maximale Anzahl der Parameter einer internen Funktion zur&uuml;ck.</p>
      <pre class="Syntax">Funktion.MaxParams</pre>
      <p>Wenn die Funktion <a href="../Functions.htm#Variadic">variadisch</a> ist, dann kennzeichnet der R&uuml;ckgabewert die maximale Anzahl an Parametern, die von der Funktion akzeptiert werden kann, ohne einen &Uuml;berlauf zu riskieren.</p>
    </div>
    <div class="methodShort" id="IsByRef">
      <h2>IsByRef()</h2>
      <p>Damit kann festgestellt werden, ob der Parameter ein ByRef ist.</p>
      <pre class="Syntax">Funktion.IsByRef(ParamIndex)</pre>
      <table class="info">
        <tr>
          <td style="width: 15%;">ParamIndex</td>
          <td style="width: 85%;">Optional: die 1-basierte Index eines Parameters. Wenn weggelassen, dann kennzeichnet der R&uuml;ckgabewert, ob die Funktion &uuml;berhaupt ByRef-Parameter hat.</td>
        </tr>
        <tr>
          <td><b>R&uuml;ckgabe</b></td>
          <td>Ein leerer String, wenn die Funktion eine interne Funktion ist oder <i>ParamIndex</i> ung&uuml;ltig ist, ansonsten kennzeichnet ein boolescher Wert, ob der Parameter ein ByRef ist.</td>
        </tr>
      </table>
    </div>
    <div class="methodShort" id="IsOptional">
      <h2>IsOptional()</h2>
      <p>Damit kann festgestellt werden, ob der Parameter optional ist.</p>
      <pre class="Syntax">Funktion.IsOptional(ParamIndex)</pre>
      <table class="info">
        <tr>
          <td style="width: 15%;">ParamIndex</td>
          <td style="width: 85%;">Optional: die 1-basierte Index eines Parameters. Wenn weggelassen, dann kennzeichnet der R&uuml;ckgabewert, ob die Funktion &uuml;berhaupt optionale Parameter hat.</td>
        </tr>
        <tr>
          <td><b>R&uuml;ckgabe</b></td>
          <td>Einen leeren String, wenn <i>ParamIndex</i> ung&uuml;ltig ist, ansonsten kennzeichnet ein boolescher Wert, ob der Parameter optional ist.</td>
        </tr>
      </table>
      <p>Parameter m&uuml;ssen nicht offiziell deklariert werden, wenn die Funktion variadisch ist. Interne Funktionen werden unterst&uuml;tzt.</p>
    </div>
  </div>
</div>
</body>
</html>