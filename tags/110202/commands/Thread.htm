<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Thread</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="../css/default.css" rel="stylesheet" type="text/css">
</head>
<body>

<h1>Thread</h1>

<p>Bestimmt die Priorität oder Unterbrechbarkeit von <a href="../misc/Threads.htm">Threads</a>. Kann vorübergehend auch alle <a href="SetTimer.htm">Timer</a> deaktivieren.</p>

<pre class="Syntax">Thread, NoTimers [, false]
Thread, Priority, n
Thread, Interrupt [, Dauer, Zeilenanzahl]</pre>
<p><br> <strong>Thread, NoTimers [, false]</strong>: Verhindert Unterbrechungen von jedem <a href="SetTimer.htm">Timer</a>, bis der <a href="../misc/Threads.htm">aktuelle Thread</a> entweder endet, "<em>Thread, NoTimers, false</em>" ausgeführt wird oder von einem anderen Thread unterbrochen wird, der Timer erlaubt (in diesem Fall können Timer den unterbrechenden Thread unterbrechen, bis er endet).</p>
<p>Wenn "<em>Thread NoTimers</em>" nicht im automatischen Ausführungsbereich (oberster Teil des Scripts) ausgeführt wird, dann sind alle Threads anfänglich von Timer unterbrechbar (obwohl die Einstellungen von "Thread Interrupt" [unten] noch verwenden werden). Wenn im Gegensatz dazu <em>NoTimers</em> im automatischen Ausführungsbereich aktiviert ist, dann ist jeder neu ausgeführte <a href="../misc/Threads.htm">Thread</a> (z. B. <a href="../Hotkeys.htm">Hotkey</a>, <a href="Menu.htm">benutzerdefinierter Menüpunkt</a> oder <a href="SetTimer.htm">Timer</a>) immun gegen Unterbrechungen vom Timer.</p>
<p>Unabhängig von der Standardeinstellung werden Timer immer funktionieren, auch wenn das Script keine Threads mehr hat (es sei denn, <a href="Pause.htm">Pause</a> wurde aktiviert).</p>
<p>"<em>Thread, NoTimers</em>" ist gleichbedeutend mit "<em>Thread, NoTimers, true</em>". Da darüber hinaus der True/False-Parameter ein <a href="../Variables.htm#Expressions">Ausdruck</a> sein kann, wird True zu 1 und False zu 0 aufgelöst.</p>
<p><strong><br> <a name="Priority"></a>Thread, Priority, n</strong>: Verwendet für <strong>n</strong> ein Integer zwischen -2147483648 und 2147483647 (oder ein <a href="../Variables.htm#Expressions">Ausdruck</a>), um die Priorität des aktuellen Threads zu bestimmen. Das hat keine Auswirkung auf andere Threads. Siehe <a href="../misc/Threads.htm">Threads</a> für weitere Details.</p>
<p>Aufgrund der Fähigkeit Ereignisse zwischenzuspeichern, ist <a href="Critical.htm">"Critical"</a> dem Befehl "Thread Priority" im Allgemeinen überlegen.</p>
<p>Zusätzlich kann die Prioritätsstufe des gesamten Scripts im Betriebssystem wie im folgenden Beispiel geändert werden: <a href="Process.htm"><em>Process</em></a><em>, Priority,, High</em></p>
<p><strong><br> Thread, Interrupt [, Dauer, Zeilenanzahl]</strong>: Dieser Befehl sollte sparsam verwendet werden, da die meisten Scripts konsequenter mit Einstellungen ausgeführt werden, die dicht bei den Standardwerten liegen.</p>
<p>Standardmäßig ist jeder neu ausgeführte Thread für eine <em>Dauer</em> von 15 Millisekunden oder bei einer <em>Zeilenanzahl</em> von 1000 Zeilen unterbrechungsfrei, je nachdem, was zuerst kommt. Damit kann der Thread zum Abschluss kommen, anstatt sofort von einem anderen Thread unterbrochen zu werden, der darauf wartet, ausgeführt werden zu können (z. B. ein zwischengespeicherter <a href="../Hotkeys.htm">Hotkey</a> oder mehrere <a href="SetTimer.htm">zeitlich festgelegte Subroutinen</a>, die zur Ausführung eingeführt werden).</p>
<p>Wenn einer der beiden Komponenten 0 ist, dann wird jeder neu ausgeführte Thread sofort unterbrochen. Wenn einer der beiden Komponenten -1 ist, dann kann der Thread aufgrund der Komponente nicht unterbrochen werden. Der Höchstwert beider Komponenten ist 2147483647.</p>
<p>Die Interrupt-Einstellung ist global, welche von allen nachfolgenden Threads beachtet wird, selbst wenn die Einstellung außerhalb vom <a href="../Scripts.htm#auto">automatischen Ausführungsbereich</a> geändert wird. Allerdings bleiben <a href="../misc/Threads.htm">unterbrochene Threads</a> unberührt, weil ihre Unterbrechbarkeit bereits verwirkt ist. Der <a href="../misc/Threads.htm">aktuelle Thread</a> wird ebenfalls nicht beeinflusst, es sei denn, es ist beim Ändern der <em>Zeilenanzahl</em>-Komponente unterbrechungsfrei, wobei in diesem Fall die neue <em>Zeilenanzahl</em> aktiv wird.</p>
<p>Wenn ein <a href="../Hotkeys.htm">Hotkey</a> gedrückt oder ein <a href="Menu.htm">benutzerdefinierter Menüpunkt</a> ausgewählt wird, während der <a href="../misc/Threads.htm">aktuelle Thread</a> unterbrechungsfrei ist, dann wird das Ereignis zwischengespeichert. Mit anderen Worten wird es ausgeführt, wenn der aktuelle Thread beendet oder unterbrechbar wird, je nachdem, was zuerst kommt. Aber nicht, wenn der aktuelle Thread unterbrechbar wird, bevor er endet, und eine höhere <a href="#Priority">Priorität</a> als das zwischengespeicherte Ereignis hat. In diesem Fall wird das zwischengespeicherte Ereignis verworfen.</p>
<p>Unabhängig von dieser Einstellung wird ein Thread unterbrechbar, wenn ein <a href="MsgBox.htm">MsgBox</a>-, <a href="InputBox.htm">InputBox</a>-, <a href="FileSelectFile.htm">FileSelectFile</a>- oder <a href="FileSelectFolder.htm">FileSelectFolder</a>-Dialogfenster angezeigt wird. </p>
<p>Einer der Parameter kann leer gelassen werden, um dessen Änderung zu vermeiden.</p>
<h3>Bemerkungen</h3>
<p>Wegen der größeren Flexibilität und der Fähigkeit, Ereignisse zwischenzuspeichern, ist der Befehl <a href="Critical.htm">"Critical"</a> im Allgemeinen nützlicher als "Thread Interrupt" und "Thread Priority".</p>
<h3>Verwandte Befehle</h3>
<p><a href="Critical.htm">Critical</a>, <a href="../misc/Threads.htm">Threads</a>, <a href="Hotkey.htm">Hotkey</a>, <a href="Menu.htm">Menu</a>, <a href="SetTimer.htm">SetTimer</a>, <a href="Process.htm">Process</a> </p>
<h3>Beispiel</h3>
<pre class="NoIndent">Thread, priority, 1 <em>; Stellt die Priorität des aktuellen Threads etwas über dem Durchschnitt.</em>
Thread, interrupt, 0  <em>; Jeder neu ausgeführte Thread ist sofort unterbrechbar.</em>
Thread, interrupt, 50, 2000  <em>; Jeder Thread wird nach 50ms oder 2000 Zeilen unterbrechbar, je nachdem, was zuerst kommt.</em></pre>

</body>
</html>
