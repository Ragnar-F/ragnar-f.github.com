<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Critical</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="../css/default.css" rel="stylesheet" type="text/css">
</head>
<body>

<h1>Critical</h1>

<p>Verhindert, dass der <a href="../misc/Threads.htm">aktuelle Thread</a> von anderen Threads unterbrochen wird.</p>

<pre class="Syntax">Critical [, Off]
Critical 50 <em>; Siehe <a href="#Interval">Bemerkungen</a>. </em></pre>
<p>Wenn der erste Parameter nicht vorhanden ist (oder "On" enthält), dann wird der <a href="../misc/Threads.htm">aktuelle Thread</a> kritisch gemacht, d. h. das dieser Thread nicht von anderen Threads unterbrochen werden kann. Wenn der erste Parameter "Off" enthält (oder die Nummer 0 seit v1.0.48), dann kann der aktuelle Thread sofort unterbrochen werden, unabhängig der Einstellungen von "<a href="Thread.htm">Thread Interrupt</a>".</p>
<p>Im Gegensatz zu Threads mit <a href="../misc/Threads.htm">hoher Priorität</a> werden Ereignisse während eines kritischen Threads nicht verworfen. Wenn der Benutzer beispielsweise einen <a href="../Hotkeys.htm">Hotkey</a> drückt, während der aktuelle Thread kritisch ist, dann wird dieser Hotkey auf unbestimmte Zeit zwischengespeichert, bis der aktuelle Thread beendet oder unkritisch wird. Danach wird der Hotkey als neuer Thread ausgeführt.</p>
<p>Ein kritischer Thread wird bei Notfällen unterbrochen. Notfälle sind: 1) die <a href="OnExit.htm">OnExit</a>-Subroutine; 2) irgendeine <a href="OnMessage.htm">OnMessage()</a>-Funktion, die eine Nachrichtennummer weniger als 0x312 überwacht (oder ein <a href="RegisterCallback.htm">Callback</a>, der von so einer Nachricht ausgelöst wird); und 3) irgendein <a href="RegisterCallback.htm">Callback</a>, der indirekt vom kritischen Thread selbst ausgelöst wird (z. B. mittels <a href="PostMessage.htm">SendMessage</a> oder <a href="DllCall.htm">DllCall</a>). Um diese Unterbrechungen zu vermeiden, deaktiviert vorübergehend solche Funktionen.</p>
<p>Wenn zwischengespeicherte Ereignisse darauf warten, neue Threads zu starten, dann führt "Critical Off" nicht zu einer sofortigen Unterbrechung des aktuellen Threads. Daher werden erst durchschnittlich 5 ms vergehen, bevor eine Unterbrechung stattfindet. Dadurch ist es zu mehr als 99,999 % wahrscheinlich, dass mindestens eine Zeile nach "Critical Off" ausgeführt wird, bevor eine Unterbrechung erfolgt. Unterbrechungen können sofort mithilfe einer Verzögerung wie <a href="Sleep.htm">Sleep -1</a> oder <a href="WinWait.htm">WinWait</a> erzwungen werden.</p>
<p>Ein kritischer Thread wird unterbrochen, wenn eine <a href="MsgBox.htm">MsgBox</a> oder ein anderes Dialogfenster angezeigt ist. Im Gegensatz zu <a href="Thread.htm">"Thread Interrupt"</a> wird der Thread wieder kritisch, nachdem der Benutzer das Dialogfenster schließt.</p>
<p>Siehe <a href="../Variables.htm#IsCritical">A_IsCritical</a> für das Speichern und Wiederherstellen der aktuellen Einstellung von Critical. Da Critical aber eine thread-spezifische Einstellung ist, wird der nachfolgende/wieder aufgenommene Thread (sofern vorhanden) automatisch unkritisch, wenn ein kritischer Thread endet. Folglich gibt es keinen Grund "Critical Off" am Ende eines Threads einzufügen.</p>
<p>Wenn Critical nicht im automatischen Ausführungsbereich (oberster Teil des Scripts) ausgeführt wird, dann starten alle Threads unkritisch (obwohl die Einstellungen von <a href="Thread.htm">"Thread Interrupt"</a> noch verwendet werden). Wenn im Gegensatz dazu Critical im automatischen Ausführungsbereich aktiviert ist, dann startet jeder neu ausgeführte <a href="../misc/Threads.htm">Thread</a> (z. B. <a href="../Hotkeys.htm">Hotkey</a>, <a href="Menu.htm">benutzerdefinierter Menüpunkt</a> oder <a href="SetTimer.htm">zeitlich festgelegte</a> Subroutine) kritisch.</p>
<p>Der Befehl "<a href="Thread.htm">Thread NoTimers</a>" ist vergleichbar mit Critical, außer dass nur Unterbrechungen von <a href="SetTimer.htm">Timers</a> verhindert werden.</p>
<p>Seit v1.0.47 tritt <a href="SetBatchLines.htm"><em>SetBatchLines -1</em></a> für den <a href="../misc/Threads.htm">aktuellen Thread</a> in Effekt, wenn Critical aktiviert wird.</p>
<p><a name="Interval"></a>Seit v1.0.47 kann Critical auch aktiviert werden, wenn der erste Parameter eine positive Zahl enthält (z. B. <em>Critical 30</em>). Dadurch wird das Überprüfungsintervall (in ms) in der internen Nachrichtenwarteschlange geändert. Wenn nicht spezifiziert, dann werden die Nachrichten bei "Critical On" alle 16 ms überprüft, bei "Critical Off" alle 5 ms. Bei Erhöhung des Intervalls wird die Ankunft von Nachrichten/Ereignissen zwischengespeichert, um dem <a href="../misc/Threads.htm">aktuellen Thread</a> mehr Ausführungszeit zu verschaffen. Dadurch ist die Chance gering, dass bestimmte <a href="OnMessage.htm">OnMessage()</a>- und <a href="Gui.htm#DefaultWin">GUI-Ereignisse</a> aufgrund von "Thread wird bereits ausgeführt" verloren gehen. Wartende Befehle (z. B. <a href="Sleep.htm">Sleep</a> und <a href="WinWait.htm">WinWait</a>) werden Nachrichten ohne Rücksicht auf diese Einstellung überprüfen (als Übergangslösung kann <em>DllCall("Sleep", UInt, 500)</em> verwendet werden). Hinweis: Wird das Intervall der Nachrichtenüberprüfung zu stark erhöht, dann wird die Reaktionsfähigkeit von verschiedenen Ereignissen möglicherweise reduziert (z. B. bei der grafischen Erstellung eines <a href="Gui.htm">GUI</a>-Fensters).</p>
<h3>Verwandte Befehle</h3>
<p><a href="Thread.htm">Thread (Befehl), </a><a href="../misc/Threads.htm">Threads</a>, <a href="_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a>, <a href="_MaxThreadsBuffer.htm">#MaxThreadsBuffer</a>, <a href="OnMessage.htm">OnMessage()</a>, <a href="RegisterCallback.htm">RegisterCallback()</a>, <a href="Hotkey.htm">Hotkey</a>, <a href="Menu.htm">Menu</a>, <a href="SetTimer.htm">SetTimer</a></p>
<h3>Beispiel</h3>
<pre class="NoIndent">#space::  <em>; Hotkey: Win+Leertaste</em>
Critical
ToolTip Es wird kein neuer Thread gestartet, solange dieser ToolTip nicht verschwindet.
Sleep 3000
ToolTip  <em>; ToolTip ausschalten.</em>
Return  <em>; Beendet den Thread. Jeder nachfolgender Thread ist laut Definition unkritisch.</em></pre>

</body>
</html>
