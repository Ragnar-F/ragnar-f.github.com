<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>StrPut / StrGet</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="../css/default.css" rel="stylesheet" type="text/css">
</head>
<body>

<h1>StrPut() / StrGet() <span class="ver">[AHK_L 46+]</span></h1>

<p>Kopiert einen String zu oder von einer Speicheradresse und ändert optional den Zeichensatz.</p>

<pre class="Syntax">StrPut(String [, Kodierung = <i>Keine</i> ] )
StrPut(String, Adresse [, Länge] [, Kodierung = <i>Keine</i> ] )
StrGet(Adresse [, Länge] [, Kodierung= <i>Keine</i> ] )</pre>
<h3>Parameter</h3>
<table class="info">
  <tr><td width="15%">String</td><td width="85%">Ein beliebiger String. Zahlen werden auch akzeptiert.</td></tr>
  <tr><td>Adresse</td><td>Die Adresse, an der der String geschrieben oder gelesen wird.</td></tr>
  <tr><td>Länge</td><td>Die maximale Anzahl der zu lesenden/schreibenden Zeichen, einschließlich der Null-Terminator je nach Bedarf.  Siehe Rückgabewert.</td></tr>
  <tr><td>Kodierung</td><td>Die Quellkodierung für StrGet oder Zielkodierung für StrPut, zum Beispiel: "UTF-8", "UTF-16" oder "CP936".  Wenn die <em>Adresse</em> und <em>Länge</em> nicht angegeben ist, dann muss eine numerische Kennung mit "CP" vorangestellt werden.  Verwendet einen leeren String oder "CP0", um den Standard-ANSI-Zeichensatz des Systems zu benutzen.</td></tr>
</table>

<h3>Rückgabewert</h3>
<p>Bei ungültigen Parametern wird ein leerer String zurückgegeben.</p>
<p>StrPut gibt die Anzahl der geschriebenen Zeichen, ohne <i>Adresse</i> die notwendige Puffergröße in Zeichen oder bei Misserfolg eine 0 zurück.  Wenn die <em>Länge</em> kleiner als die Länge des Quellstrings ist, dann schlägt die Funktion fehl und gibt eine 0 zurück.  Wenn die <em>Länge</em> identisch mit der Länge des Quellstrings ist, dann ist der String nicht null-terminiert. Ansonsten beinhaltet die zurückgegebene Anzahl ein Null-Terminator.</p>
<p>StrGet gibt den angeforderten String nach einer Umwandlung zurück.</p>

<h3>Bemerkungen</h3>
<p>Beachtet, dass der <i>String</i>-Parameter von StrPut und der Rückgabewert von StrGet immer in der <a href="../Compat.htm#Format">nativen Kodierung</a> des Scripts sind, während <i>Kodierung</i> die Kodierung des Strings festgelegt, der von oder zur <i>Adresse</i> gelesen bzw. geschrieben wird. Wenn keine <em>Kodierung</em> angegeben ist, dann wird der String einfach ohne stattfindende Umwandlung angepasst oder kopiert.</p>
<p>Wenn die Umwandlung zwischen den Zeichensätzen notwendig ist, dann unterscheidet sich die erforderliche Puffergröße möglicherweise von der Größe des <em>Quellstrings</em>.</p>
<p>Scripts, die notwendigerweise kompatibel mit AutoHotkey Basic sein müssen, können StrPut und StrGet immer noch verwenden, wenn die <a href="http://www.autohotkey.com/forum/topic59738.html">entsprechenden Script-Dateien</a> in eine <a href="../Functions.htm#lib">Funktionsbibliothek</a> installiert werden. Diese Scripts können im <a href="http://www.autohotkey.com/forum/">AutoHotkey Community Forum</a> gefunden werden.</p>

<h3>Verwandte Befehle</h3>
<p><a href="../Compat.htm">Script-Kompatibilität</a>, <a href="FileEncoding.htm">FileEncoding</a>, <a href="VarSetCapacity.htm">VarSetCapacity()</a></p>

<h3>Beispiele</h3>
<p>Entweder <em>Länge</em> oder die <em>Kodierung</em> kann direkt nach der <em>Adresse</em> angegeben werden, dabei darf die <em>Kodierung</em> jedoch nicht numerisch sein:</p>
<pre class="NoIndent">StrA := StrGet(AdresseA, "cp0")     <em>; OK</em>
StrA := StrGet(AdresseA, Länge, 0) <em>; OK</em>
StrA := StrGet(AdresseA, 0)         <em>; Fehler</em></pre>

<p>StrPut kann einmal aufgerufen werden, um die erforderliche Puffergröße für einen String in bestimmter Kodierung zu berechnen und dann nochmal, um den String zu kodieren und ihn in den Puffer zu schreiben.  Wenn die Variablen häufig mit StrPut verwendet werden, dann kann diese Funktion in die <a href="../Functions.htm#lib">Bibliothek</a> aufgenommen werden:</p>
<pre class="NoIndent">StrPutVar(String, ByRef Variable, Kodierung)
{
    <em>; Kapazität sicherstellen.</em>
    VarSetCapacity(Variable, StrPut(String, Kodierung)
        <em>; StrPut gibt die Zeichenanzahl zurück, aber VarSetCapacity benötigt Bytes.</em>
        * ((Kodierung = "utf-16" || Kodierung = "cp1200") ? 2 : 1) )
    <em>; Kopiert oder wandelt den String um.</em>
    Return StrPut(String, &Variable, Kodierung)
}</pre>

</body>
</html>
